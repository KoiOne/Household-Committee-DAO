{"id":"fea2f3ec23a5baa124caa7ee2c50880b","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n */\ninterface IVotes {\n    /**\n     * @dev The signature used has expired.\n     */\n    error VotesExpiredSignature(uint256 expiry);\n\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/governance/utils/Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/Votes.sol)\npragma solidity ^0.8.20;\n\nimport {IERC5805} from \"../../interfaces/IERC5805.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Nonces} from \"../../utils/Nonces.sol\";\nimport {EIP712} from \"../../utils/cryptography/EIP712.sol\";\nimport {Checkpoints} from \"../../utils/structs/Checkpoints.sol\";\nimport {SafeCast} from \"../../utils/math/SafeCast.sol\";\nimport {ECDSA} from \"../../utils/cryptography/ECDSA.sol\";\nimport {Time} from \"../../utils/types/Time.sol\";\n\n/**\n * @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n * transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n * \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n * decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n * delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n *\n * This contract is often combined with a token contract such that voting units correspond to token units. For an\n * example, see {ERC721Votes}.\n *\n * The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n * at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n * cost of this history tracking optional.\n *\n * When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n * {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n * previous example, it would be included in {ERC721-_update}).\n */\nabstract contract Votes is Context, EIP712, Nonces, IERC5805 {\n    using Checkpoints for Checkpoints.Trace208;\n\n    bytes32 private constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address account => address) private _delegatee;\n\n    mapping(address delegatee => Checkpoints.Trace208) private _delegateCheckpoints;\n\n    Checkpoints.Trace208 private _totalCheckpoints;\n\n    /**\n     * @dev The clock was incorrectly modified.\n     */\n    error ERC6372InconsistentClock();\n\n    /**\n     * @dev Lookup to future votes is not available.\n     */\n    error ERC5805FutureLookup(uint256 timepoint, uint48 clock);\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n     * checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\n     */\n    function clock() public view virtual returns (uint48) {\n        return Time.blockNumber();\n    }\n\n    /**\n     * @dev Machine-readable description of the clock as specified in EIP-6372.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual returns (string memory) {\n        // Check that the clock was not modified\n        if (clock() != Time.blockNumber()) {\n            revert ERC6372InconsistentClock();\n        }\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) public view virtual returns (uint256) {\n        return _delegateCheckpoints[account].latest();\n    }\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _delegateCheckpoints[account].upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _totalCheckpoints.upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the current total supply of votes.\n     */\n    function _getTotalSupply() internal view virtual returns (uint256) {\n        return _totalCheckpoints.latest();\n    }\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) public view virtual returns (address) {\n        return _delegatee[account];\n    }\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual {\n        address account = _msgSender();\n        _delegate(account, delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > expiry) {\n            revert VotesExpiredSignature(expiry);\n        }\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        _useCheckedNonce(signer, nonce);\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Delegate all of `account`'s voting units to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address account, address delegatee) internal virtual {\n        address oldDelegate = delegates(account);\n        _delegatee[account] = delegatee;\n\n        emit DelegateChanged(account, oldDelegate, delegatee);\n        _moveDelegateVotes(oldDelegate, delegatee, _getVotingUnits(account));\n    }\n\n    /**\n     * @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n     * should be zero. Total supply of voting units will be adjusted with mints and burns.\n     */\n    function _transferVotingUnits(address from, address to, uint256 amount) internal virtual {\n        if (from == address(0)) {\n            _push(_totalCheckpoints, _add, SafeCast.toUint208(amount));\n        }\n        if (to == address(0)) {\n            _push(_totalCheckpoints, _subtract, SafeCast.toUint208(amount));\n        }\n        _moveDelegateVotes(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Moves delegated votes from one delegate to another.\n     */\n    function _moveDelegateVotes(address from, address to, uint256 amount) private {\n        if (from != to && amount > 0) {\n            if (from != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[from],\n                    _subtract,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(from, oldValue, newValue);\n            }\n            if (to != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[to],\n                    _add,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(to, oldValue, newValue);\n            }\n        }\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function _numCheckpoints(address account) internal view virtual returns (uint32) {\n        return SafeCast.toUint32(_delegateCheckpoints[account].length());\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function _checkpoints(\n        address account,\n        uint32 pos\n    ) internal view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _delegateCheckpoints[account].at(pos);\n    }\n\n    function _push(\n        Checkpoints.Trace208 storage store,\n        function(uint208, uint208) view returns (uint208) op,\n        uint208 delta\n    ) private returns (uint208, uint208) {\n        return store.push(clock(), op(store.latest(), delta));\n    }\n\n    function _add(uint208 a, uint208 b) private pure returns (uint208) {\n        return a + b;\n    }\n\n    function _subtract(uint208 a, uint208 b) private pure returns (uint208) {\n        return a - b;\n    }\n\n    /**\n     * @dev Must return the voting units held by an account.\n     */\n    function _getVotingUnits(address) internal view virtual returns (uint256);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.20;\n\nimport {IVotes} from \"../governance/utils/IVotes.sol\";\nimport {IERC6372} from \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Votes} from \"../../../governance/utils/Votes.sol\";\nimport {Checkpoints} from \"../../../utils/structs/Checkpoints.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n */\nabstract contract ERC20Votes is ERC20, Votes {\n    /**\n     * @dev Total supply cap has been exceeded, introducing a risk of votes overflowing.\n     */\n    error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n     *\n     * This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n     * so that checkpoints can be stored in the Trace208 structure used by {{Votes}}. Increasing this value will not\n     * remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n     * {_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n     * additional logic requires it. When resolving override conflicts on this function, the minimum should be\n     * returned.\n     */\n    function _maxSupply() internal view virtual returns (uint256) {\n        return type(uint208).max;\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n        if (from == address(0)) {\n            uint256 supply = totalSupply();\n            uint256 cap = _maxSupply();\n            if (supply > cap) {\n                revert ERC20ExceededSafeSupply(supply, cap);\n            }\n        }\n        _transferVotingUnits(from, to, value);\n    }\n\n    /**\n     * @dev Returns the voting units of an `account`.\n     *\n     * WARNING: Overriding this function may compromise the internal vote accounting.\n     * `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change.\n     */\n    function _getVotingUnits(address account) internal view virtual override returns (uint256) {\n        return balanceOf(account);\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return _numCheckpoints(account);\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _checkpoints(account, pos);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\n\n/**\n * @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n */\nlibrary Checkpoints {\n    /**\n     * @dev A value was attempted to be inserted on a past checkpoint.\n     */\n    error CheckpointUnorderedInsertion();\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n     * library.\n     */\n    function push(Trace224 storage self, uint32 key, uint224 value) internal returns (uint224, uint224) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self) internal view returns (bool exists, uint32 _key, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace224 storage self, uint32 pos) internal view returns (Checkpoint224 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint224[] storage self, uint32 key, uint224 value) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint224 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint224[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint224 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace208 {\n        Checkpoint208[] _checkpoints;\n    }\n\n    struct Checkpoint208 {\n        uint48 _key;\n        uint208 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n     * library.\n     */\n    function push(Trace208 storage self, uint48 key, uint208 value) internal returns (uint208, uint208) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace208 storage self) internal view returns (uint208) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace208 storage self) internal view returns (bool exists, uint48 _key, uint208 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint208 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace208 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace208 storage self, uint32 pos) internal view returns (Checkpoint208 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint208[] storage self, uint48 key, uint208 value) private returns (uint208, uint208) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint208 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint208({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint208({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint208[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint208 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n     * library.\n     */\n    function push(Trace160 storage self, uint96 key, uint160 value) internal returns (uint160, uint160) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self) internal view returns (bool exists, uint96 _key, uint160 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace160 storage self, uint32 pos) internal view returns (Checkpoint160 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint160[] storage self, uint96 key, uint160 value) private returns (uint160, uint160) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint160 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint160[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint160 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/types/Time.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/types/Time.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\nimport {SafeCast} from \"../math/SafeCast.sol\";\n\n/**\n * @dev This library provides helpers for manipulating time-related objects.\n *\n * It uses the following types:\n * - `uint48` for timepoints\n * - `uint32` for durations\n *\n * While the library doesn't provide specific types for timepoints and duration, it does provide:\n * - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n * - additional helper functions\n */\nlibrary Time {\n    using Time for *;\n\n    /**\n     * @dev Get the block timestamp as a Timepoint.\n     */\n    function timestamp() internal view returns (uint48) {\n        return SafeCast.toUint48(block.timestamp);\n    }\n\n    /**\n     * @dev Get the block number as a Timepoint.\n     */\n    function blockNumber() internal view returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    // ==================================================== Delay =====================================================\n    /**\n     * @dev A `Delay` is a uint32 duration that can be programmed to change value automatically at a given point in the\n     * future. The \"effect\" timepoint describes when the transitions happens from the \"old\" value to the \"new\" value.\n     * This allows updating the delay applied to some operation while keeping some guarantees.\n     *\n     * In particular, the {update} function guarantees that if the delay is reduced, the old delay still applies for\n     * some time. For example if the delay is currently 7 days to do an upgrade, the admin should not be able to set\n     * the delay to 0 and upgrade immediately. If the admin wants to reduce the delay, the old delay (7 days) should\n     * still apply for some time.\n     *\n     *\n     * The `Delay` type is 112 bits long, and packs the following:\n     *\n     * ```\n     *   | [uint48]: effect date (timepoint)\n     *   |           | [uint32]: value before (duration)\n     *   ↓           ↓       ↓ [uint32]: value after (duration)\n     * 0xAAAAAAAAAAAABBBBBBBBCCCCCCCC\n     * ```\n     *\n     * NOTE: The {get} and {withUpdate} functions operate using timestamps. Block number based delays are not currently\n     * supported.\n     */\n    type Delay is uint112;\n\n    /**\n     * @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature\n     */\n    function toDelay(uint32 duration) internal pure returns (Delay) {\n        return Delay.wrap(duration);\n    }\n\n    /**\n     * @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n     * change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered.\n     */\n    function _getFullAt(Delay self, uint48 timepoint) private pure returns (uint32, uint32, uint48) {\n        (uint32 valueBefore, uint32 valueAfter, uint48 effect) = self.unpack();\n        return effect <= timepoint ? (valueAfter, 0, 0) : (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n     * effect timepoint is 0, then the pending value should not be considered.\n     */\n    function getFull(Delay self) internal view returns (uint32, uint32, uint48) {\n        return _getFullAt(self, timestamp());\n    }\n\n    /**\n     * @dev Get the current value.\n     */\n    function get(Delay self) internal view returns (uint32) {\n        (uint32 delay, , ) = self.getFull();\n        return delay;\n    }\n\n    /**\n     * @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n     * enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n     * new delay becomes effective.\n     */\n    function withUpdate(\n        Delay self,\n        uint32 newValue,\n        uint32 minSetback\n    ) internal view returns (Delay updatedDelay, uint48 effect) {\n        uint32 value = self.get();\n        uint32 setback = uint32(Math.max(minSetback, value > newValue ? value - newValue : 0));\n        effect = timestamp() + setback;\n        return (pack(value, newValue, effect), effect);\n    }\n\n    /**\n     * @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint).\n     */\n    function unpack(Delay self) internal pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        uint112 raw = Delay.unwrap(self);\n\n        valueAfter = uint32(raw);\n        valueBefore = uint32(raw >> 32);\n        effect = uint48(raw >> 64);\n\n        return (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev pack the components into a Delay object.\n     */\n    function pack(uint32 valueBefore, uint32 valueAfter, uint48 effect) internal pure returns (Delay) {\n        return Delay.wrap((uint112(effect) << 64) | (uint112(valueBefore) << 32) | uint112(valueAfter));\n    }\n}\n"},"contracts/GovernanceToken.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity >= 0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\n\ncontract GoverenceToken is ERC20, ERC20Burnable, Ownable, ERC20Permit, ERC20Votes {\n    constructor(address initialOwner)\n        ERC20(\"GoverenceToken\", \"GT\")\n        Ownable(initialOwner)\n        ERC20Permit(\"GoverenceToken\")\n    {\n        _mint(msg.sender, 10000000 * 10 ** decimals());\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    function clock() public view override returns (uint48) {\n        return uint48(block.timestamp);\n    }\n\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public pure override returns (string memory) {\n        return \"mode=timestamp\";\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256 value)\n        internal\n        override(ERC20, ERC20Votes)\n    {\n        super._update(from, to, value);\n    }\n\n    function nonces(address owner)\n        public\n        view\n        override(ERC20Permit, Nonces)\n        returns (uint256)\n    {\n        return super.nonces(owner);\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1982],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1983,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1982],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[230]},"id":231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"136:102:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts."},"fullyImplemented":false,"id":230,"linearizedBaseContracts":[230],"name":"IVotes","nameLocation":"249:6:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"262:55:1","text":" @dev The signature used has expired."},"errorSelector":"4683af0e","id":155,"name":"VotesExpiredSignature","nameLocation":"328:21:1","nodeType":"ErrorDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"expiry","nameLocation":"358:6:1","nodeType":"VariableDeclaration","scope":155,"src":"350:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:16:1"},"src":"322:44:1"},{"anonymous":false,"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"372:71:1","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":164,"name":"DelegateChanged","nameLocation":"454:15:1","nodeType":"EventDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"486:9:1","nodeType":"VariableDeclaration","scope":164,"src":"470:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":160,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"513:12:1","nodeType":"VariableDeclaration","scope":164,"src":"497:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"543:10:1","nodeType":"VariableDeclaration","scope":164,"src":"527:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"469:85:1"},"src":"448:107:1"},{"anonymous":false,"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"561:131:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":173,"name":"DelegateVotesChanged","nameLocation":"703:20:1","nodeType":"EventDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"740:8:1","nodeType":"VariableDeclaration","scope":173,"src":"724:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":169,"indexed":false,"mutability":"mutable","name":"previousVotes","nameLocation":"758:13:1","nodeType":"VariableDeclaration","scope":173,"src":"750:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"750:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":171,"indexed":false,"mutability":"mutable","name":"newVotes","nameLocation":"781:8:1","nodeType":"VariableDeclaration","scope":173,"src":"773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"723:67:1"},"src":"697:94:1"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"797:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":181,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"890:8:1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"907:7:1","nodeType":"VariableDeclaration","scope":181,"src":"899:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:17:1"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":181,"src":"939:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"938:9:1"},"scope":230,"src":"881:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"954:230:1","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":191,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1198:12:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"account","nameLocation":"1219:7:1","nodeType":"VariableDeclaration","scope":191,"src":"1211:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"timepoint","nameLocation":"1236:9:1","nodeType":"VariableDeclaration","scope":191,"src":"1228:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:36:1"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":191,"src":"1270:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:9:1"},"scope":230,"src":"1189:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"1285:481:1","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1780:18:1","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"timepoint","nameLocation":"1807:9:1","nodeType":"VariableDeclaration","scope":199,"src":"1799:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:19:1"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"1841:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:9:1"},"scope":230,"src":"1771:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"1856:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":207,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1941:9:1","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"account","nameLocation":"1959:7:1","nodeType":"VariableDeclaration","scope":207,"src":"1951:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1950:17:1"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":207,"src":"1991:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1990:9:1"},"scope":230,"src":"1932:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"2006:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":213,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2091:8:1","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"delegatee","nameLocation":"2108:9:1","nodeType":"VariableDeclaration","scope":213,"src":"2100:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"2100:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2099:19:1"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2127:0:1"},"scope":230,"src":"2082:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"2134:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":229,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2215:13:1","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"delegatee","nameLocation":"2237:9:1","nodeType":"VariableDeclaration","scope":229,"src":"2229:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"2229:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"nonce","nameLocation":"2256:5:1","nodeType":"VariableDeclaration","scope":229,"src":"2248:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"expiry","nameLocation":"2271:6:1","nodeType":"VariableDeclaration","scope":229,"src":"2263:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"v","nameLocation":"2285:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2279:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":221,"name":"uint8","nodeType":"ElementaryTypeName","src":"2279:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"r","nameLocation":"2296:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2288:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2288:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"s","nameLocation":"2307:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2299:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2228:81:1"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"2318:0:1"},"scope":230,"src":"2206:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":231,"src":"239:2082:1","usedErrors":[155],"usedEvents":[164,173]}],"src":"110:2212:1"},"id":1},"@openzeppelin/contracts/governance/utils/Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","exportedSymbols":{"Checkpoints":[7767],"Context":[1982],"ECDSA":[2980],"EIP712":[3207],"IERC5805":[813],"Nonces":[2050],"SafeCast":[6090],"Time":[8042],"Votes":[777]},"id":778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":232,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../interfaces/IERC5805.sol","id":234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":814,"src":"135:55:2","symbolAliases":[{"foreign":{"id":233,"name":"IERC5805","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":1983,"src":"191:48:2","symbolAliases":[{"foreign":{"id":235,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"199:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../utils/Nonces.sol","id":238,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":2051,"src":"240:46:2","symbolAliases":[{"foreign":{"id":237,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"248:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../utils/cryptography/EIP712.sol","id":240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":3208,"src":"287:59:2","symbolAliases":[{"foreign":{"id":239,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"295:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../utils/structs/Checkpoints.sol","id":242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":7768,"src":"347:64:2","symbolAliases":[{"foreign":{"id":241,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"355:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../utils/math/SafeCast.sol","id":244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":6091,"src":"412:55:2","symbolAliases":[{"foreign":{"id":243,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"420:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../utils/cryptography/ECDSA.sol","id":246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":2981,"src":"468:57:2","symbolAliases":[{"foreign":{"id":245,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"476:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","file":"../../utils/types/Time.sol","id":248,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":8043,"src":"526:48:2","symbolAliases":[{"foreign":{"id":247,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8042,"src":"534:4:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":250,"name":"Context","nameLocations":["1919:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"1919:7:2"},"id":251,"nodeType":"InheritanceSpecifier","src":"1919:7:2"},{"baseName":{"id":252,"name":"EIP712","nameLocations":["1928:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":3207,"src":"1928:6:2"},"id":253,"nodeType":"InheritanceSpecifier","src":"1928:6:2"},{"baseName":{"id":254,"name":"Nonces","nameLocations":["1936:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2050,"src":"1936:6:2"},"id":255,"nodeType":"InheritanceSpecifier","src":"1936:6:2"},{"baseName":{"id":256,"name":"IERC5805","nameLocations":["1944:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"1944:8:2"},"id":257,"nodeType":"InheritanceSpecifier","src":"1944:8:2"}],"canonicalName":"Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"576:1315:2","text":" @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n This contract is often combined with a token contract such that voting units correspond to token units. For an\n example, see {ERC721Votes}.\n The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n cost of this history tracking optional.\n When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n previous example, it would be included in {ERC721-_update})."},"fullyImplemented":false,"id":777,"internalFunctionIDs":{"754":1,"768":2},"linearizedBaseContracts":[777,813,230,828,2050,3207,802,1982],"name":"Votes","nameLocation":"1910:5:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":261,"libraryName":{"id":258,"name":"Checkpoints","nameLocations":["1965:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":7767,"src":"1965:11:2"},"nodeType":"UsingForDirective","src":"1959:43:2","typeName":{"id":260,"nodeType":"UserDefinedTypeName","pathNode":{"id":259,"name":"Checkpoints.Trace208","nameLocations":["1981:11:2","1993:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":6729,"src":"1981:20:2"},"referencedDeclaration":6729,"src":"1981:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},{"constant":true,"id":266,"mutability":"constant","name":"DELEGATION_TYPEHASH","nameLocation":"2033:19:2","nodeType":"VariableDeclaration","scope":777,"src":"2008:126:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2008:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2073:60:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":263,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2063:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":270,"mutability":"mutable","name":"_delegatee","nameLocation":"2185:10:2","nodeType":"VariableDeclaration","scope":777,"src":"2141:54:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":269,"keyName":"account","keyNameLocation":"2157:7:2","keyType":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2141:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":275,"mutability":"mutable","name":"_delegateCheckpoints","nameLocation":"2261:20:2","nodeType":"VariableDeclaration","scope":777,"src":"2202:79:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6729_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"typeName":{"id":274,"keyName":"delegatee","keyNameLocation":"2218:9:2","keyType":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2202:50:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6729_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":273,"nodeType":"UserDefinedTypeName","pathNode":{"id":272,"name":"Checkpoints.Trace208","nameLocations":["2231:11:2","2243:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":6729,"src":"2231:20:2"},"referencedDeclaration":6729,"src":"2231:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},"visibility":"private"},{"constant":false,"id":278,"mutability":"mutable","name":"_totalCheckpoints","nameLocation":"2317:17:2","nodeType":"VariableDeclaration","scope":777,"src":"2288:46:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":277,"nodeType":"UserDefinedTypeName","pathNode":{"id":276,"name":"Checkpoints.Trace208","nameLocations":["2288:11:2","2300:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":6729,"src":"2288:20:2"},"referencedDeclaration":6729,"src":"2288:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"private"},{"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"2341:59:2","text":" @dev The clock was incorrectly modified."},"errorSelector":"6ff07140","id":281,"name":"ERC6372InconsistentClock","nameLocation":"2411:24:2","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"2435:2:2"},"src":"2405:33:2"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"2444:64:2","text":" @dev Lookup to future votes is not available."},"errorSelector":"ecd3f81e","id":288,"name":"ERC5805FutureLookup","nameLocation":"2519:19:2","nodeType":"ErrorDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"timepoint","nameLocation":"2547:9:2","nodeType":"VariableDeclaration","scope":288,"src":"2539:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"clock","nameLocation":"2565:5:2","nodeType":"VariableDeclaration","scope":288,"src":"2558:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":285,"name":"uint48","nodeType":"ElementaryTypeName","src":"2558:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2538:33:2"},"src":"2513:59:2"},{"baseFunctions":[821],"body":{"id":298,"nodeType":"Block","src":"2843:42:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":294,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8042,"src":"2860:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$8042_$","typeString":"type(library Time)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:11:2","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":7802,"src":"2860:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":293,"id":297,"nodeType":"Return","src":"2853:25:2"}]},"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"2578:206:2","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match."},"functionSelector":"91ddadf4","id":299,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"2798:5:2","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"2803:2:2"},"returnParameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":299,"src":"2835:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":291,"name":"uint48","nodeType":"ElementaryTypeName","src":"2835:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2834:8:2"},"scope":777,"src":"2789:96:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[827],"body":{"id":318,"nodeType":"Block","src":"3106:206:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":305,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"3169:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3169:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":307,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8042,"src":"3180:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$8042_$","typeString":"type(library Time)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3185:11:2","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":7802,"src":"3180:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3180:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3169:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":315,"nodeType":"IfStatement","src":"3165:93:2","trueBody":{"id":314,"nodeType":"Block","src":"3200:58:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":311,"name":"ERC6372InconsistentClock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3221:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3221:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"RevertStatement","src":"3214:33:2"}]}},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3274:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":304,"id":317,"nodeType":"Return","src":"3267:38:2"}]},"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"2891:91:2","text":" @dev Machine-readable description of the clock as specified in EIP-6372."},"functionSelector":"4bf5d7e9","id":319,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"3049:10:2","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"3059:2:2"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"3091:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":302,"name":"string","nodeType":"ElementaryTypeName","src":"3091:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3090:15:2"},"scope":777,"src":"3040:272:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[181],"body":{"id":333,"nodeType":"Block","src":"3475:62:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":327,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3492:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6729_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":329,"indexExpression":{"id":328,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3513:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3492:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3522:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":6954,"src":"3492:36:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6729_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$6729_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3492:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":326,"id":332,"nodeType":"Return","src":"3485:45:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"3318:79:2","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3411:8:2","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"account","nameLocation":"3428:7:2","nodeType":"VariableDeclaration","scope":334,"src":"3420:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"3420:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3419:17:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"3466:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3465:9:2"},"scope":777,"src":"3402:135:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[191],"body":{"id":369,"nodeType":"Block","src":"4018:268:2","statements":[{"assignments":[345],"declarations":[{"constant":false,"id":345,"mutability":"mutable","name":"currentTimepoint","nameLocation":"4035:16:2","nodeType":"VariableDeclaration","scope":369,"src":"4028:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":344,"name":"uint48","nodeType":"ElementaryTypeName","src":"4028:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":348,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":346,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"4054:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"4028:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":349,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4075:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":350,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"4088:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4075:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"4071:115:2","trueBody":{"id":357,"nodeType":"Block","src":"4106:80:2","statements":[{"errorCall":{"arguments":[{"id":353,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4147:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":354,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"4158:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":352,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"4127:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"RevertStatement","src":"4120:55:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":365,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4268:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":363,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"4250:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6090_$","typeString":"type(library SafeCast)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4259:8:2","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5090,"src":"4250:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"baseExpression":{"id":359,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"4202:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6729_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":361,"indexExpression":{"id":360,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4223:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4202:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4232:17:2","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":6924,"src":"4202:47:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6729_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$6729_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":343,"id":368,"nodeType":"Return","src":"4195:84:2"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"3543:374:2","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"3a46b1a8","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3931:12:2","nodeType":"FunctionDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"account","nameLocation":"3952:7:2","nodeType":"VariableDeclaration","scope":370,"src":"3944:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"3944:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"timepoint","nameLocation":"3969:9:2","nodeType":"VariableDeclaration","scope":370,"src":"3961:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3961:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3943:36:2"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"4009:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4009:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4008:9:2"},"scope":777,"src":"3922:364:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[199],"body":{"id":401,"nodeType":"Block","src":"5007:256:2","statements":[{"assignments":[379],"declarations":[{"constant":false,"id":379,"mutability":"mutable","name":"currentTimepoint","nameLocation":"5024:16:2","nodeType":"VariableDeclaration","scope":401,"src":"5017:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":378,"name":"uint48","nodeType":"ElementaryTypeName","src":"5017:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":382,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":380,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5043:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5043:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"5017:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":383,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5064:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":384,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"5077:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"5064:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":392,"nodeType":"IfStatement","src":"5060:115:2","trueBody":{"id":391,"nodeType":"Block","src":"5095:80:2","statements":[{"errorCall":{"arguments":[{"id":387,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5136:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":388,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"5147:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":386,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"5116:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5116:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"RevertStatement","src":"5109:55:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":397,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5245:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":395,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"5227:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6090_$","typeString":"type(library SafeCast)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5236:8:2","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5090,"src":"5227:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5227:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":393,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5191:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5209:17:2","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":6924,"src":"5191:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6729_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$6729_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":377,"id":400,"nodeType":"Return","src":"5184:72:2"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"4292:625:2","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"8e539e8c","id":402,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"4931:18:2","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"timepoint","nameLocation":"4958:9:2","nodeType":"VariableDeclaration","scope":402,"src":"4950:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"4950:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4949:19:2"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":402,"src":"4998:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"4998:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4997:9:2"},"scope":777,"src":"4922:341:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":412,"nodeType":"Block","src":"5407:50:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":408,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5424:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5442:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":6954,"src":"5424:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6729_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$6729_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5424:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":407,"id":411,"nodeType":"Return","src":"5417:33:2"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"5269:66:2","text":" @dev Returns the current total supply of votes."},"id":413,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"5349:15:2","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"5364:2:2"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"5398:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"5398:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5397:9:2"},"scope":777,"src":"5340:117:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[207],"body":{"id":425,"nodeType":"Block","src":"5613:43:2","statements":[{"expression":{"baseExpression":{"id":421,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5630:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":423,"indexExpression":{"id":422,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5641:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5630:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":420,"id":424,"nodeType":"Return","src":"5623:26:2"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"5463:71:2","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"5548:9:2","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"account","nameLocation":"5566:7:2","nodeType":"VariableDeclaration","scope":426,"src":"5558:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5557:17:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"5604:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"5604:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5603:9:2"},"scope":777,"src":"5539:117:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[213],"body":{"id":442,"nodeType":"Block","src":"5790:86:2","statements":[{"assignments":[433],"declarations":[{"constant":false,"id":433,"mutability":"mutable","name":"account","nameLocation":"5808:7:2","nodeType":"VariableDeclaration","scope":442,"src":"5800:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"5800:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":436,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":434,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"5818:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5818:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5800:30:2"},{"expression":{"arguments":[{"id":438,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"5850:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":439,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"5859:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":437,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5840:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"5840:29:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"5662:71:2","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":443,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5747:8:2","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"delegatee","nameLocation":"5764:9:2","nodeType":"VariableDeclaration","scope":443,"src":"5756:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"5756:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5755:19:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"5790:0:2"},"scope":777,"src":"5738:138:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[229],"body":{"id":499,"nodeType":"Block","src":"6127:381:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6141:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6147:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"6141:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":461,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6159:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6141:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":468,"nodeType":"IfStatement","src":"6137:91:2","trueBody":{"id":467,"nodeType":"Block","src":"6167:61:2","statements":[{"errorCall":{"arguments":[{"id":464,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6210:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":463,"name":"VotesExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"6188:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6188:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"RevertStatement","src":"6181:36:2"}]}},{"assignments":[470],"declarations":[{"constant":false,"id":470,"mutability":"mutable","name":"signer","nameLocation":"6245:6:2","nodeType":"VariableDeclaration","scope":499,"src":"6237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"6237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":488,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":477,"name":"DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"6319:19:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":478,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6340:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":479,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6351:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":480,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6358:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":475,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6308:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:6:2","memberName":"encode","nodeType":"MemberAccess","src":"6308:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6308:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":474,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6298:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":473,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"6281:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6281:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":484,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"6381:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":485,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"6396:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":486,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"6411:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":471,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"6254:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2980_$","typeString":"type(library ECDSA)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6260:7:2","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"6254:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6254:168:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6237:185:2"},{"expression":{"arguments":[{"id":490,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6449:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":491,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6457:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":489,"name":"_useCheckedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"6432:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6432:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"6432:31:2"},{"expression":{"arguments":[{"id":495,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6483:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":496,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6491:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":494,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"6473:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6473:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"ExpressionStatement","src":"6473:28:2"}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"5882:67:2","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":500,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"5963:13:2","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"delegatee","nameLocation":"5994:9:2","nodeType":"VariableDeclaration","scope":500,"src":"5986:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"5986:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"nonce","nameLocation":"6021:5:2","nodeType":"VariableDeclaration","scope":500,"src":"6013:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"6013:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"expiry","nameLocation":"6044:6:2","nodeType":"VariableDeclaration","scope":500,"src":"6036:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"v","nameLocation":"6066:1:2","nodeType":"VariableDeclaration","scope":500,"src":"6060:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":451,"name":"uint8","nodeType":"ElementaryTypeName","src":"6060:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"r","nameLocation":"6085:1:2","nodeType":"VariableDeclaration","scope":500,"src":"6077:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6077:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"s","nameLocation":"6104:1:2","nodeType":"VariableDeclaration","scope":500,"src":"6096:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6096:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5976:135:2"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[],"src":"6127:0:2"},"scope":777,"src":"5954:554:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":534,"nodeType":"Block","src":"6758:240:2","statements":[{"assignments":[509],"declarations":[{"constant":false,"id":509,"mutability":"mutable","name":"oldDelegate","nameLocation":"6776:11:2","nodeType":"VariableDeclaration","scope":534,"src":"6768:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":513,"initialValue":{"arguments":[{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6800:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":510,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"6790:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6790:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6768:40:2"},{"expression":{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":514,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"6818:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":516,"indexExpression":{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6829:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6818:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":517,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6840:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6818:31:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":519,"nodeType":"ExpressionStatement","src":"6818:31:2"},{"eventCall":{"arguments":[{"id":521,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6881:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":522,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"6890:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":523,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6903:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":520,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"6865:15:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6865:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"EmitStatement","src":"6860:53:2"},{"expression":{"arguments":[{"id":527,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"6942:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6955:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":530,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6982:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"_getVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6966:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6966:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":526,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6923:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6923:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"6923:68:2"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"6514:167:2","text":" @dev Delegate all of `account`'s voting units to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":535,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"6695:9:2","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"account","nameLocation":"6713:7:2","nodeType":"VariableDeclaration","scope":535,"src":"6705:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"6705:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"delegatee","nameLocation":"6730:9:2","nodeType":"VariableDeclaration","scope":535,"src":"6722:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"6722:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6704:36:2"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"6758:0:2"},"scope":777,"src":"6686:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":589,"nodeType":"Block","src":"7321:310:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7335:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7351:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7343:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"7343:7:2","typeDescriptions":{}}},"id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7343:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7335:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"7331:107:2","trueBody":{"id":560,"nodeType":"Block","src":"7355:83:2","statements":[{"expression":{"arguments":[{"id":552,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7375:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":553,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"7394:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":556,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"7419:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":554,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"7400:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6090_$","typeString":"type(library SafeCast)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7409:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":4530,"src":"7400:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":551,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7369:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$6729_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7369:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":559,"nodeType":"ExpressionStatement","src":"7369:58:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":562,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"7451:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7465:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7457:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"7457:7:2","typeDescriptions":{}}},"id":566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7457:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7451:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":578,"nodeType":"IfStatement","src":"7447:110:2","trueBody":{"id":577,"nodeType":"Block","src":"7469:88:2","statements":[{"expression":{"arguments":[{"id":569,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7489:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":570,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7508:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"7538:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":571,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"7519:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6090_$","typeString":"type(library SafeCast)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7528:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":4530,"src":"7519:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7519:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":568,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7483:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$6729_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7483:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":576,"nodeType":"ExpressionStatement","src":"7483:63:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":581,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7595:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":580,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"7585:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7585:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":584,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"7612:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":583,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"7602:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7602:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"7617:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":579,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"7566:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7566:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"ExpressionStatement","src":"7566:58:2"}]},"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"7004:223:2","text":" @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n should be zero. Total supply of voting units will be adjusted with mints and burns."},"id":590,"implemented":true,"kind":"function","modifiers":[],"name":"_transferVotingUnits","nameLocation":"7241:20:2","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"from","nameLocation":"7270:4:2","nodeType":"VariableDeclaration","scope":590,"src":"7262:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"7262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"to","nameLocation":"7284:2:2","nodeType":"VariableDeclaration","scope":590,"src":"7276:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"7276:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"amount","nameLocation":"7296:6:2","nodeType":"VariableDeclaration","scope":590,"src":"7288:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"7288:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7261:42:2"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"7321:0:2"},"scope":777,"src":"7232:399:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":667,"nodeType":"Block","src":"7795:702:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7809:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"7817:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7809:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7823:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7832:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7823:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7809:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":666,"nodeType":"IfStatement","src":"7805:686:2","trueBody":{"id":665,"nodeType":"Block","src":"7835:656:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":607,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7853:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7869:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7861:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7861:7:2","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7861:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7853:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":635,"nodeType":"IfStatement","src":"7849:315:2","trueBody":{"id":634,"nodeType":"Block","src":"7873:291:2","statements":[{"assignments":[614,616],"declarations":[{"constant":false,"id":614,"mutability":"mutable","name":"oldValue","nameLocation":"7900:8:2","nodeType":"VariableDeclaration","scope":634,"src":"7892:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"7892:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"newValue","nameLocation":"7918:8:2","nodeType":"VariableDeclaration","scope":634,"src":"7910:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"7910:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":627,"initialValue":{"arguments":[{"baseExpression":{"id":618,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7957:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6729_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":620,"indexExpression":{"id":619,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7978:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7957:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":621,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"8005:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":624,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8055:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":622,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"8036:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6090_$","typeString":"type(library SafeCast)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8045:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":4530,"src":"8036:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8036:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":617,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7930:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$6729_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7930:150:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"7891:189:2"},{"eventCall":{"arguments":[{"id":629,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8124:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":630,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"8130:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":631,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"8140:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":628,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"8103:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8103:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":633,"nodeType":"EmitStatement","src":"8098:51:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":636,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8181:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8187:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:2","typeDescriptions":{}}},"id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":664,"nodeType":"IfStatement","src":"8177:304:2","trueBody":{"id":663,"nodeType":"Block","src":"8199:282:2","statements":[{"assignments":[643,645],"declarations":[{"constant":false,"id":643,"mutability":"mutable","name":"oldValue","nameLocation":"8226:8:2","nodeType":"VariableDeclaration","scope":663,"src":"8218:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"8218:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"newValue","nameLocation":"8244:8:2","nodeType":"VariableDeclaration","scope":663,"src":"8236:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"8236:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":656,"initialValue":{"arguments":[{"baseExpression":{"id":647,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8283:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6729_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":649,"indexExpression":{"id":648,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8304:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8283:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":650,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"8329:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":653,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8374:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":651,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"8355:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6090_$","typeString":"type(library SafeCast)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8364:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":4530,"src":"8355:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8355:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":646,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"8256:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$6729_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8256:143:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"8217:182:2"},{"eventCall":{"arguments":[{"id":658,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8443:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"8447:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":660,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8457:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":657,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"8422:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8422:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"EmitStatement","src":"8417:49:2"}]}}]}}]},"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"7637:75:2","text":" @dev Moves delegated votes from one delegate to another."},"id":668,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegateVotes","nameLocation":"7726:18:2","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"from","nameLocation":"7753:4:2","nodeType":"VariableDeclaration","scope":668,"src":"7745:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"7745:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"to","nameLocation":"7767:2:2","nodeType":"VariableDeclaration","scope":668,"src":"7759:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"7759:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"amount","nameLocation":"7779:6:2","nodeType":"VariableDeclaration","scope":668,"src":"7771:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"7771:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7744:42:2"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"7795:0:2"},"scope":777,"src":"7717:780:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":685,"nodeType":"Block","src":"8653:81:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":678,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8688:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6729_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":680,"indexExpression":{"id":679,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8709:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8688:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8718:6:2","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":7017,"src":"8688:36:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6729_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Trace208_$6729_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint256)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8688:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":676,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"8670:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6090_$","typeString":"type(library SafeCast)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8679:8:2","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5146,"src":"8670:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8670:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":675,"id":684,"nodeType":"Return","src":"8663:64:2"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"8503:64:2","text":" @dev Get number of checkpoints for `account`."},"id":686,"implemented":true,"kind":"function","modifiers":[],"name":"_numCheckpoints","nameLocation":"8581:15:2","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"account","nameLocation":"8605:7:2","nodeType":"VariableDeclaration","scope":686,"src":"8597:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"8597:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8596:17:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"8645:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":673,"name":"uint32","nodeType":"ElementaryTypeName","src":"8645:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8644:8:2"},"scope":777,"src":"8572:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":704,"nodeType":"Block","src":"8949:61:2","statements":[{"expression":{"arguments":[{"id":701,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"8999:3:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"baseExpression":{"id":697,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8966:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6729_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":699,"indexExpression":{"id":698,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"8987:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8966:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8996:2:2","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":7035,"src":"8966:32:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6729_storage_ptr_$_t_uint32_$returns$_t_struct$_Checkpoint208_$6734_memory_ptr_$attached_to$_t_struct$_Trace208_$6729_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8966:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":696,"id":703,"nodeType":"Return","src":"8959:44:2"}]},"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"8740:66:2","text":" @dev Get the `pos`-th checkpoint for `account`."},"id":705,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpoints","nameLocation":"8820:12:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"account","nameLocation":"8850:7:2","nodeType":"VariableDeclaration","scope":705,"src":"8842:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"8842:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"pos","nameLocation":"8874:3:2","nodeType":"VariableDeclaration","scope":705,"src":"8867:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":690,"name":"uint32","nodeType":"ElementaryTypeName","src":"8867:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8832:51:2"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":705,"src":"8915:32:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":694,"nodeType":"UserDefinedTypeName","pathNode":{"id":693,"name":"Checkpoints.Checkpoint208","nameLocations":["8915:11:2","8927:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"8915:25:2"},"referencedDeclaration":6734,"src":"8915:25:2","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"8914:34:2"},"scope":777,"src":"8811:199:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":739,"nodeType":"Block","src":"9201:70:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":729,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"9229:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9229:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":732,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"9241:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9247:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":6954,"src":"9241:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6729_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$6729_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9241:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":735,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"9257:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":731,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9238:2:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9238:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"expression":{"id":727,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"9218:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9224:4:2","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":6757,"src":"9218:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$6729_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$attached_to$_t_struct$_Trace208_$6729_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9218:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":726,"id":738,"nodeType":"Return","src":"9211:53:2"}]},"id":740,"implemented":true,"kind":"function","modifiers":[],"name":"_push","nameLocation":"9025:5:2","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"store","nameLocation":"9069:5:2","nodeType":"VariableDeclaration","scope":740,"src":"9040:34:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":707,"nodeType":"UserDefinedTypeName","pathNode":{"id":706,"name":"Checkpoints.Trace208","nameLocations":["9040:11:2","9052:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":6729,"src":"9040:20:2"},"referencedDeclaration":6729,"src":"9040:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"op","nameLocation":"9134:2:2","nodeType":"VariableDeclaration","scope":740,"src":"9084:52:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"typeName":{"id":717,"nodeType":"FunctionTypeName","parameterTypes":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"9093:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":709,"name":"uint208","nodeType":"ElementaryTypeName","src":"9093:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"9102:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":711,"name":"uint208","nodeType":"ElementaryTypeName","src":"9102:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9092:18:2"},"returnParameterTypes":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"9125:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":714,"name":"uint208","nodeType":"ElementaryTypeName","src":"9125:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9124:9:2"},"src":"9084:52:2","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"delta","nameLocation":"9154:5:2","nodeType":"VariableDeclaration","scope":740,"src":"9146:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":719,"name":"uint208","nodeType":"ElementaryTypeName","src":"9146:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9030:135:2"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"9183:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":722,"name":"uint208","nodeType":"ElementaryTypeName","src":"9183:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"9192:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":724,"name":"uint208","nodeType":"ElementaryTypeName","src":"9192:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9182:18:2"},"scope":777,"src":"9016:255:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":753,"nodeType":"Block","src":"9344:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"9361:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":750,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9365:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9361:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":748,"id":752,"nodeType":"Return","src":"9354:12:2"}]},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9286:4:2","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"a","nameLocation":"9299:1:2","nodeType":"VariableDeclaration","scope":754,"src":"9291:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":741,"name":"uint208","nodeType":"ElementaryTypeName","src":"9291:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"b","nameLocation":"9310:1:2","nodeType":"VariableDeclaration","scope":754,"src":"9302:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":743,"name":"uint208","nodeType":"ElementaryTypeName","src":"9302:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9290:22:2"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"9335:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":746,"name":"uint208","nodeType":"ElementaryTypeName","src":"9335:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9334:9:2"},"scope":777,"src":"9277:96:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":767,"nodeType":"Block","src":"9451:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":763,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"9468:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":764,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"9472:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9468:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":762,"id":766,"nodeType":"Return","src":"9461:12:2"}]},"id":768,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9388:9:2","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"a","nameLocation":"9406:1:2","nodeType":"VariableDeclaration","scope":768,"src":"9398:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":755,"name":"uint208","nodeType":"ElementaryTypeName","src":"9398:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"b","nameLocation":"9417:1:2","nodeType":"VariableDeclaration","scope":768,"src":"9409:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":757,"name":"uint208","nodeType":"ElementaryTypeName","src":"9409:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9397:22:2"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"9442:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":760,"name":"uint208","nodeType":"ElementaryTypeName","src":"9442:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9441:9:2"},"scope":777,"src":"9379:101:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"9486:72:2","text":" @dev Must return the voting units held by an account."},"id":776,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"9572:15:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"9588:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"9588:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9587:9:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"9628:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:9:2"},"scope":777,"src":"9563:74:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":778,"src":"1892:7747:2","usedErrors":[155,281,288,1992,2064,2066,2643,2648,2653,4345,6203],"usedEvents":[164,173,782]}],"src":"109:9531:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[802]},"id":803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":779,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":802,"linearizedBaseContracts":[802],"name":"IERC5267","nameLocation":"143:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"158:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":782,"name":"EIP712DomainChanged","nameLocation":"253:19:3","nodeType":"EventDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[],"src":"272:2:3"},"src":"247:28:3"},{"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"281:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":801,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:3","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"447:2:3"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"fields","nameLocation":"517:6:3","nodeType":"VariableDeclaration","scope":801,"src":"510:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":785,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"name","nameLocation":"551:4:3","nodeType":"VariableDeclaration","scope":801,"src":"537:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":787,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"version","nameLocation":"583:7:3","nodeType":"VariableDeclaration","scope":801,"src":"569:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":789,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"chainId","nameLocation":"612:7:3","nodeType":"VariableDeclaration","scope":801,"src":"604:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:3","nodeType":"VariableDeclaration","scope":801,"src":"633:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"salt","nameLocation":"680:4:3","nodeType":"VariableDeclaration","scope":801,"src":"672:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"extensions","nameLocation":"715:10:3","nodeType":"VariableDeclaration","scope":801,"src":"698:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":798,"nodeType":"ArrayTypeName","src":"698:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:3"},"scope":802,"src":"426:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":803,"src":"133:605:3","usedErrors":[],"usedEvents":[782]}],"src":"107:632:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[813],"IERC6372":[828],"IVotes":[230]},"id":814,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":804,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":806,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":814,"sourceUnit":231,"src":"133:54:4","symbolAliases":[{"foreign":{"id":805,"name":"IVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"141:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":808,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":814,"sourceUnit":829,"src":"188:40:4","symbolAliases":[{"foreign":{"id":807,"name":"IERC6372","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"196:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":809,"name":"IERC6372","nameLocations":["252:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":828,"src":"252:8:4"},"id":810,"nodeType":"InheritanceSpecifier","src":"252:8:4"},{"baseName":{"id":811,"name":"IVotes","nameLocations":["262:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":230,"src":"262:6:4"},"id":812,"nodeType":"InheritanceSpecifier","src":"262:6:4"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":813,"linearizedBaseContracts":[813,230,828],"name":"IERC5805","nameLocation":"240:8:4","nodeType":"ContractDefinition","nodes":[],"scope":814,"src":"230:41:4","usedErrors":[155],"usedEvents":[164,173]}],"src":"107:165:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[828]},"id":829,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":815,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":828,"linearizedBaseContracts":[828],"name":"IERC6372","nameLocation":"143:8:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"158:133:5","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":821,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"305:5:5","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[],"src":"310:2:5"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":821,"src":"336:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":818,"name":"uint48","nodeType":"ElementaryTypeName","src":"336:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"335:8:5"},"scope":828,"src":"296:48:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"350:48:5","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":827,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"465:10:5","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[],"src":"475:2:5"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":827,"src":"501:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":824,"name":"string","nodeType":"ElementaryTypeName","src":"501:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"500:15:5"},"scope":828,"src":"456:60:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":829,"src":"133:385:5","usedErrors":[],"usedEvents":[]}],"src":"107:412:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[965],"IERC20Errors":[870],"IERC721Errors":[918]},"id":966,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":830,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"138:139:6","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":870,"linearizedBaseContracts":[870],"name":"IERC20Errors","nameLocation":"288:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"307:309:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":840,"name":"ERC20InsufficientBalance","nameLocation":"627:24:6","nodeType":"ErrorDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"sender","nameLocation":"660:6:6","nodeType":"VariableDeclaration","scope":840,"src":"652:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"balance","nameLocation":"676:7:6","nodeType":"VariableDeclaration","scope":840,"src":"668:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"needed","nameLocation":"693:6:6","nodeType":"VariableDeclaration","scope":840,"src":"685:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:6"},"src":"621:80:6"},{"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"707:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":845,"name":"ERC20InvalidSender","nameLocation":"870:18:6","nodeType":"ErrorDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"sender","nameLocation":"897:6:6","nodeType":"VariableDeclaration","scope":845,"src":"889:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:6"},"src":"864:41:6"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"911:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":850,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:6","nodeType":"ErrorDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:6","nodeType":"VariableDeclaration","scope":850,"src":"1102:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:6"},"src":"1075:45:6"},{"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"1126:345:6","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":859,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:6","nodeType":"ErrorDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"spender","nameLocation":"1517:7:6","nodeType":"VariableDeclaration","scope":859,"src":"1509:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:6","nodeType":"VariableDeclaration","scope":859,"src":"1526:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"needed","nameLocation":"1553:6:6","nodeType":"VariableDeclaration","scope":859,"src":"1545:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:6"},"src":"1476:85:6"},{"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"1567:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":864,"name":"ERC20InvalidApprover","nameLocation":"1752:20:6","nodeType":"ErrorDefinition","parameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"approver","nameLocation":"1781:8:6","nodeType":"VariableDeclaration","scope":864,"src":"1773:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:6"},"src":"1746:45:6"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"1797:195:6","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":869,"name":"ERC20InvalidSpender","nameLocation":"2003:19:6","nodeType":"ErrorDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"spender","nameLocation":"2031:7:6","nodeType":"VariableDeclaration","scope":869,"src":"2023:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:6"},"src":"1997:43:6"}],"scope":966,"src":"278:1764:6","usedErrors":[840,845,850,859,864,869],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"2044:141:6","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":918,"linearizedBaseContracts":[918],"name":"IERC721Errors","nameLocation":"2196:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"2216:219:6","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":876,"name":"ERC721InvalidOwner","nameLocation":"2446:18:6","nodeType":"ErrorDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"owner","nameLocation":"2473:5:6","nodeType":"VariableDeclaration","scope":876,"src":"2465:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:6"},"src":"2440:40:6"},{"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"2486:132:6","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":881,"name":"ERC721NonexistentToken","nameLocation":"2629:22:6","nodeType":"ErrorDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:6","nodeType":"VariableDeclaration","scope":881,"src":"2652:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:6"},"src":"2623:46:6"},{"documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"2675:289:6","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":890,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:6","nodeType":"ErrorDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"sender","nameLocation":"3004:6:6","nodeType":"VariableDeclaration","scope":890,"src":"2996:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:6","nodeType":"VariableDeclaration","scope":890,"src":"3012:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":885,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"owner","nameLocation":"3037:5:6","nodeType":"VariableDeclaration","scope":890,"src":"3029:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:6"},"src":"2969:75:6"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"3050:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":895,"name":"ERC721InvalidSender","nameLocation":"3213:19:6","nodeType":"ErrorDefinition","parameters":{"id":894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":893,"mutability":"mutable","name":"sender","nameLocation":"3241:6:6","nodeType":"VariableDeclaration","scope":895,"src":"3233:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:6"},"src":"3207:42:6"},{"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"3255:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":900,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:6","nodeType":"ErrorDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:6","nodeType":"VariableDeclaration","scope":900,"src":"3447:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:6"},"src":"3419:46:6"},{"documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"3471:247:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":907,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:6","nodeType":"ErrorDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"operator","nameLocation":"3764:8:6","nodeType":"VariableDeclaration","scope":907,"src":"3756:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":905,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:6","nodeType":"VariableDeclaration","scope":907,"src":"3774:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:6"},"src":"3723:68:6"},{"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"3797:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":912,"name":"ERC721InvalidApprover","nameLocation":"3982:21:6","nodeType":"ErrorDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"approver","nameLocation":"4012:8:6","nodeType":"VariableDeclaration","scope":912,"src":"4004:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:6"},"src":"3976:46:6"},{"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"4028:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":917,"name":"ERC721InvalidOperator","nameLocation":"4236:21:6","nodeType":"ErrorDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"operator","nameLocation":"4266:8:6","nodeType":"VariableDeclaration","scope":917,"src":"4258:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:6"},"src":"4230:46:6"}],"scope":966,"src":"2186:2092:6","usedErrors":[876,881,890,895,900,907,912,917],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":919,"nodeType":"StructuredDocumentation","src":"4280:143:6","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":965,"linearizedBaseContracts":[965],"name":"IERC1155Errors","nameLocation":"4434:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"4455:361:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":930,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:6","nodeType":"ErrorDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"sender","nameLocation":"4862:6:6","nodeType":"VariableDeclaration","scope":930,"src":"4854:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"balance","nameLocation":"4878:7:6","nodeType":"VariableDeclaration","scope":930,"src":"4870:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"needed","nameLocation":"4895:6:6","nodeType":"VariableDeclaration","scope":930,"src":"4887:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:6","nodeType":"VariableDeclaration","scope":930,"src":"4903:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:6"},"src":"4821:99:6"},{"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"4926:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":935,"name":"ERC1155InvalidSender","nameLocation":"5089:20:6","nodeType":"ErrorDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"sender","nameLocation":"5118:6:6","nodeType":"VariableDeclaration","scope":935,"src":"5110:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:6"},"src":"5083:43:6"},{"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"5132:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":940,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:6","nodeType":"ErrorDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:6","nodeType":"VariableDeclaration","scope":940,"src":"5325:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:6"},"src":"5296:47:6"},{"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"5349:256:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":947,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:6","nodeType":"ErrorDefinition","parameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"operator","nameLocation":"5653:8:6","nodeType":"VariableDeclaration","scope":947,"src":"5645:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"owner","nameLocation":"5671:5:6","nodeType":"VariableDeclaration","scope":947,"src":"5663:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:6"},"src":"5610:68:6"},{"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"5684:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":952,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:6","nodeType":"ErrorDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"approver","nameLocation":"5900:8:6","nodeType":"VariableDeclaration","scope":952,"src":"5892:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":949,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:6"},"src":"5863:47:6"},{"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"5916:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":957,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:6","nodeType":"ErrorDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"operator","nameLocation":"6155:8:6","nodeType":"VariableDeclaration","scope":957,"src":"6147:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:6"},"src":"6118:47:6"},{"documentation":{"id":958,"nodeType":"StructuredDocumentation","src":"6171:280:6","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":964,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:6","nodeType":"ErrorDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:6","nodeType":"VariableDeclaration","scope":964,"src":"6488:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:6","nodeType":"VariableDeclaration","scope":964,"src":"6507:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:6"},"src":"6456:73:6"}],"scope":966,"src":"4424:2107:6","usedErrors":[930,935,940,947,952,957,964],"usedEvents":[]}],"src":"112:6420:6"},"id":6},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1982],"ERC20":[1480],"IERC20":[1558],"IERC20Errors":[870],"IERC20Metadata":[1916]},"id":1481,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":967,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":969,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1481,"sourceUnit":1559,"src":"131:36:7","symbolAliases":[{"foreign":{"id":968,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"139:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":971,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1481,"sourceUnit":1917,"src":"168:63:7","symbolAliases":[{"foreign":{"id":970,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"176:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":973,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1481,"sourceUnit":1983,"src":"232:48:7","symbolAliases":[{"foreign":{"id":972,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"240:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1481,"sourceUnit":966,"src":"281:65:7","symbolAliases":[{"foreign":{"id":974,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"289:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":977,"name":"Context","nameLocations":["1428:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"1428:7:7"},"id":978,"nodeType":"InheritanceSpecifier","src":"1428:7:7"},{"baseName":{"id":979,"name":"IERC20","nameLocations":["1437:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1558,"src":"1437:6:7"},"id":980,"nodeType":"InheritanceSpecifier","src":"1437:6:7"},{"baseName":{"id":981,"name":"IERC20Metadata","nameLocations":["1445:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1916,"src":"1445:14:7"},"id":982,"nodeType":"InheritanceSpecifier","src":"1445:14:7"},{"baseName":{"id":983,"name":"IERC20Errors","nameLocations":["1461:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":870,"src":"1461:12:7"},"id":984,"nodeType":"InheritanceSpecifier","src":"1461:12:7"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":976,"nodeType":"StructuredDocumentation","src":"348:1052:7","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1480,"linearizedBaseContracts":[1480,870,1916,1558,1982],"name":"ERC20","nameLocation":"1419:5:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":988,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:7","nodeType":"VariableDeclaration","scope":1480,"src":"1480:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":987,"keyName":"account","keyNameLocation":"1496:7:7","keyType":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":994,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:7","nodeType":"VariableDeclaration","scope":1480,"src":"1540:83:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":993,"keyName":"account","keyNameLocation":"1556:7:7","keyType":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":992,"keyName":"spender","keyNameLocation":"1583:7:7","keyType":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":996,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:7","nodeType":"VariableDeclaration","scope":1480,"src":"1630:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":998,"mutability":"mutable","name":"_name","nameLocation":"1680:5:7","nodeType":"VariableDeclaration","scope":1480,"src":"1665:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":997,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1000,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:7","nodeType":"VariableDeclaration","scope":1480,"src":"1691:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":999,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1016,"nodeType":"Block","src":"1952:57:7","statements":[{"expression":{"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1008,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"1962:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1009,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"1970:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1011,"nodeType":"ExpressionStatement","src":"1962:13:7"},{"expression":{"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1012,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"1985:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1013,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"1995:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1015,"nodeType":"ExpressionStatement","src":"1985:17:7"}]},"documentation":{"id":1001,"nodeType":"StructuredDocumentation","src":"1720:171:7","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1017,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"name_","nameLocation":"1922:5:7","nodeType":"VariableDeclaration","scope":1017,"src":"1908:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1002,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:7","nodeType":"VariableDeclaration","scope":1017,"src":"1929:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1004,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:7"},"returnParameters":{"id":1007,"nodeType":"ParameterList","parameters":[],"src":"1952:0:7"},"scope":1480,"src":"1896:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1903],"body":{"id":1025,"nodeType":"Block","src":"2134:29:7","statements":[{"expression":{"id":1023,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"2151:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1022,"id":1024,"nodeType":"Return","src":"2144:12:7"}]},"documentation":{"id":1018,"nodeType":"StructuredDocumentation","src":"2015:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1026,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:7","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[],"src":"2087:2:7"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1026,"src":"2119:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1020,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:7"},"scope":1480,"src":"2074:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1909],"body":{"id":1034,"nodeType":"Block","src":"2338:31:7","statements":[{"expression":{"id":1032,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2355:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1031,"id":1033,"nodeType":"Return","src":"2348:14:7"}]},"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"2169:102:7","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1035,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:7","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[],"src":"2291:2:7"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1035,"src":"2323:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1029,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:7"},"scope":1480,"src":"2276:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1915],"body":{"id":1043,"nodeType":"Block","src":"3058:26:7","statements":[{"expression":{"hexValue":"3138","id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1040,"id":1042,"nodeType":"Return","src":"3068:9:7"}]},"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"2375:622:7","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1044,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:7","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[],"src":"3019:2:7"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1044,"src":"3051:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1038,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:7"},"scope":1480,"src":"3002:82:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1507],"body":{"id":1052,"nodeType":"Block","src":"3205:36:7","statements":[{"expression":{"id":1050,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"3222:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1049,"id":1051,"nodeType":"Return","src":"3215:19:7"}]},"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"3090:49:7","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:7","nodeType":"FunctionDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[],"src":"3164:2:7"},"returnParameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1053,"src":"3196:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:7"},"scope":1480,"src":"3144:97:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1515],"body":{"id":1065,"nodeType":"Block","src":"3373:42:7","statements":[{"expression":{"baseExpression":{"id":1061,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"3390:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1063,"indexExpression":{"id":1062,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"3400:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1060,"id":1064,"nodeType":"Return","src":"3383:25:7"}]},"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"3247:47:7","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1066,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:7","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"account","nameLocation":"3326:7:7","nodeType":"VariableDeclaration","scope":1066,"src":"3318:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:7"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1066,"src":"3364:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:7"},"scope":1480,"src":"3299:116:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1525],"body":{"id":1089,"nodeType":"Block","src":"3685:103:7","statements":[{"assignments":[1077],"declarations":[{"constant":false,"id":1077,"mutability":"mutable","name":"owner","nameLocation":"3703:5:7","nodeType":"VariableDeclaration","scope":1089,"src":"3695:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1080,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1078,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"3711:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:7"},{"expression":{"arguments":[{"id":1082,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"3743:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1083,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"3750:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"3754:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1081,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3733:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1086,"nodeType":"ExpressionStatement","src":"3733:27:7"},{"expression":{"hexValue":"74727565","id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1075,"id":1088,"nodeType":"Return","src":"3770:11:7"}]},"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"3421:184:7","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:7","nodeType":"FunctionDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"to","nameLocation":"3636:2:7","nodeType":"VariableDeclaration","scope":1090,"src":"3628:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"value","nameLocation":"3648:5:7","nodeType":"VariableDeclaration","scope":1090,"src":"3640:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:7"},"returnParameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1090,"src":"3679:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1073,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:7"},"scope":1480,"src":"3610:178:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1535],"body":{"id":1106,"nodeType":"Block","src":"3935:51:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1100,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"3952:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1102,"indexExpression":{"id":1101,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"3964:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1104,"indexExpression":{"id":1103,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"3971:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1099,"id":1105,"nodeType":"Return","src":"3945:34:7"}]},"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"3794:47:7","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1107,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:7","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"owner","nameLocation":"3873:5:7","nodeType":"VariableDeclaration","scope":1107,"src":"3865:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"spender","nameLocation":"3888:7:7","nodeType":"VariableDeclaration","scope":1107,"src":"3880:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:7"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1107,"src":"3926:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:7"},"scope":1480,"src":"3846:140:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1545],"body":{"id":1130,"nodeType":"Block","src":"4372:107:7","statements":[{"assignments":[1118],"declarations":[{"constant":false,"id":1118,"mutability":"mutable","name":"owner","nameLocation":"4390:5:7","nodeType":"VariableDeclaration","scope":1130,"src":"4382:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1121,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"4398:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:7"},{"expression":{"arguments":[{"id":1123,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"4429:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1124,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"4436:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"4445:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1122,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1371,1431],"referencedDeclaration":1371,"src":"4420:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1127,"nodeType":"ExpressionStatement","src":"4420:31:7"},{"expression":{"hexValue":"74727565","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1116,"id":1129,"nodeType":"Return","src":"4461:11:7"}]},"documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"3992:296:7","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1131,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:7","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"spender","nameLocation":"4318:7:7","nodeType":"VariableDeclaration","scope":1131,"src":"4310:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1109,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1112,"mutability":"mutable","name":"value","nameLocation":"4335:5:7","nodeType":"VariableDeclaration","scope":1131,"src":"4327:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:7"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1131,"src":"4366:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1114,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:7"},"scope":1480,"src":"4293:186:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1557],"body":{"id":1162,"nodeType":"Block","src":"5132:151:7","statements":[{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"spender","nameLocation":"5150:7:7","nodeType":"VariableDeclaration","scope":1162,"src":"5142:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1147,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1145,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"5160:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:7"},{"expression":{"arguments":[{"id":1149,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"5198:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1150,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"5204:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"5213:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1148,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"5182:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1153,"nodeType":"ExpressionStatement","src":"5182:37:7"},{"expression":{"arguments":[{"id":1155,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"5239:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1156,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"5245:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"5249:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1154,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"5229:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1159,"nodeType":"ExpressionStatement","src":"5229:26:7"},{"expression":{"hexValue":"74727565","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1142,"id":1161,"nodeType":"Return","src":"5265:11:7"}]},"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"4485:549:7","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:7","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"from","nameLocation":"5069:4:7","nodeType":"VariableDeclaration","scope":1163,"src":"5061:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"to","nameLocation":"5083:2:7","nodeType":"VariableDeclaration","scope":1163,"src":"5075:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"value","nameLocation":"5095:5:7","nodeType":"VariableDeclaration","scope":1163,"src":"5087:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:7"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"5126:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1140,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:7"},"scope":1480,"src":"5039:244:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1209,"nodeType":"Block","src":"5725:231:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1173,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5739:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:7","typeDescriptions":{}}},"id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1187,"nodeType":"IfStatement","src":"5735:86:7","trueBody":{"id":1186,"nodeType":"Block","src":"5759:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:7","typeDescriptions":{}}},"id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1179,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"5780:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1185,"nodeType":"RevertStatement","src":"5773:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1188,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"5834:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:7","typeDescriptions":{}}},"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1202,"nodeType":"IfStatement","src":"5830:86:7","trueBody":{"id":1201,"nodeType":"Block","src":"5852:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:7","typeDescriptions":{}}},"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1194,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"5873:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1200,"nodeType":"RevertStatement","src":"5866:39:7"}]}},{"expression":{"arguments":[{"id":1204,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5933:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1205,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"5939:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"5943:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1203,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"5925:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1208,"nodeType":"ExpressionStatement","src":"5925:24:7"}]},"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"5289:362:7","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1210,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:7","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"from","nameLocation":"5683:4:7","nodeType":"VariableDeclaration","scope":1210,"src":"5675:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"to","nameLocation":"5697:2:7","nodeType":"VariableDeclaration","scope":1210,"src":"5689:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"value","nameLocation":"5709:5:7","nodeType":"VariableDeclaration","scope":1210,"src":"5701:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:7"},"returnParameters":{"id":1172,"nodeType":"ParameterList","parameters":[],"src":"5725:0:7"},"scope":1480,"src":"5656:300:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1286,"nodeType":"Block","src":"6346:1032:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1220,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6360:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:7","typeDescriptions":{}}},"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1257,"nodeType":"Block","src":"6534:362:7","statements":[{"assignments":[1232],"declarations":[{"constant":false,"id":1232,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:7","nodeType":"VariableDeclaration","scope":1257,"src":"6548:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1236,"initialValue":{"baseExpression":{"id":1233,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"6570:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1235,"indexExpression":{"id":1234,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6580:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1237,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"6603:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6617:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1247,"nodeType":"IfStatement","src":"6599:115:7","trueBody":{"id":1246,"nodeType":"Block","src":"6624:90:7","statements":[{"errorCall":{"arguments":[{"id":1241,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6674:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1242,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"6680:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6693:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1240,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"6649:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"RevertStatement","src":"6642:57:7"}]}},{"id":1256,"nodeType":"UncheckedBlock","src":"6727:159:7","statements":[{"expression":{"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1248,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"6834:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1250,"indexExpression":{"id":1249,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6844:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1251,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"6852:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6866:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1255,"nodeType":"ExpressionStatement","src":"6834:37:7"}]}]},"id":1258,"nodeType":"IfStatement","src":"6356:540:7","trueBody":{"id":1230,"nodeType":"Block","src":"6380:148:7","statements":[{"expression":{"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1226,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"6496:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6512:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1229,"nodeType":"ExpressionStatement","src":"6496:21:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1259,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"6910:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:7","typeDescriptions":{}}},"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1278,"nodeType":"Block","src":"7125:206:7","statements":[{"id":1277,"nodeType":"UncheckedBlock","src":"7139:182:7","statements":[{"expression":{"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1271,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"7284:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1273,"indexExpression":{"id":1272,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"7294:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"7301:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1276,"nodeType":"ExpressionStatement","src":"7284:22:7"}]}]},"id":1279,"nodeType":"IfStatement","src":"6906:425:7","trueBody":{"id":1270,"nodeType":"Block","src":"6928:191:7","statements":[{"id":1269,"nodeType":"UncheckedBlock","src":"6942:167:7","statements":[{"expression":{"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1265,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"7073:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"7089:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1268,"nodeType":"ExpressionStatement","src":"7073:21:7"}]}]}},{"eventCall":{"arguments":[{"id":1281,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"7355:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1282,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"7361:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"7365:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1280,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"7346:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1285,"nodeType":"EmitStatement","src":"7341:30:7"}]},"documentation":{"id":1211,"nodeType":"StructuredDocumentation","src":"5962:304:7","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1287,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:7","nodeType":"FunctionDefinition","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"from","nameLocation":"6296:4:7","nodeType":"VariableDeclaration","scope":1287,"src":"6288:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"to","nameLocation":"6310:2:7","nodeType":"VariableDeclaration","scope":1287,"src":"6302:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"value","nameLocation":"6322:5:7","nodeType":"VariableDeclaration","scope":1287,"src":"6314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:7"},"returnParameters":{"id":1219,"nodeType":"ParameterList","parameters":[],"src":"6346:0:7"},"scope":1480,"src":"6271:1107:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1319,"nodeType":"Block","src":"7777:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1295,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"7791:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:7","typeDescriptions":{}}},"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1309,"nodeType":"IfStatement","src":"7787:91:7","trueBody":{"id":1308,"nodeType":"Block","src":"7814:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:7","typeDescriptions":{}}},"id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1301,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"7835:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1307,"nodeType":"RevertStatement","src":"7828:39:7"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:7","typeDescriptions":{}}},"id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"7907:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7916:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1310,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"7887:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1318,"nodeType":"ExpressionStatement","src":"7887:35:7"}]},"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"7384:332:7","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1320,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:7","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"account","nameLocation":"7744:7:7","nodeType":"VariableDeclaration","scope":1320,"src":"7736:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"value","nameLocation":"7761:5:7","nodeType":"VariableDeclaration","scope":1320,"src":"7753:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:7"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[],"src":"7777:0:7"},"scope":1480,"src":"7721:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1352,"nodeType":"Block","src":"8303:150:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1328,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"8317:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:7","typeDescriptions":{}}},"id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1342,"nodeType":"IfStatement","src":"8313:89:7","trueBody":{"id":1341,"nodeType":"Block","src":"8340:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:7","typeDescriptions":{}}},"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1334,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"8361:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1340,"nodeType":"RevertStatement","src":"8354:37:7"}]}},{"expression":{"arguments":[{"id":1344,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"8419:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:7","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"8440:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1343,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"8411:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1351,"nodeType":"ExpressionStatement","src":"8411:35:7"}]},"documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"7935:307:7","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:7","nodeType":"FunctionDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"account","nameLocation":"8270:7:7","nodeType":"VariableDeclaration","scope":1353,"src":"8262:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1325,"mutability":"mutable","name":"value","nameLocation":"8287:5:7","nodeType":"VariableDeclaration","scope":1353,"src":"8279:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:7"},"returnParameters":{"id":1327,"nodeType":"ParameterList","parameters":[],"src":"8303:0:7"},"scope":1480,"src":"8247:206:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1370,"nodeType":"Block","src":"9063:54:7","statements":[{"expression":{"arguments":[{"id":1364,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"9082:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1365,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"9089:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"9098:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1363,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1371,1431],"referencedDeclaration":1431,"src":"9073:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1369,"nodeType":"ExpressionStatement","src":"9073:37:7"}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"8459:525:7","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1371,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:7","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"owner","nameLocation":"9015:5:7","nodeType":"VariableDeclaration","scope":1371,"src":"9007:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"spender","nameLocation":"9030:7:7","nodeType":"VariableDeclaration","scope":1371,"src":"9022:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"value","nameLocation":"9047:5:7","nodeType":"VariableDeclaration","scope":1371,"src":"9039:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:7"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[],"src":"9063:0:7"},"scope":1480,"src":"8989:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1430,"nodeType":"Block","src":"10047:334:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1383,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"10061:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:7","typeDescriptions":{}}},"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1397,"nodeType":"IfStatement","src":"10057:89:7","trueBody":{"id":1396,"nodeType":"Block","src":"10082:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:7","typeDescriptions":{}}},"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1389,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"10103:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"RevertStatement","src":"10096:39:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1398,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"10159:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:7","typeDescriptions":{}}},"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1412,"nodeType":"IfStatement","src":"10155:90:7","trueBody":{"id":1411,"nodeType":"Block","src":"10182:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:7","typeDescriptions":{}}},"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1404,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"10203:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1410,"nodeType":"RevertStatement","src":"10196:38:7"}]}},{"expression":{"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1413,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"10254:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1416,"indexExpression":{"id":1414,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"10266:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1417,"indexExpression":{"id":1415,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"10273:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"10284:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1420,"nodeType":"ExpressionStatement","src":"10254:35:7"},{"condition":{"id":1421,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"10303:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1429,"nodeType":"IfStatement","src":"10299:76:7","trueBody":{"id":1428,"nodeType":"Block","src":"10314:61:7","statements":[{"eventCall":{"arguments":[{"id":1423,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"10342:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1424,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"10349:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"10358:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1422,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10333:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1427,"nodeType":"EmitStatement","src":"10328:36:7"}]}}]},"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"9123:821:7","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1431,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:7","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"owner","nameLocation":"9975:5:7","nodeType":"VariableDeclaration","scope":1431,"src":"9967:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"spender","nameLocation":"9990:7:7","nodeType":"VariableDeclaration","scope":1431,"src":"9982:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"value","nameLocation":"10007:5:7","nodeType":"VariableDeclaration","scope":1431,"src":"9999:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:7","nodeType":"VariableDeclaration","scope":1431,"src":"10014:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1379,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:7"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"10047:0:7"},"scope":1480,"src":"9949:432:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1478,"nodeType":"Block","src":"10752:388:7","statements":[{"assignments":[1442],"declarations":[{"constant":false,"id":1442,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:7","nodeType":"VariableDeclaration","scope":1478,"src":"10762:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1447,"initialValue":{"arguments":[{"id":1444,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"10799:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1445,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"10806:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1443,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"10789:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"10828:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1449,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:7","memberName":"max","nodeType":"MemberAccess","src":"10848:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1477,"nodeType":"IfStatement","src":"10824:310:7","trueBody":{"id":1476,"nodeType":"Block","src":"10867:267:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1455,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"10885:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10904:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1465,"nodeType":"IfStatement","src":"10881:130:7","trueBody":{"id":1464,"nodeType":"Block","src":"10911:100:7","statements":[{"errorCall":{"arguments":[{"id":1459,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"10963:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1460,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"10972:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10990:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1458,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"10936:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1463,"nodeType":"RevertStatement","src":"10929:67:7"}]}},{"id":1475,"nodeType":"UncheckedBlock","src":"11024:100:7","statements":[{"expression":{"arguments":[{"id":1467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"11061:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"11068:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1469,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"11077:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"11096:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1466,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1371,1431],"referencedDeclaration":1431,"src":"11052:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1474,"nodeType":"ExpressionStatement","src":"11052:57:7"}]}]}}]},"documentation":{"id":1432,"nodeType":"StructuredDocumentation","src":"10387:271:7","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1479,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:7","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"owner","nameLocation":"10696:5:7","nodeType":"VariableDeclaration","scope":1479,"src":"10688:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1433,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1436,"mutability":"mutable","name":"spender","nameLocation":"10711:7:7","nodeType":"VariableDeclaration","scope":1479,"src":"10703:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"value","nameLocation":"10728:5:7","nodeType":"VariableDeclaration","scope":1479,"src":"10720:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:7"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[],"src":"10752:0:7"},"scope":1480,"src":"10663:477:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1481,"src":"1401:9741:7","usedErrors":[840,845,850,859,864,869],"usedEvents":[1492,1501]}],"src":"105:11038:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1558]},"id":1559,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1482,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1483,"nodeType":"StructuredDocumentation","src":"132:70:8","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1558,"linearizedBaseContracts":[1558],"name":"IERC20","nameLocation":"213:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"226:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1492,"name":"Transfer","nameLocation":"395:8:8","nodeType":"EventDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:8","nodeType":"VariableDeclaration","scope":1492,"src":"404:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1488,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:8","nodeType":"VariableDeclaration","scope":1492,"src":"426:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1490,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:8","nodeType":"VariableDeclaration","scope":1492,"src":"446:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:8"},"src":"389:72:8"},{"anonymous":false,"documentation":{"id":1493,"nodeType":"StructuredDocumentation","src":"467:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1501,"name":"Approval","nameLocation":"626:8:8","nodeType":"EventDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:8","nodeType":"VariableDeclaration","scope":1501,"src":"635:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1497,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:8","nodeType":"VariableDeclaration","scope":1501,"src":"658:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1499,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:8","nodeType":"VariableDeclaration","scope":1501,"src":"683:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:8"},"src":"620:78:8"},{"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"704:65:8","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1507,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:8","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[],"src":"794:2:8"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1507,"src":"820:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:8"},"scope":1558,"src":"774:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1508,"nodeType":"StructuredDocumentation","src":"835:71:8","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1515,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:8","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"account","nameLocation":"938:7:8","nodeType":"VariableDeclaration","scope":1515,"src":"930:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:8"},"returnParameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1515,"src":"970:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:8"},"scope":1558,"src":"911:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1516,"nodeType":"StructuredDocumentation","src":"985:213:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1525,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:8","nodeType":"FunctionDefinition","parameters":{"id":1521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"to","nameLocation":"1229:2:8","nodeType":"VariableDeclaration","scope":1525,"src":"1221:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1517,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1520,"mutability":"mutable","name":"value","nameLocation":"1241:5:8","nodeType":"VariableDeclaration","scope":1525,"src":"1233:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:8"},"returnParameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1525,"src":"1266:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1522,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:8"},"scope":1558,"src":"1203:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"1278:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1535,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:8","nodeType":"FunctionDefinition","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"owner","nameLocation":"1574:5:8","nodeType":"VariableDeclaration","scope":1535,"src":"1566:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"spender","nameLocation":"1589:7:8","nodeType":"VariableDeclaration","scope":1535,"src":"1581:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:8"},"returnParameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1535,"src":"1621:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:8"},"scope":1558,"src":"1547:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"1636:667:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1545,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:8","nodeType":"FunctionDefinition","parameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"spender","nameLocation":"2333:7:8","nodeType":"VariableDeclaration","scope":1545,"src":"2325:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"value","nameLocation":"2350:5:8","nodeType":"VariableDeclaration","scope":1545,"src":"2342:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:8"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1545,"src":"2375:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1542,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:8"},"scope":1558,"src":"2308:73:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"2387:297:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1557,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:8","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"from","nameLocation":"2719:4:8","nodeType":"VariableDeclaration","scope":1557,"src":"2711:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"to","nameLocation":"2733:2:8","nodeType":"VariableDeclaration","scope":1557,"src":"2725:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"value","nameLocation":"2745:5:8","nodeType":"VariableDeclaration","scope":1557,"src":"2737:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:8"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1557,"src":"2770:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1554,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:8"},"scope":1558,"src":"2689:87:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1559,"src":"203:2575:8","usedErrors":[],"usedEvents":[1492,1501]}],"src":"106:2673:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[1982],"ERC20":[1480],"ERC20Burnable":[1604]},"id":1605,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1560,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1562,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1605,"sourceUnit":1481,"src":"150:35:9","symbolAliases":[{"foreign":{"id":1561,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"158:5:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1564,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1605,"sourceUnit":1983,"src":"186:51:9","symbolAliases":[{"foreign":{"id":1563,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"194:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1566,"name":"Context","nameLocations":["483:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"483:7:9"},"id":1567,"nodeType":"InheritanceSpecifier","src":"483:7:9"},{"baseName":{"id":1568,"name":"ERC20","nameLocations":["492:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":1480,"src":"492:5:9"},"id":1569,"nodeType":"InheritanceSpecifier","src":"492:5:9"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"239:208:9","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1604,"linearizedBaseContracts":[1604,1480,870,1916,1558,1982],"name":"ERC20Burnable","nameLocation":"466:13:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1581,"nodeType":"Block","src":"662:43:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1576,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"678:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"692:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1575,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"672:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1580,"nodeType":"ExpressionStatement","src":"672:26:9"}]},"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"504:109:9","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1582,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:9","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"value","nameLocation":"640:5:9","nodeType":"VariableDeclaration","scope":1582,"src":"632:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:9"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[],"src":"662:0:9"},"scope":1604,"src":"618:87:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1602,"nodeType":"Block","src":"1086:93:9","statements":[{"expression":{"arguments":[{"id":1591,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"1112:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1592,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"1121:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1135:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1590,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"1096:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1596,"nodeType":"ExpressionStatement","src":"1096:45:9"},{"expression":{"arguments":[{"id":1598,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"1157:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1166:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1597,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"1151:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1601,"nodeType":"ExpressionStatement","src":"1151:21:9"}]},"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"711:305:9","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1603,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:9","nodeType":"FunctionDefinition","parameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"account","nameLocation":"1047:7:9","nodeType":"VariableDeclaration","scope":1603,"src":"1039:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1587,"mutability":"mutable","name":"value","nameLocation":"1064:5:9","nodeType":"VariableDeclaration","scope":1603,"src":"1056:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:9"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[],"src":"1086:0:9"},"scope":1604,"src":"1021:158:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1605,"src":"448:733:9","usedErrors":[840,845,850,859,864,869],"usedEvents":[1492,1501]}],"src":"124:1058:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[2980],"EIP712":[3207],"ERC20":[1480],"ERC20Permit":[1758],"IERC20Permit":[1952],"Nonces":[2050]},"id":1759,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1606,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1608,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1759,"sourceUnit":1953,"src":"148:48:10","symbolAliases":[{"foreign":{"id":1607,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"156:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1759,"sourceUnit":1481,"src":"197:35:10","symbolAliases":[{"foreign":{"id":1609,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"205:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1759,"sourceUnit":2981,"src":"233:60:10","symbolAliases":[{"foreign":{"id":1611,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"241:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1614,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1759,"sourceUnit":3208,"src":"294:62:10","symbolAliases":[{"foreign":{"id":1613,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"302:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1759,"sourceUnit":2051,"src":"357:49:10","symbolAliases":[{"foreign":{"id":1615,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"365:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1618,"name":"ERC20","nameLocations":["929:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1480,"src":"929:5:10"},"id":1619,"nodeType":"InheritanceSpecifier","src":"929:5:10"},{"baseName":{"id":1620,"name":"IERC20Permit","nameLocations":["936:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1952,"src":"936:12:10"},"id":1621,"nodeType":"InheritanceSpecifier","src":"936:12:10"},{"baseName":{"id":1622,"name":"EIP712","nameLocations":["950:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":3207,"src":"950:6:10"},"id":1623,"nodeType":"InheritanceSpecifier","src":"950:6:10"},{"baseName":{"id":1624,"name":"Nonces","nameLocations":["958:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":2050,"src":"958:6:10"},"id":1625,"nodeType":"InheritanceSpecifier","src":"958:6:10"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"408:487:10","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1758,"linearizedBaseContracts":[1758,2050,3207,802,1952,1480,870,1916,1558,1982],"name":"ERC20Permit","nameLocation":"914:11:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1630,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:10","nodeType":"VariableDeclaration","scope":1758,"src":"971:146:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1627,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"1124:52:10","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1635,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:10","nodeType":"ErrorDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:10","nodeType":"VariableDeclaration","scope":1635,"src":"1211:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:10"},"src":"1181:48:10"},{"documentation":{"id":1636,"nodeType":"StructuredDocumentation","src":"1235:45:10","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1642,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:10","nodeType":"ErrorDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"signer","nameLocation":"1320:6:10","nodeType":"VariableDeclaration","scope":1642,"src":"1312:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"owner","nameLocation":"1336:5:10","nodeType":"VariableDeclaration","scope":1642,"src":"1328:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:10"},"src":"1285:58:10"},{"body":{"id":1652,"nodeType":"Block","src":"1624:2:10","statements":[]},"documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"1349:220:10","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1653,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1648,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"1613:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1650,"kind":"baseConstructorSpecifier","modifierName":{"id":1647,"name":"EIP712","nameLocations":["1606:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":3207,"src":"1606:6:10"},"nodeType":"ModifierInvocation","src":"1606:17:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"name","nameLocation":"1600:4:10","nodeType":"VariableDeclaration","scope":1653,"src":"1586:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1644,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:10"},"returnParameters":{"id":1651,"nodeType":"ParameterList","parameters":[],"src":"1624:0:10"},"scope":1758,"src":"1574:52:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1937],"body":{"id":1729,"nodeType":"Block","src":"1869:483:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1671,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1673,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"1901:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1680,"nodeType":"IfStatement","src":"1879:97:10","trueBody":{"id":1679,"nodeType":"Block","src":"1911:65:10","statements":[{"errorCall":{"arguments":[{"id":1676,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"1956:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1675,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1932:23:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1678,"nodeType":"RevertStatement","src":"1925:40:10"}]}},{"assignments":[1682],"declarations":[{"constant":false,"id":1682,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:10","nodeType":"VariableDeclaration","scope":1729,"src":"1986:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1696,"initialValue":{"arguments":[{"arguments":[{"id":1686,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2028:15:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1687,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2045:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1688,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"2052:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2061:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1691,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2078:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1690,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"2068:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1693,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2086:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1684,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:10","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1683,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:10"},{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"hash","nameLocation":"2115:4:10","nodeType":"VariableDeclaration","scope":1729,"src":"2107:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1702,"initialValue":{"arguments":[{"id":1700,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"2139:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1699,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"2122:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:10"},{"assignments":[1704],"declarations":[{"constant":false,"id":1704,"mutability":"mutable","name":"signer","nameLocation":"2169:6:10","nodeType":"VariableDeclaration","scope":1729,"src":"2161:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1712,"initialValue":{"arguments":[{"id":1707,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"2192:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1708,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"2198:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1709,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2201:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1710,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2204:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1705,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"2178:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2980_$","typeString":"type(library ECDSA)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:10","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"2178:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1713,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"2220:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1714,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2230:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1722,"nodeType":"IfStatement","src":"2216:88:10","trueBody":{"id":1721,"nodeType":"Block","src":"2237:67:10","statements":[{"errorCall":{"arguments":[{"id":1717,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"2279:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1718,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2287:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1716,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"2258:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1720,"nodeType":"RevertStatement","src":"2251:42:10"}]}},{"expression":{"arguments":[{"id":1724,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2323:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1725,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"2330:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2339:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1723,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1371,1431],"referencedDeclaration":1371,"src":"2314:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1728,"nodeType":"ExpressionStatement","src":"2314:31:10"}]},"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"1632:43:10","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:10","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"owner","nameLocation":"1713:5:10","nodeType":"VariableDeclaration","scope":1730,"src":"1705:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1655,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1658,"mutability":"mutable","name":"spender","nameLocation":"1736:7:10","nodeType":"VariableDeclaration","scope":1730,"src":"1728:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1660,"mutability":"mutable","name":"value","nameLocation":"1761:5:10","nodeType":"VariableDeclaration","scope":1730,"src":"1753:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:10","nodeType":"VariableDeclaration","scope":1730,"src":"1776:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1664,"mutability":"mutable","name":"v","nameLocation":"1808:1:10","nodeType":"VariableDeclaration","scope":1730,"src":"1802:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1663,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"r","nameLocation":"1827:1:10","nodeType":"VariableDeclaration","scope":1730,"src":"1819:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"s","nameLocation":"1846:1:10","nodeType":"VariableDeclaration","scope":1730,"src":"1838:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:10"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[],"src":"1869:0:10"},"scope":1758,"src":"1680:672:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1945,2009],"body":{"id":1746,"nodeType":"Block","src":"2506:43:10","statements":[{"expression":{"arguments":[{"id":1743,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"2536:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1741,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1758_$","typeString":"type(contract super ERC20Permit)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:10","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2009,"src":"2523:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1740,"id":1745,"nodeType":"Return","src":"2516:26:10"}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"2358:43:10","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1747,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:10","nodeType":"FunctionDefinition","overrides":{"id":1737,"nodeType":"OverrideSpecifier","overrides":[{"id":1735,"name":"IERC20Permit","nameLocations":["2466:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1952,"src":"2466:12:10"},{"id":1736,"name":"Nonces","nameLocations":["2480:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":2050,"src":"2480:6:10"}],"src":"2457:30:10"},"parameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"owner","nameLocation":"2430:5:10","nodeType":"VariableDeclaration","scope":1747,"src":"2422:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:10"},"returnParameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1747,"src":"2497:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:10"},"scope":1758,"src":"2406:143:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1951],"body":{"id":1756,"nodeType":"Block","src":"2724:44:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1753,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"2741:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1752,"id":1755,"nodeType":"Return","src":"2734:27:10"}]},"documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"2555:43:10","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1757,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:10","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[],"src":"2681:2:10"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1757,"src":"2715:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:10"},"scope":1758,"src":"2656:112:10","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1759,"src":"896:1874:10","usedErrors":[840,845,850,859,864,869,1635,1642,1992,2064,2066,2643,2648,2653],"usedEvents":[782,1492,1501]}],"src":"122:2649:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Checkpoints":[7767],"ERC20":[1480],"ERC20Votes":[1890],"Votes":[777]},"id":1891,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1760,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"121:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1762,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1891,"sourceUnit":1481,"src":"147:35:11","symbolAliases":[{"foreign":{"id":1761,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"155:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","file":"../../../governance/utils/Votes.sol","id":1764,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1891,"sourceUnit":778,"src":"183:58:11","symbolAliases":[{"foreign":{"id":1763,"name":"Votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"191:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../../utils/structs/Checkpoints.sol","id":1766,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1891,"sourceUnit":7768,"src":"242:67:11","symbolAliases":[{"foreign":{"id":1765,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"250:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1768,"name":"ERC20","nameLocations":["1201:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":1480,"src":"1201:5:11"},"id":1769,"nodeType":"InheritanceSpecifier","src":"1201:5:11"},{"baseName":{"id":1770,"name":"Votes","nameLocations":["1208:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1208:5:11"},"id":1771,"nodeType":"InheritanceSpecifier","src":"1208:5:11"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"311:857:11","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked."},"fullyImplemented":true,"id":1890,"internalFunctionIDs":{"754":1,"768":2},"linearizedBaseContracts":[1890,777,813,230,828,2050,3207,802,1480,870,1916,1558,1982],"name":"ERC20Votes","nameLocation":"1187:10:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"1220:100:11","text":" @dev Total supply cap has been exceeded, introducing a risk of votes overflowing."},"errorSelector":"1cb15d26","id":1778,"name":"ERC20ExceededSafeSupply","nameLocation":"1331:23:11","nodeType":"ErrorDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"increasedSupply","nameLocation":"1363:15:11","nodeType":"VariableDeclaration","scope":1778,"src":"1355:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"cap","nameLocation":"1388:3:11","nodeType":"VariableDeclaration","scope":1778,"src":"1380:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1380:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:38:11"},"src":"1325:68:11"},{"body":{"id":1790,"nodeType":"Block","src":"2146:41:11","statements":[{"expression":{"expression":{"arguments":[{"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2168:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1785,"name":"uint208","nodeType":"ElementaryTypeName","src":"2168:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":1784,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2163:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2177:3:11","memberName":"max","nodeType":"MemberAccess","src":"2163:17:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":1783,"id":1789,"nodeType":"Return","src":"2156:24:11"}]},"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"1399:680:11","text":" @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n so that checkpoints can be stored in the Trace208 structure used by {{Votes}}. Increasing this value will not\n remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n {_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n additional logic requires it. When resolving override conflicts on this function, the minimum should be\n returned."},"id":1791,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"2093:10:11","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[],"src":"2103:2:11"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1791,"src":"2137:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"2137:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2136:9:11"},"scope":1890,"src":"2084:103:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1287],"body":{"id":1844,"nodeType":"Block","src":"2411:329:11","statements":[{"expression":{"arguments":[{"id":1805,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"2435:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1806,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"2441:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"2445:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1802,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2421:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1890_$","typeString":"type(contract super ERC20Votes)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2427:7:11","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"2421:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1809,"nodeType":"ExpressionStatement","src":"2421:30:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1810,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"2465:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2481:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2473:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1811,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:11","typeDescriptions":{}}},"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2465:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1837,"nodeType":"IfStatement","src":"2461:226:11","trueBody":{"id":1836,"nodeType":"Block","src":"2485:202:11","statements":[{"assignments":[1817],"declarations":[{"constant":false,"id":1817,"mutability":"mutable","name":"supply","nameLocation":"2507:6:11","nodeType":"VariableDeclaration","scope":1836,"src":"2499:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1820,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1818,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"2516:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2516:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2499:30:11"},{"assignments":[1822],"declarations":[{"constant":false,"id":1822,"mutability":"mutable","name":"cap","nameLocation":"2551:3:11","nodeType":"VariableDeclaration","scope":1836,"src":"2543:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1821,"name":"uint256","nodeType":"ElementaryTypeName","src":"2543:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1825,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1823,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"2557:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2557:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2543:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1826,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"2587:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1827,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"2596:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2587:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1835,"nodeType":"IfStatement","src":"2583:94:11","trueBody":{"id":1834,"nodeType":"Block","src":"2601:76:11","statements":[{"errorCall":{"arguments":[{"id":1830,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"2650:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1831,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"2658:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1829,"name":"ERC20ExceededSafeSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"2626:23:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1833,"nodeType":"RevertStatement","src":"2619:43:11"}]}}]}},{"expression":{"arguments":[{"id":1839,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"2717:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1840,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"2723:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"2727:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1838,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"2696:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1843,"nodeType":"ExpressionStatement","src":"2696:37:11"}]},"documentation":{"id":1792,"nodeType":"StructuredDocumentation","src":"2193:129:11","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2336:7:11","nodeType":"FunctionDefinition","overrides":{"id":1800,"nodeType":"OverrideSpecifier","overrides":[],"src":"2402:8:11"},"parameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"from","nameLocation":"2352:4:11","nodeType":"VariableDeclaration","scope":1845,"src":"2344:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1793,"name":"address","nodeType":"ElementaryTypeName","src":"2344:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"to","nameLocation":"2366:2:11","nodeType":"VariableDeclaration","scope":1845,"src":"2358:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"value","nameLocation":"2378:5:11","nodeType":"VariableDeclaration","scope":1845,"src":"2370:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"2370:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2343:41:11"},"returnParameters":{"id":1801,"nodeType":"ParameterList","parameters":[],"src":"2411:0:11"},"scope":1890,"src":"2327:413:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[776],"body":{"id":1858,"nodeType":"Block","src":"3091:42:11","statements":[{"expression":{"arguments":[{"id":1855,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"3118:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1854,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"3108:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1853,"id":1857,"nodeType":"Return","src":"3101:25:11"}]},"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"2746:249:11","text":" @dev Returns the voting units of an `account`.\n WARNING: Overriding this function may compromise the internal vote accounting.\n `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change."},"id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"3009:15:11","nodeType":"FunctionDefinition","overrides":{"id":1850,"nodeType":"OverrideSpecifier","overrides":[],"src":"3064:8:11"},"parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"account","nameLocation":"3033:7:11","nodeType":"VariableDeclaration","scope":1859,"src":"3025:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3024:17:11"},"returnParameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1859,"src":"3082:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"3082:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3081:9:11"},"scope":1890,"src":"3000:133:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"3286:48:11","statements":[{"expression":{"arguments":[{"id":1868,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3319:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1867,"name":"_numCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"3303:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint32_$","typeString":"function (address) view returns (uint32)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3303:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1866,"id":1870,"nodeType":"Return","src":"3296:31:11"}]},"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"3139:64:11","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"3217:14:11","nodeType":"FunctionDefinition","parameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"account","nameLocation":"3240:7:11","nodeType":"VariableDeclaration","scope":1872,"src":"3232:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"3232:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3231:17:11"},"returnParameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"3278:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1864,"name":"uint32","nodeType":"ElementaryTypeName","src":"3278:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3277:8:11"},"scope":1890,"src":"3208:126:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1888,"nodeType":"Block","src":"3524:50:11","statements":[{"expression":{"arguments":[{"id":1884,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"3554:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1885,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"3563:3:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1883,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"3541:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$returns$_t_struct$_Checkpoint208_$6734_memory_ptr_$","typeString":"function (address,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":1882,"id":1887,"nodeType":"Return","src":"3534:33:11"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"3340:66:11","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1889,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"3420:11:11","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"account","nameLocation":"3440:7:11","nodeType":"VariableDeclaration","scope":1889,"src":"3432:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"pos","nameLocation":"3456:3:11","nodeType":"VariableDeclaration","scope":1889,"src":"3449:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1876,"name":"uint32","nodeType":"ElementaryTypeName","src":"3449:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3431:29:11"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1889,"src":"3490:32:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":1880,"nodeType":"UserDefinedTypeName","pathNode":{"id":1879,"name":"Checkpoints.Checkpoint208","nameLocations":["3490:11:11","3502:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"3490:25:11"},"referencedDeclaration":6734,"src":"3490:25:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"3489:34:11"},"scope":1890,"src":"3411:163:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1891,"src":"1169:2407:11","usedErrors":[155,281,288,840,845,850,859,864,869,1778,1992,2064,2066,2643,2648,2653,4345,6203],"usedEvents":[164,173,782,1492,1501]}],"src":"121:3456:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1558],"IERC20Metadata":[1916]},"id":1917,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1892,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":1559,"src":"151:37:12","symbolAliases":[{"foreign":{"id":1893,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"159:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1896,"name":"IERC20","nameLocations":["305:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1558,"src":"305:6:12"},"id":1897,"nodeType":"InheritanceSpecifier","src":"305:6:12"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"190:86:12","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1916,"linearizedBaseContracts":[1916,1558],"name":"IERC20Metadata","nameLocation":"287:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"318:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1903,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:12","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[],"src":"390:2:12"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1903,"src":"416:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1900,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:12"},"scope":1916,"src":"377:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"437:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1909,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:12","nodeType":"FunctionDefinition","parameters":{"id":1905,"nodeType":"ParameterList","parameters":[],"src":"513:2:12"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1909,"src":"539:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1906,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:12"},"scope":1916,"src":"498:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1910,"nodeType":"StructuredDocumentation","src":"560:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1915,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:12","nodeType":"FunctionDefinition","parameters":{"id":1911,"nodeType":"ParameterList","parameters":[],"src":"647:2:12"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1915,"src":"673:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1912,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:12"},"scope":1916,"src":"630:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1917,"src":"277:405:12","usedErrors":[],"usedEvents":[1492,1501]}],"src":"125:558:12"},"id":12},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1952]},"id":1953,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1918,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"149:1963:13","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1952,"linearizedBaseContracts":[1952],"name":"IERC20Permit","nameLocation":"2123:12:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1920,"nodeType":"StructuredDocumentation","src":"2142:850:13","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1937,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:13","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"owner","nameLocation":"3030:5:13","nodeType":"VariableDeclaration","scope":1937,"src":"3022:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"spender","nameLocation":"3053:7:13","nodeType":"VariableDeclaration","scope":1937,"src":"3045:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1923,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"value","nameLocation":"3078:5:13","nodeType":"VariableDeclaration","scope":1937,"src":"3070:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1928,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:13","nodeType":"VariableDeclaration","scope":1937,"src":"3093:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1930,"mutability":"mutable","name":"v","nameLocation":"3125:1:13","nodeType":"VariableDeclaration","scope":1937,"src":"3119:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1929,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"r","nameLocation":"3144:1:13","nodeType":"VariableDeclaration","scope":1937,"src":"3136:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"s","nameLocation":"3163:1:13","nodeType":"VariableDeclaration","scope":1937,"src":"3155:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:13"},"returnParameters":{"id":1936,"nodeType":"ParameterList","parameters":[],"src":"3179:0:13"},"scope":1952,"src":"2997:183:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1938,"nodeType":"StructuredDocumentation","src":"3186:294:13","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1945,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:13","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"owner","nameLocation":"3509:5:13","nodeType":"VariableDeclaration","scope":1945,"src":"3501:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:13"},"returnParameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1945,"src":"3539:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:13"},"scope":1952,"src":"3485:63:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1946,"nodeType":"StructuredDocumentation","src":"3554:128:13","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1951,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:13","nodeType":"FunctionDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[],"src":"3765:2:13"},"returnParameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1951,"src":"3791:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:13"},"scope":1952,"src":"3740:60:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1953,"src":"2113:1689:13","usedErrors":[],"usedEvents":[]}],"src":"123:3680:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1982]},"id":1983,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1954,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"127:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1982,"linearizedBaseContracts":[1982],"name":"Context","nameLocation":"642:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":1963,"nodeType":"Block","src":"718:34:14","statements":[{"expression":{"expression":{"id":1960,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:14","memberName":"sender","nodeType":"MemberAccess","src":"735:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1959,"id":1962,"nodeType":"Return","src":"728:17:14"}]},"id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:14","nodeType":"FunctionDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[],"src":"675:2:14"},"returnParameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1964,"src":"709:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:14"},"scope":1982,"src":"656:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1972,"nodeType":"Block","src":"825:32:14","statements":[{"expression":{"expression":{"id":1969,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:14","memberName":"data","nodeType":"MemberAccess","src":"842:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1968,"id":1971,"nodeType":"Return","src":"835:15:14"}]},"id":1973,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:14","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[],"src":"775:2:14"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"809:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1966,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:14"},"scope":1982,"src":"758:99:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1980,"nodeType":"Block","src":"935:25:14","statements":[{"expression":{"hexValue":"30","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1977,"id":1979,"nodeType":"Return","src":"945:8:14"}]},"id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:14","nodeType":"FunctionDefinition","parameters":{"id":1974,"nodeType":"ParameterList","parameters":[],"src":"892:2:14"},"returnParameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1981,"src":"926:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:14"},"scope":1982,"src":"863:97:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1983,"src":"624:338:14","usedErrors":[],"usedEvents":[]}],"src":"101:862:14"},"id":14},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[2050]},"id":2051,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1984,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:15"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"125:83:15","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2050,"linearizedBaseContracts":[2050],"name":"Nonces","nameLocation":"227:6:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"240:90:15","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1992,"name":"InvalidAccountNonce","nameLocation":"341:19:15","nodeType":"ErrorDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"account","nameLocation":"369:7:15","nodeType":"VariableDeclaration","scope":1992,"src":"361:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:15","nodeType":"VariableDeclaration","scope":1992,"src":"378:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:15"},"src":"335:65:15"},{"constant":false,"id":1996,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:15","nodeType":"VariableDeclaration","scope":2050,"src":"406:51:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1995,"keyName":"account","keyNameLocation":"422:7:15","keyType":{"id":1993,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2008,"nodeType":"Block","src":"607:38:15","statements":[{"expression":{"baseExpression":{"id":2004,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"624:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2006,"indexExpression":{"id":2005,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"632:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2003,"id":2007,"nodeType":"Return","src":"617:21:15"}]},"documentation":{"id":1997,"nodeType":"StructuredDocumentation","src":"464:69:15","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":2009,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:15","nodeType":"FunctionDefinition","parameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"owner","nameLocation":"562:5:15","nodeType":"VariableDeclaration","scope":2009,"src":"554:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1998,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:15"},"returnParameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2009,"src":"598:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:15"},"scope":2050,"src":"538:107:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2023,"nodeType":"Block","src":"828:326:15","statements":[{"id":2022,"nodeType":"UncheckedBlock","src":"1031:117:15","statements":[{"expression":{"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:15","subExpression":{"baseExpression":{"id":2017,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"1121:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2019,"indexExpression":{"id":2018,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"1129:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2016,"id":2021,"nodeType":"Return","src":"1114:23:15"}]}]},"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"651:103:15","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:15","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"owner","nameLocation":"786:5:15","nodeType":"VariableDeclaration","scope":2024,"src":"778:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2011,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:15"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"819:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:15"},"scope":2050,"src":"759:395:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2048,"nodeType":"Block","src":"1338:149:15","statements":[{"assignments":[2033],"declarations":[{"constant":false,"id":2033,"mutability":"mutable","name":"current","nameLocation":"1356:7:15","nodeType":"VariableDeclaration","scope":2048,"src":"1348:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2037,"initialValue":{"arguments":[{"id":2035,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1376:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2034,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"1366:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2038,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"1396:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2039,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2047,"nodeType":"IfStatement","src":"1392:89:15","trueBody":{"id":2046,"nodeType":"Block","src":"1414:67:15","statements":[{"errorCall":{"arguments":[{"id":2042,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1455:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2043,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1462:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2041,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"1435:19:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2045,"nodeType":"RevertStatement","src":"1428:42:15"}]}}]},"documentation":{"id":2025,"nodeType":"StructuredDocumentation","src":"1160:100:15","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":2049,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:15","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"owner","nameLocation":"1299:5:15","nodeType":"VariableDeclaration","scope":2049,"src":"1291:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2026,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:15","nodeType":"VariableDeclaration","scope":2049,"src":"1306:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:15"},"returnParameters":{"id":2031,"nodeType":"ParameterList","parameters":[],"src":"1338:0:15"},"scope":2050,"src":"1265:222:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2051,"src":"209:1280:15","usedErrors":[1992],"usedEvents":[]}],"src":"99:1391:15"},"id":15},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2056],"ShortStrings":[2267],"StorageSlot":[2377]},"id":2268,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2052,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2054,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2268,"sourceUnit":2378,"src":"132:46:16","symbolAliases":[{"foreign":{"id":2053,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"140:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2056,"name":"ShortString","nameLocation":"353:11:16","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:16","underlyingType":{"id":2055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2057,"nodeType":"StructuredDocumentation","src":"378:876:16","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2267,"linearizedBaseContracts":[2267],"name":"ShortStrings","nameLocation":"1263:12:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2060,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:16","nodeType":"VariableDeclaration","scope":2267,"src":"1345:111:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2064,"name":"StringTooLong","nameLocation":"1469:13:16","nodeType":"ErrorDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"str","nameLocation":"1490:3:16","nodeType":"VariableDeclaration","scope":2064,"src":"1483:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2061,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:16"},"src":"1463:32:16"},{"errorSelector":"b3512b0c","id":2066,"name":"InvalidShortString","nameLocation":"1506:18:16","nodeType":"ErrorDefinition","parameters":{"id":2065,"nodeType":"ParameterList","parameters":[],"src":"1524:2:16"},"src":"1500:27:16"},{"body":{"id":2109,"nodeType":"Block","src":"1786:208:16","statements":[{"assignments":[2076],"declarations":[{"constant":false,"id":2076,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:16","nodeType":"VariableDeclaration","scope":2109,"src":"1796:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2075,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2081,"initialValue":{"arguments":[{"id":2079,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"1822:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2077,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:16","typeDescriptions":{}}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2082,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1840:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:16","memberName":"length","nodeType":"MemberAccess","src":"1840:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:16","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2091,"nodeType":"IfStatement","src":"1836:72:16","trueBody":{"id":2090,"nodeType":"Block","src":"1858:50:16","statements":[{"errorCall":{"arguments":[{"id":2087,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"1893:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2086,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"1879:13:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2089,"nodeType":"RevertStatement","src":"1872:25:16"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2100,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1965:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:16","typeDescriptions":{}}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:16","typeDescriptions":{}}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2103,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1974:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:16","memberName":"length","nodeType":"MemberAccess","src":"1974:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:16","typeDescriptions":{}}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2092,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"1924:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"type(ShortString)"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:16","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:16","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"functionReturnParameters":2074,"id":2108,"nodeType":"Return","src":"1917:70:16"}]},"documentation":{"id":2067,"nodeType":"StructuredDocumentation","src":"1533:170:16","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2110,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:16","nodeType":"FunctionDefinition","parameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"str","nameLocation":"1745:3:16","nodeType":"VariableDeclaration","scope":2110,"src":"1731:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2068,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:16"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2110,"src":"1773:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":2072,"nodeType":"UserDefinedTypeName","pathNode":{"id":2071,"name":"ShortString","nameLocations":["1773:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"1773:11:16"},"referencedDeclaration":2056,"src":"1773:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:16"},"scope":2267,"src":"1708:286:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2135,"nodeType":"Block","src":"2152:331:16","statements":[{"assignments":[2120],"declarations":[{"constant":false,"id":2120,"mutability":"mutable","name":"len","nameLocation":"2170:3:16","nodeType":"VariableDeclaration","scope":2135,"src":"2162:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2124,"initialValue":{"arguments":[{"id":2122,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2187:4:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}],"id":2121,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"2176:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2056_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:16"},{"assignments":[2126],"declarations":[{"constant":false,"id":2126,"mutability":"mutable","name":"str","nameLocation":"2294:3:16","nodeType":"VariableDeclaration","scope":2135,"src":"2280:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2125,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2131,"initialValue":{"arguments":[{"hexValue":"3332","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2127,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:16"},{"AST":{"nativeSrc":"2376:81:16","nodeType":"YulBlock","src":"2376:81:16","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2397:3:16","nodeType":"YulIdentifier","src":"2397:3:16"},{"name":"len","nativeSrc":"2402:3:16","nodeType":"YulIdentifier","src":"2402:3:16"}],"functionName":{"name":"mstore","nativeSrc":"2390:6:16","nodeType":"YulIdentifier","src":"2390:6:16"},"nativeSrc":"2390:16:16","nodeType":"YulFunctionCall","src":"2390:16:16"},"nativeSrc":"2390:16:16","nodeType":"YulExpressionStatement","src":"2390:16:16"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2430:3:16","nodeType":"YulIdentifier","src":"2430:3:16"},{"kind":"number","nativeSrc":"2435:4:16","nodeType":"YulLiteral","src":"2435:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2426:3:16","nodeType":"YulIdentifier","src":"2426:3:16"},"nativeSrc":"2426:14:16","nodeType":"YulFunctionCall","src":"2426:14:16"},{"name":"sstr","nativeSrc":"2442:4:16","nodeType":"YulIdentifier","src":"2442:4:16"}],"functionName":{"name":"mstore","nativeSrc":"2419:6:16","nodeType":"YulIdentifier","src":"2419:6:16"},"nativeSrc":"2419:28:16","nodeType":"YulFunctionCall","src":"2419:28:16"},"nativeSrc":"2419:28:16","nodeType":"YulExpressionStatement","src":"2419:28:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2120,"isOffset":false,"isSlot":false,"src":"2402:3:16","valueSize":1},{"declaration":2114,"isOffset":false,"isSlot":false,"src":"2442:4:16","valueSize":1},{"declaration":2126,"isOffset":false,"isSlot":false,"src":"2397:3:16","valueSize":1},{"declaration":2126,"isOffset":false,"isSlot":false,"src":"2430:3:16","valueSize":1}],"id":2132,"nodeType":"InlineAssembly","src":"2367:90:16"},{"expression":{"id":2133,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"2473:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2118,"id":2134,"nodeType":"Return","src":"2466:10:16"}]},"documentation":{"id":2111,"nodeType":"StructuredDocumentation","src":"2000:73:16","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2136,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:16","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:16","nodeType":"VariableDeclaration","scope":2136,"src":"2096:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":2113,"nodeType":"UserDefinedTypeName","pathNode":{"id":2112,"name":"ShortString","nameLocations":["2096:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"2096:11:16"},"referencedDeclaration":2056,"src":"2096:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:16"},"returnParameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2136,"src":"2137:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2116,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:16"},"scope":2267,"src":"2078:405:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2167,"nodeType":"Block","src":"2625:175:16","statements":[{"assignments":[2146],"declarations":[{"constant":false,"id":2146,"mutability":"mutable","name":"result","nameLocation":"2643:6:16","nodeType":"VariableDeclaration","scope":2167,"src":"2635:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2156,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2151,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"2679:4:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}],"expression":{"id":2149,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"2660:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"type(ShortString)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2056_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:16","typeDescriptions":{}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2706:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:16","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2164,"nodeType":"IfStatement","src":"2702:69:16","trueBody":{"id":2163,"nodeType":"Block","src":"2719:52:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2160,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"2740:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2162,"nodeType":"RevertStatement","src":"2733:27:16"}]}},{"expression":{"id":2165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2787:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2144,"id":2166,"nodeType":"Return","src":"2780:13:16"}]},"documentation":{"id":2137,"nodeType":"StructuredDocumentation","src":"2489:61:16","text":" @dev Return the length of a `ShortString`."},"id":2168,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:16","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:16","nodeType":"VariableDeclaration","scope":2168,"src":"2575:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":2139,"nodeType":"UserDefinedTypeName","pathNode":{"id":2138,"name":"ShortString","nameLocations":["2575:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"2575:11:16"},"referencedDeclaration":2056,"src":"2575:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:16"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2168,"src":"2616:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:16"},"scope":2267,"src":"2555:245:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2207,"nodeType":"Block","src":"3023:231:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3043:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2179,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:16","typeDescriptions":{}}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:16","memberName":"length","nodeType":"MemberAccess","src":"3037:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2205,"nodeType":"Block","src":"3121:127:16","statements":[{"expression":{"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2194,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"3161:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2191,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"3135:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2377_$","typeString":"type(library StorageSlot)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:16","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2354,"src":"3135:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2285_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2285_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2284,"src":"3135:38:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3176:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2199,"nodeType":"ExpressionStatement","src":"3135:46:16"},{"expression":{"arguments":[{"id":2202,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"3219:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2200,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"3202:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"type(ShortString)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:16","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:16","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"functionReturnParameters":2178,"id":2204,"nodeType":"Return","src":"3195:42:16"}]},"id":2206,"nodeType":"IfStatement","src":"3033:215:16","trueBody":{"id":2190,"nodeType":"Block","src":"3063:52:16","statements":[{"expression":{"arguments":[{"id":2187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3098:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2186,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"3084:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"functionReturnParameters":2178,"id":2189,"nodeType":"Return","src":"3077:27:16"}]}}]},"documentation":{"id":2169,"nodeType":"StructuredDocumentation","src":"2806:103:16","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2208,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:16","nodeType":"FunctionDefinition","parameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"value","nameLocation":"2963:5:16","nodeType":"VariableDeclaration","scope":2208,"src":"2949:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2170,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2173,"mutability":"mutable","name":"store","nameLocation":"2985:5:16","nodeType":"VariableDeclaration","scope":2208,"src":"2970:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2172,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:16"},"returnParameters":{"id":2178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2208,"src":"3010:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":2176,"nodeType":"UserDefinedTypeName","pathNode":{"id":2175,"name":"ShortString","nameLocations":["3010:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"3010:11:16"},"referencedDeclaration":2056,"src":"3010:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:16"},"scope":2267,"src":"2914:340:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2234,"nodeType":"Block","src":"3494:158:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"3527:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}],"expression":{"id":2219,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"3508:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"type(ShortString)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2056_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2223,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"3537:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2232,"nodeType":"Block","src":"3609:37:16","statements":[{"expression":{"id":2230,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"3630:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2218,"id":2231,"nodeType":"Return","src":"3623:12:16"}]},"id":2233,"nodeType":"IfStatement","src":"3504:142:16","trueBody":{"id":2229,"nodeType":"Block","src":"3556:47:16","statements":[{"expression":{"arguments":[{"id":2226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"3586:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}],"id":2225,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"3577:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2056_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2218,"id":2228,"nodeType":"Return","src":"3570:22:16"}]}}]},"documentation":{"id":2209,"nodeType":"StructuredDocumentation","src":"3260:120:16","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2235,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:16","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"value","nameLocation":"3427:5:16","nodeType":"VariableDeclaration","scope":2235,"src":"3415:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"ShortString","nameLocations":["3415:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"3415:11:16"},"referencedDeclaration":2056,"src":"3415:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"store","nameLocation":"3449:5:16","nodeType":"VariableDeclaration","scope":2235,"src":"3434:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2213,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:16"},"returnParameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2235,"src":"3479:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2216,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:16"},"scope":2267,"src":"3385:267:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2265,"nodeType":"Block","src":"4132:174:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"4165:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}],"expression":{"id":2246,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"4146:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"type(ShortString)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2056_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2250,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"4175:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2263,"nodeType":"Block","src":"4249:51:16","statements":[{"expression":{"expression":{"arguments":[{"id":2259,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"4276:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2257,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:16","typeDescriptions":{}}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:16","memberName":"length","nodeType":"MemberAccess","src":"4270:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2245,"id":2262,"nodeType":"Return","src":"4263:26:16"}]},"id":2264,"nodeType":"IfStatement","src":"4142:158:16","trueBody":{"id":2256,"nodeType":"Block","src":"4194:49:16","statements":[{"expression":{"arguments":[{"id":2253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"4226:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}],"id":2252,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"4215:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2056_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2245,"id":2255,"nodeType":"Return","src":"4208:24:16"}]}}]},"documentation":{"id":2236,"nodeType":"StructuredDocumentation","src":"3658:364:16","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2266,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:16","nodeType":"FunctionDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"value","nameLocation":"4071:5:16","nodeType":"VariableDeclaration","scope":2266,"src":"4059:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":2238,"nodeType":"UserDefinedTypeName","pathNode":{"id":2237,"name":"ShortString","nameLocations":["4059:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"4059:11:16"},"referencedDeclaration":2056,"src":"4059:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"store","nameLocation":"4093:5:16","nodeType":"VariableDeclaration","scope":2266,"src":"4078:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2240,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:16"},"returnParameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2266,"src":"4123:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:16"},"scope":2267,"src":"4027:279:16","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2268,"src":"1255:3053:16","usedErrors":[2064,2066],"usedEvents":[]}],"src":"106:4203:16"},"id":16},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2377]},"id":2378,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2269,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2270,"nodeType":"StructuredDocumentation","src":"219:1025:17","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2377,"linearizedBaseContracts":[2377],"name":"StorageSlot","nameLocation":"1253:11:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2273,"members":[{"constant":false,"id":2272,"mutability":"mutable","name":"value","nameLocation":"1308:5:17","nodeType":"VariableDeclaration","scope":2273,"src":"1300:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:17","nodeType":"StructDefinition","scope":2377,"src":"1271:49:17","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2276,"members":[{"constant":false,"id":2275,"mutability":"mutable","name":"value","nameLocation":"1360:5:17","nodeType":"VariableDeclaration","scope":2276,"src":"1355:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2274,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:17","nodeType":"StructDefinition","scope":2377,"src":"1326:46:17","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2279,"members":[{"constant":false,"id":2278,"mutability":"mutable","name":"value","nameLocation":"1415:5:17","nodeType":"VariableDeclaration","scope":2279,"src":"1407:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:17","nodeType":"StructDefinition","scope":2377,"src":"1378:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2282,"members":[{"constant":false,"id":2281,"mutability":"mutable","name":"value","nameLocation":"1470:5:17","nodeType":"VariableDeclaration","scope":2282,"src":"1462:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:17","nodeType":"StructDefinition","scope":2377,"src":"1433:49:17","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2285,"members":[{"constant":false,"id":2284,"mutability":"mutable","name":"value","nameLocation":"1523:5:17","nodeType":"VariableDeclaration","scope":2285,"src":"1516:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2283,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:17","nodeType":"StructDefinition","scope":2377,"src":"1488:47:17","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2288,"members":[{"constant":false,"id":2287,"mutability":"mutable","name":"value","nameLocation":"1574:5:17","nodeType":"VariableDeclaration","scope":2288,"src":"1568:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2286,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:17","nodeType":"StructDefinition","scope":2377,"src":"1541:45:17","visibility":"public"},{"body":{"id":2298,"nodeType":"Block","src":"1768:106:17","statements":[{"AST":{"nativeSrc":"1830:38:17","nodeType":"YulBlock","src":"1830:38:17","statements":[{"nativeSrc":"1844:14:17","nodeType":"YulAssignment","src":"1844:14:17","value":{"name":"slot","nativeSrc":"1854:4:17","nodeType":"YulIdentifier","src":"1854:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:17","nodeType":"YulIdentifier","src":"1844:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2295,"isOffset":false,"isSlot":true,"src":"1844:6:17","suffix":"slot","valueSize":1},{"declaration":2291,"isOffset":false,"isSlot":false,"src":"1854:4:17","valueSize":1}],"id":2297,"nodeType":"InlineAssembly","src":"1821:47:17"}]},"documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"1592:87:17","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2299,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:17","nodeType":"FunctionDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"slot","nameLocation":"1716:4:17","nodeType":"VariableDeclaration","scope":2299,"src":"1708:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:17"},"returnParameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"r","nameLocation":"1765:1:17","nodeType":"VariableDeclaration","scope":2299,"src":"1745:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2273_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2294,"nodeType":"UserDefinedTypeName","pathNode":{"id":2293,"name":"AddressSlot","nameLocations":["1745:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2273,"src":"1745:11:17"},"referencedDeclaration":2273,"src":"1745:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2273_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:17"},"scope":2377,"src":"1684:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2309,"nodeType":"Block","src":"2056:106:17","statements":[{"AST":{"nativeSrc":"2118:38:17","nodeType":"YulBlock","src":"2118:38:17","statements":[{"nativeSrc":"2132:14:17","nodeType":"YulAssignment","src":"2132:14:17","value":{"name":"slot","nativeSrc":"2142:4:17","nodeType":"YulIdentifier","src":"2142:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:17","nodeType":"YulIdentifier","src":"2132:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2306,"isOffset":false,"isSlot":true,"src":"2132:6:17","suffix":"slot","valueSize":1},{"declaration":2302,"isOffset":false,"isSlot":false,"src":"2142:4:17","valueSize":1}],"id":2308,"nodeType":"InlineAssembly","src":"2109:47:17"}]},"documentation":{"id":2300,"nodeType":"StructuredDocumentation","src":"1880:87:17","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2310,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:17","nodeType":"FunctionDefinition","parameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"slot","nameLocation":"2004:4:17","nodeType":"VariableDeclaration","scope":2310,"src":"1996:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:17"},"returnParameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"r","nameLocation":"2053:1:17","nodeType":"VariableDeclaration","scope":2310,"src":"2033:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2276_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2305,"nodeType":"UserDefinedTypeName","pathNode":{"id":2304,"name":"BooleanSlot","nameLocations":["2033:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2276,"src":"2033:11:17"},"referencedDeclaration":2276,"src":"2033:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2276_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:17"},"scope":2377,"src":"1972:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2320,"nodeType":"Block","src":"2344:106:17","statements":[{"AST":{"nativeSrc":"2406:38:17","nodeType":"YulBlock","src":"2406:38:17","statements":[{"nativeSrc":"2420:14:17","nodeType":"YulAssignment","src":"2420:14:17","value":{"name":"slot","nativeSrc":"2430:4:17","nodeType":"YulIdentifier","src":"2430:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:17","nodeType":"YulIdentifier","src":"2420:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2317,"isOffset":false,"isSlot":true,"src":"2420:6:17","suffix":"slot","valueSize":1},{"declaration":2313,"isOffset":false,"isSlot":false,"src":"2430:4:17","valueSize":1}],"id":2319,"nodeType":"InlineAssembly","src":"2397:47:17"}]},"documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"2168:87:17","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2321,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:17","nodeType":"FunctionDefinition","parameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"slot","nameLocation":"2292:4:17","nodeType":"VariableDeclaration","scope":2321,"src":"2284:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:17"},"returnParameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"r","nameLocation":"2341:1:17","nodeType":"VariableDeclaration","scope":2321,"src":"2321:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2279_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2316,"nodeType":"UserDefinedTypeName","pathNode":{"id":2315,"name":"Bytes32Slot","nameLocations":["2321:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2279,"src":"2321:11:17"},"referencedDeclaration":2279,"src":"2321:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2279_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:17"},"scope":2377,"src":"2260:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2331,"nodeType":"Block","src":"2632:106:17","statements":[{"AST":{"nativeSrc":"2694:38:17","nodeType":"YulBlock","src":"2694:38:17","statements":[{"nativeSrc":"2708:14:17","nodeType":"YulAssignment","src":"2708:14:17","value":{"name":"slot","nativeSrc":"2718:4:17","nodeType":"YulIdentifier","src":"2718:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:17","nodeType":"YulIdentifier","src":"2708:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2328,"isOffset":false,"isSlot":true,"src":"2708:6:17","suffix":"slot","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"2718:4:17","valueSize":1}],"id":2330,"nodeType":"InlineAssembly","src":"2685:47:17"}]},"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"2456:87:17","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:17","nodeType":"FunctionDefinition","parameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"slot","nameLocation":"2580:4:17","nodeType":"VariableDeclaration","scope":2332,"src":"2572:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:17"},"returnParameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"r","nameLocation":"2629:1:17","nodeType":"VariableDeclaration","scope":2332,"src":"2609:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2282_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2327,"nodeType":"UserDefinedTypeName","pathNode":{"id":2326,"name":"Uint256Slot","nameLocations":["2609:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2282,"src":"2609:11:17"},"referencedDeclaration":2282,"src":"2609:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2282_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:17"},"scope":2377,"src":"2548:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2342,"nodeType":"Block","src":"2917:106:17","statements":[{"AST":{"nativeSrc":"2979:38:17","nodeType":"YulBlock","src":"2979:38:17","statements":[{"nativeSrc":"2993:14:17","nodeType":"YulAssignment","src":"2993:14:17","value":{"name":"slot","nativeSrc":"3003:4:17","nodeType":"YulIdentifier","src":"3003:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:17","nodeType":"YulIdentifier","src":"2993:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2339,"isOffset":false,"isSlot":true,"src":"2993:6:17","suffix":"slot","valueSize":1},{"declaration":2335,"isOffset":false,"isSlot":false,"src":"3003:4:17","valueSize":1}],"id":2341,"nodeType":"InlineAssembly","src":"2970:47:17"}]},"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"2744:86:17","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2343,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:17","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"slot","nameLocation":"2866:4:17","nodeType":"VariableDeclaration","scope":2343,"src":"2858:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:17"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"r","nameLocation":"2914:1:17","nodeType":"VariableDeclaration","scope":2343,"src":"2895:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2285_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2338,"nodeType":"UserDefinedTypeName","pathNode":{"id":2337,"name":"StringSlot","nameLocations":["2895:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2285,"src":"2895:10:17"},"referencedDeclaration":2285,"src":"2895:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2285_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:17"},"scope":2377,"src":"2835:188:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2353,"nodeType":"Block","src":"3225:112:17","statements":[{"AST":{"nativeSrc":"3287:44:17","nodeType":"YulBlock","src":"3287:44:17","statements":[{"nativeSrc":"3301:20:17","nodeType":"YulAssignment","src":"3301:20:17","value":{"name":"store.slot","nativeSrc":"3311:10:17","nodeType":"YulIdentifier","src":"3311:10:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:17","nodeType":"YulIdentifier","src":"3301:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2350,"isOffset":false,"isSlot":true,"src":"3301:6:17","suffix":"slot","valueSize":1},{"declaration":2346,"isOffset":false,"isSlot":true,"src":"3311:10:17","suffix":"slot","valueSize":1}],"id":2352,"nodeType":"InlineAssembly","src":"3278:53:17"}]},"documentation":{"id":2344,"nodeType":"StructuredDocumentation","src":"3029:101:17","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2354,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:17","nodeType":"FunctionDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"store","nameLocation":"3173:5:17","nodeType":"VariableDeclaration","scope":2354,"src":"3158:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2345,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:17"},"returnParameters":{"id":2351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"r","nameLocation":"3222:1:17","nodeType":"VariableDeclaration","scope":2354,"src":"3203:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2285_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2349,"nodeType":"UserDefinedTypeName","pathNode":{"id":2348,"name":"StringSlot","nameLocations":["3203:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2285,"src":"3203:10:17"},"referencedDeclaration":2285,"src":"3203:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2285_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:17"},"scope":2377,"src":"3135:202:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2364,"nodeType":"Block","src":"3513:106:17","statements":[{"AST":{"nativeSrc":"3575:38:17","nodeType":"YulBlock","src":"3575:38:17","statements":[{"nativeSrc":"3589:14:17","nodeType":"YulAssignment","src":"3589:14:17","value":{"name":"slot","nativeSrc":"3599:4:17","nodeType":"YulIdentifier","src":"3599:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:17","nodeType":"YulIdentifier","src":"3589:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2361,"isOffset":false,"isSlot":true,"src":"3589:6:17","suffix":"slot","valueSize":1},{"declaration":2357,"isOffset":false,"isSlot":false,"src":"3599:4:17","valueSize":1}],"id":2363,"nodeType":"InlineAssembly","src":"3566:47:17"}]},"documentation":{"id":2355,"nodeType":"StructuredDocumentation","src":"3343:85:17","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2365,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:17","nodeType":"FunctionDefinition","parameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"slot","nameLocation":"3463:4:17","nodeType":"VariableDeclaration","scope":2365,"src":"3455:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:17"},"returnParameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"r","nameLocation":"3510:1:17","nodeType":"VariableDeclaration","scope":2365,"src":"3492:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2288_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2360,"nodeType":"UserDefinedTypeName","pathNode":{"id":2359,"name":"BytesSlot","nameLocations":["3492:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"3492:9:17"},"referencedDeclaration":2288,"src":"3492:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2288_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:17"},"scope":2377,"src":"3433:186:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2375,"nodeType":"Block","src":"3816:112:17","statements":[{"AST":{"nativeSrc":"3878:44:17","nodeType":"YulBlock","src":"3878:44:17","statements":[{"nativeSrc":"3892:20:17","nodeType":"YulAssignment","src":"3892:20:17","value":{"name":"store.slot","nativeSrc":"3902:10:17","nodeType":"YulIdentifier","src":"3902:10:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:17","nodeType":"YulIdentifier","src":"3892:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2372,"isOffset":false,"isSlot":true,"src":"3892:6:17","suffix":"slot","valueSize":1},{"declaration":2368,"isOffset":false,"isSlot":true,"src":"3902:10:17","suffix":"slot","valueSize":1}],"id":2374,"nodeType":"InlineAssembly","src":"3869:53:17"}]},"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"3625:99:17","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2376,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:17","nodeType":"FunctionDefinition","parameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"store","nameLocation":"3765:5:17","nodeType":"VariableDeclaration","scope":2376,"src":"3751:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2367,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:17"},"returnParameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"r","nameLocation":"3813:1:17","nodeType":"VariableDeclaration","scope":2376,"src":"3795:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2288_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2371,"nodeType":"UserDefinedTypeName","pathNode":{"id":2370,"name":"BytesSlot","nameLocations":["3795:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"3795:9:17"},"referencedDeclaration":2288,"src":"3795:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2288_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:17"},"scope":2377,"src":"3729:199:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2378,"src":"1245:2685:17","usedErrors":[],"usedEvents":[]}],"src":"193:3738:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4335],"SignedMath":[6195],"Strings":[2632]},"id":2633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2379,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2381,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2633,"sourceUnit":4336,"src":"127:37:18","symbolAliases":[{"foreign":{"id":2380,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"135:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2633,"sourceUnit":6196,"src":"165:49:18","symbolAliases":[{"foreign":{"id":2382,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"173:10:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"216:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":2632,"linearizedBaseContracts":[2632],"name":"Strings","nameLocation":"259:7:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2387,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:18","nodeType":"VariableDeclaration","scope":2632,"src":"273:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2385,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2390,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:18","nodeType":"VariableDeclaration","scope":2632,"src":"335:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2388,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"384:81:18","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2397,"name":"StringsInsufficientHexLength","nameLocation":"476:28:18","nodeType":"ErrorDefinition","parameters":{"id":2396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"value","nameLocation":"513:5:18","nodeType":"VariableDeclaration","scope":2397,"src":"505:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2395,"mutability":"mutable","name":"length","nameLocation":"528:6:18","nodeType":"VariableDeclaration","scope":2397,"src":"520:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:18"},"src":"470:66:18"},{"body":{"id":2444,"nodeType":"Block","src":"708:627:18","statements":[{"id":2443,"nodeType":"UncheckedBlock","src":"718:611:18","statements":[{"assignments":[2406],"declarations":[{"constant":false,"id":2406,"mutability":"mutable","name":"length","nameLocation":"750:6:18","nodeType":"VariableDeclaration","scope":2443,"src":"742:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2413,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"770:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2407,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"759:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4335_$","typeString":"type(library Math)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:18","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4155,"src":"759:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:18"},{"assignments":[2415],"declarations":[{"constant":false,"id":2415,"mutability":"mutable","name":"buffer","nameLocation":"808:6:18","nodeType":"VariableDeclaration","scope":2443,"src":"794:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2414,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2420,"initialValue":{"arguments":[{"id":2418,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"828:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2416,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:18"},{"assignments":[2422],"declarations":[{"constant":false,"id":2422,"mutability":"mutable","name":"ptr","nameLocation":"857:3:18","nodeType":"VariableDeclaration","scope":2443,"src":"849:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2423,"nodeType":"VariableDeclarationStatement","src":"849:11:18"},{"AST":{"nativeSrc":"930:67:18","nodeType":"YulBlock","src":"930:67:18","statements":[{"nativeSrc":"948:35:18","nodeType":"YulAssignment","src":"948:35:18","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:18","nodeType":"YulIdentifier","src":"959:6:18"},{"arguments":[{"kind":"number","nativeSrc":"971:2:18","nodeType":"YulLiteral","src":"971:2:18","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:18","nodeType":"YulIdentifier","src":"975:6:18"}],"functionName":{"name":"add","nativeSrc":"967:3:18","nodeType":"YulIdentifier","src":"967:3:18"},"nativeSrc":"967:15:18","nodeType":"YulFunctionCall","src":"967:15:18"}],"functionName":{"name":"add","nativeSrc":"955:3:18","nodeType":"YulIdentifier","src":"955:3:18"},"nativeSrc":"955:28:18","nodeType":"YulFunctionCall","src":"955:28:18"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:18","nodeType":"YulIdentifier","src":"948:3:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2415,"isOffset":false,"isSlot":false,"src":"959:6:18","valueSize":1},{"declaration":2406,"isOffset":false,"isSlot":false,"src":"975:6:18","valueSize":1},{"declaration":2422,"isOffset":false,"isSlot":false,"src":"948:3:18","valueSize":1}],"id":2424,"nodeType":"InlineAssembly","src":"921:76:18"},{"body":{"id":2439,"nodeType":"Block","src":"1023:269:18","statements":[{"expression":{"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:18","subExpression":{"id":2426,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"1041:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2428,"nodeType":"ExpressionStatement","src":"1041:5:18"},{"AST":{"nativeSrc":"1124:86:18","nodeType":"YulBlock","src":"1124:86:18","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:18","nodeType":"YulIdentifier","src":"1154:3:18"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:18","nodeType":"YulIdentifier","src":"1168:5:18"},{"kind":"number","nativeSrc":"1175:2:18","nodeType":"YulLiteral","src":"1175:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:18","nodeType":"YulIdentifier","src":"1164:3:18"},"nativeSrc":"1164:14:18","nodeType":"YulFunctionCall","src":"1164:14:18"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:18","nodeType":"YulIdentifier","src":"1180:10:18"}],"functionName":{"name":"byte","nativeSrc":"1159:4:18","nodeType":"YulIdentifier","src":"1159:4:18"},"nativeSrc":"1159:32:18","nodeType":"YulFunctionCall","src":"1159:32:18"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:18","nodeType":"YulIdentifier","src":"1146:7:18"},"nativeSrc":"1146:46:18","nodeType":"YulFunctionCall","src":"1146:46:18"},"nativeSrc":"1146:46:18","nodeType":"YulExpressionStatement","src":"1146:46:18"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2387,"isOffset":false,"isSlot":false,"src":"1180:10:18","valueSize":1},{"declaration":2422,"isOffset":false,"isSlot":false,"src":"1154:3:18","valueSize":1},{"declaration":2400,"isOffset":false,"isSlot":false,"src":"1168:5:18","valueSize":1}],"id":2429,"nodeType":"InlineAssembly","src":"1115:95:18"},{"expression":{"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"1227:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2433,"nodeType":"ExpressionStatement","src":"1227:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"1260:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2438,"nodeType":"IfStatement","src":"1256:21:18","trueBody":{"id":2437,"nodeType":"Break","src":"1272:5:18"}}]},"condition":{"hexValue":"74727565","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2440,"nodeType":"WhileStatement","src":"1010:282:18"},{"expression":{"id":2441,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"1312:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2404,"id":2442,"nodeType":"Return","src":"1305:13:18"}]}]},"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"542:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2445,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:18","nodeType":"FunctionDefinition","parameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"value","nameLocation":"663:5:18","nodeType":"VariableDeclaration","scope":2445,"src":"655:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:18"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2445,"src":"693:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2402,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:18"},"scope":2632,"src":"637:698:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2470,"nodeType":"Block","src":"1511:92:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"1542:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:18","trueExpression":{"hexValue":"2d","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"1588:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2463,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"1573:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6195_$","typeString":"type(library SignedMath)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:18","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6194,"src":"1573:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2462,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"1564:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2453,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:18","typeDescriptions":{}}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:18","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2452,"id":2469,"nodeType":"Return","src":"1521:75:18"}]},"documentation":{"id":2446,"nodeType":"StructuredDocumentation","src":"1341:89:18","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2471,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:18","nodeType":"FunctionDefinition","parameters":{"id":2449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"value","nameLocation":"1466:5:18","nodeType":"VariableDeclaration","scope":2471,"src":"1459:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2447,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:18"},"returnParameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2471,"src":"1496:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2450,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:18"},"scope":2632,"src":"1435:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2490,"nodeType":"Block","src":"1782:100:18","statements":[{"id":2489,"nodeType":"UncheckedBlock","src":"1792:84:18","statements":[{"expression":{"arguments":[{"id":2480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"1835:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"1854:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2481,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"1842:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4335_$","typeString":"type(library Math)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:18","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4277,"src":"1842:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2479,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2491,2574,2594],"referencedDeclaration":2574,"src":"1823:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2478,"id":2488,"nodeType":"Return","src":"1816:49:18"}]}]},"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"1609:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2491,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:18","nodeType":"FunctionDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"value","nameLocation":"1737:5:18","nodeType":"VariableDeclaration","scope":2491,"src":"1729:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:18"},"returnParameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2491,"src":"1767:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2476,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:18"},"scope":2632,"src":"1708:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2573,"nodeType":"Block","src":"2095:435:18","statements":[{"assignments":[2502],"declarations":[{"constant":false,"id":2502,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:18","nodeType":"VariableDeclaration","scope":2573,"src":"2105:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2504,"initialValue":{"id":2503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"2126:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:18"},{"assignments":[2506],"declarations":[{"constant":false,"id":2506,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:18","nodeType":"VariableDeclaration","scope":2573,"src":"2141:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2505,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2515,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2510,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"2177:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2507,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:18"},{"expression":{"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2516,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"2198:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2518,"indexExpression":{"hexValue":"30","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2521,"nodeType":"ExpressionStatement","src":"2198:15:18"},{"expression":{"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2522,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"2223:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2524,"indexExpression":{"hexValue":"31","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2527,"nodeType":"ExpressionStatement","src":"2223:15:18"},{"body":{"id":2556,"nodeType":"Block","src":"2293:95:18","statements":[{"expression":{"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2542,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"2307:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2544,"indexExpression":{"id":2543,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"2314:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2545,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"2319:10:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2549,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2546,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2330:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2551,"nodeType":"ExpressionStatement","src":"2307:40:18"},{"expression":{"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2552,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2361:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2555,"nodeType":"ExpressionStatement","src":"2361:16:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2536,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"2281:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2557,"initializationExpression":{"assignments":[2529],"declarations":[{"constant":false,"id":2529,"mutability":"mutable","name":"i","nameLocation":"2261:1:18","nodeType":"VariableDeclaration","scope":2557,"src":"2253:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2528,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2535,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2531,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"2269:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:18"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:18","subExpression":{"id":2539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"2290:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2541,"nodeType":"ExpressionStatement","src":"2288:3:18"},"nodeType":"ForStatement","src":"2248:140:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2558,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2401:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2567,"nodeType":"IfStatement","src":"2397:96:18","trueBody":{"id":2566,"nodeType":"Block","src":"2418:75:18","statements":[{"errorCall":{"arguments":[{"id":2562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"2468:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2563,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"2475:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2561,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"2439:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2565,"nodeType":"RevertStatement","src":"2432:50:18"}]}},{"expression":{"arguments":[{"id":2570,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"2516:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2568,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:18","typeDescriptions":{}}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2500,"id":2572,"nodeType":"Return","src":"2502:21:18"}]},"documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"1888:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2574,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:18","nodeType":"FunctionDefinition","parameters":{"id":2497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"value","nameLocation":"2034:5:18","nodeType":"VariableDeclaration","scope":2574,"src":"2026:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2496,"mutability":"mutable","name":"length","nameLocation":"2049:6:18","nodeType":"VariableDeclaration","scope":2574,"src":"2041:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2495,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:18"},"returnParameters":{"id":2500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2574,"src":"2080:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2498,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:18"},"scope":2632,"src":"2005:525:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2593,"nodeType":"Block","src":"2762:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2587,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"2807:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2585,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:18","typeDescriptions":{}}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:18","typeDescriptions":{}}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2590,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"2815:14:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2582,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2491,2574,2594],"referencedDeclaration":2574,"src":"2779:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2581,"id":2592,"nodeType":"Return","src":"2772:58:18"}]},"documentation":{"id":2575,"nodeType":"StructuredDocumentation","src":"2536:148:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2594,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:18","nodeType":"FunctionDefinition","parameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"addr","nameLocation":"2718:4:18","nodeType":"VariableDeclaration","scope":2594,"src":"2710:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2576,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:18"},"returnParameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2594,"src":"2747:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2579,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:18"},"scope":2632,"src":"2689:148:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2630,"nodeType":"Block","src":"2992:104:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2606,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"3015:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2604,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:18","typeDescriptions":{}}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:18","memberName":"length","nodeType":"MemberAccess","src":"3009:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2611,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"3034:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2609,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:18","typeDescriptions":{}}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:18","memberName":"length","nodeType":"MemberAccess","src":"3028:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2618,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"3063:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2616,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:18","typeDescriptions":{}}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2615,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2624,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"3086:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2622,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:18","typeDescriptions":{}}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2621,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2603,"id":2629,"nodeType":"Return","src":"3002:87:18"}]},"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"2843:66:18","text":" @dev Returns true if the two strings are equal."},"id":2631,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:18","nodeType":"FunctionDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"a","nameLocation":"2943:1:18","nodeType":"VariableDeclaration","scope":2631,"src":"2929:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2596,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"b","nameLocation":"2960:1:18","nodeType":"VariableDeclaration","scope":2631,"src":"2946:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2598,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:18"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2631,"src":"2986:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2601,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:18"},"scope":2632,"src":"2914:182:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2633,"src":"251:2847:18","usedErrors":[2397],"usedEvents":[]}],"src":"101:2998:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2980]},"id":2981,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2634,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"138:205:19","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2980,"linearizedBaseContracts":[2980],"name":"ECDSA","nameLocation":"352:5:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2640,"members":[{"id":2636,"name":"NoError","nameLocation":"392:7:19","nodeType":"EnumValue","src":"392:7:19"},{"id":2637,"name":"InvalidSignature","nameLocation":"409:16:19","nodeType":"EnumValue","src":"409:16:19"},{"id":2638,"name":"InvalidSignatureLength","nameLocation":"435:22:19","nodeType":"EnumValue","src":"435:22:19"},{"id":2639,"name":"InvalidSignatureS","nameLocation":"467:17:19","nodeType":"EnumValue","src":"467:17:19"}],"name":"RecoverError","nameLocation":"369:12:19","nodeType":"EnumDefinition","src":"364:126:19"},{"documentation":{"id":2641,"nodeType":"StructuredDocumentation","src":"496:63:19","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2643,"name":"ECDSAInvalidSignature","nameLocation":"570:21:19","nodeType":"ErrorDefinition","parameters":{"id":2642,"nodeType":"ParameterList","parameters":[],"src":"591:2:19"},"src":"564:30:19"},{"documentation":{"id":2644,"nodeType":"StructuredDocumentation","src":"600:60:19","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2648,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:19","nodeType":"ErrorDefinition","parameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"length","nameLocation":"707:6:19","nodeType":"VariableDeclaration","scope":2648,"src":"699:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:19"},"src":"665:50:19"},{"documentation":{"id":2649,"nodeType":"StructuredDocumentation","src":"721:85:19","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2653,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:19","nodeType":"ErrorDefinition","parameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"s","nameLocation":"848:1:19","nodeType":"VariableDeclaration","scope":2653,"src":"840:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:19"},"src":"811:40:19"},{"body":{"id":2705,"nodeType":"Block","src":"2242:653:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2668,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"2256:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:19","memberName":"length","nodeType":"MemberAccess","src":"2256:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2703,"nodeType":"Block","src":"2781:108:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2690,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:19","typeDescriptions":{}}},"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2694,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"2815:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2640_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"2815:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2698,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"2860:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:19","memberName":"length","nodeType":"MemberAccess","src":"2860:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:19","typeDescriptions":{}}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2667,"id":2702,"nodeType":"Return","src":"2795:83:19"}]},"id":2704,"nodeType":"IfStatement","src":"2252:637:19","trueBody":{"id":2689,"nodeType":"Block","src":"2280:495:19","statements":[{"assignments":[2673],"declarations":[{"constant":false,"id":2673,"mutability":"mutable","name":"r","nameLocation":"2302:1:19","nodeType":"VariableDeclaration","scope":2689,"src":"2294:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2674,"nodeType":"VariableDeclarationStatement","src":"2294:9:19"},{"assignments":[2676],"declarations":[{"constant":false,"id":2676,"mutability":"mutable","name":"s","nameLocation":"2325:1:19","nodeType":"VariableDeclaration","scope":2689,"src":"2317:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2677,"nodeType":"VariableDeclarationStatement","src":"2317:9:19"},{"assignments":[2679],"declarations":[{"constant":false,"id":2679,"mutability":"mutable","name":"v","nameLocation":"2346:1:19","nodeType":"VariableDeclaration","scope":2689,"src":"2340:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2678,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2680,"nodeType":"VariableDeclarationStatement","src":"2340:7:19"},{"AST":{"nativeSrc":"2548:171:19","nodeType":"YulBlock","src":"2548:171:19","statements":[{"nativeSrc":"2566:32:19","nodeType":"YulAssignment","src":"2566:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:19","nodeType":"YulIdentifier","src":"2581:9:19"},{"kind":"number","nativeSrc":"2592:4:19","nodeType":"YulLiteral","src":"2592:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:19","nodeType":"YulIdentifier","src":"2577:3:19"},"nativeSrc":"2577:20:19","nodeType":"YulFunctionCall","src":"2577:20:19"}],"functionName":{"name":"mload","nativeSrc":"2571:5:19","nodeType":"YulIdentifier","src":"2571:5:19"},"nativeSrc":"2571:27:19","nodeType":"YulFunctionCall","src":"2571:27:19"},"variableNames":[{"name":"r","nativeSrc":"2566:1:19","nodeType":"YulIdentifier","src":"2566:1:19"}]},{"nativeSrc":"2615:32:19","nodeType":"YulAssignment","src":"2615:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:19","nodeType":"YulIdentifier","src":"2630:9:19"},{"kind":"number","nativeSrc":"2641:4:19","nodeType":"YulLiteral","src":"2641:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:19","nodeType":"YulIdentifier","src":"2626:3:19"},"nativeSrc":"2626:20:19","nodeType":"YulFunctionCall","src":"2626:20:19"}],"functionName":{"name":"mload","nativeSrc":"2620:5:19","nodeType":"YulIdentifier","src":"2620:5:19"},"nativeSrc":"2620:27:19","nodeType":"YulFunctionCall","src":"2620:27:19"},"variableNames":[{"name":"s","nativeSrc":"2615:1:19","nodeType":"YulIdentifier","src":"2615:1:19"}]},{"nativeSrc":"2664:41:19","nodeType":"YulAssignment","src":"2664:41:19","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:19","nodeType":"YulLiteral","src":"2674:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:19","nodeType":"YulIdentifier","src":"2687:9:19"},{"kind":"number","nativeSrc":"2698:4:19","nodeType":"YulLiteral","src":"2698:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:19","nodeType":"YulIdentifier","src":"2683:3:19"},"nativeSrc":"2683:20:19","nodeType":"YulFunctionCall","src":"2683:20:19"}],"functionName":{"name":"mload","nativeSrc":"2677:5:19","nodeType":"YulIdentifier","src":"2677:5:19"},"nativeSrc":"2677:27:19","nodeType":"YulFunctionCall","src":"2677:27:19"}],"functionName":{"name":"byte","nativeSrc":"2669:4:19","nodeType":"YulIdentifier","src":"2669:4:19"},"nativeSrc":"2669:36:19","nodeType":"YulFunctionCall","src":"2669:36:19"},"variableNames":[{"name":"v","nativeSrc":"2664:1:19","nodeType":"YulIdentifier","src":"2664:1:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2673,"isOffset":false,"isSlot":false,"src":"2566:1:19","valueSize":1},{"declaration":2676,"isOffset":false,"isSlot":false,"src":"2615:1:19","valueSize":1},{"declaration":2658,"isOffset":false,"isSlot":false,"src":"2581:9:19","valueSize":1},{"declaration":2658,"isOffset":false,"isSlot":false,"src":"2630:9:19","valueSize":1},{"declaration":2658,"isOffset":false,"isSlot":false,"src":"2687:9:19","valueSize":1},{"declaration":2679,"isOffset":false,"isSlot":false,"src":"2664:1:19","valueSize":1}],"id":2681,"nodeType":"InlineAssembly","src":"2539:180:19"},{"expression":{"arguments":[{"id":2683,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"2750:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2684,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"2756:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2685,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"2759:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2686,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"2762:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2682,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2706,2786,2894],"referencedDeclaration":2894,"src":"2739:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2667,"id":2688,"nodeType":"Return","src":"2732:32:19"}]}}]},"documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"857:1267:19","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:19","nodeType":"FunctionDefinition","parameters":{"id":2659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"mutability":"mutable","name":"hash","nameLocation":"2157:4:19","nodeType":"VariableDeclaration","scope":2706,"src":"2149:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2658,"mutability":"mutable","name":"signature","nameLocation":"2176:9:19","nodeType":"VariableDeclaration","scope":2706,"src":"2163:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2657,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:19"},"returnParameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2706,"src":"2210:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2660,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2706,"src":"2219:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2663,"nodeType":"UserDefinedTypeName","pathNode":{"id":2662,"name":"RecoverError","nameLocations":["2219:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"2219:12:19"},"referencedDeclaration":2640,"src":"2219:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2706,"src":"2233:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:19"},"scope":2980,"src":"2129:766:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2735,"nodeType":"Block","src":"3789:168:19","statements":[{"assignments":[2717,2720,2722],"declarations":[{"constant":false,"id":2717,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:19","nodeType":"VariableDeclaration","scope":2735,"src":"3800:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2720,"mutability":"mutable","name":"error","nameLocation":"3832:5:19","nodeType":"VariableDeclaration","scope":2735,"src":"3819:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2719,"nodeType":"UserDefinedTypeName","pathNode":{"id":2718,"name":"RecoverError","nameLocations":["3819:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"3819:12:19"},"referencedDeclaration":2640,"src":"3819:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2722,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:19","nodeType":"VariableDeclaration","scope":2735,"src":"3839:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2727,"initialValue":{"arguments":[{"id":2724,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"3870:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2725,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"3876:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2723,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2706,2786,2894],"referencedDeclaration":2706,"src":"3859:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:19"},{"expression":{"arguments":[{"id":2729,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"3908:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},{"id":2730,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"3915:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2728,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"3896:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2640_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2732,"nodeType":"ExpressionStatement","src":"3896:28:19"},{"expression":{"id":2733,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"3941:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2715,"id":2734,"nodeType":"Return","src":"3934:16:19"}]},"documentation":{"id":2707,"nodeType":"StructuredDocumentation","src":"2901:796:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2736,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:19","nodeType":"FunctionDefinition","parameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"hash","nameLocation":"3727:4:19","nodeType":"VariableDeclaration","scope":2736,"src":"3719:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2711,"mutability":"mutable","name":"signature","nameLocation":"3746:9:19","nodeType":"VariableDeclaration","scope":2736,"src":"3733:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2710,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:19"},"returnParameters":{"id":2715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2736,"src":"3780:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2713,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:19"},"scope":2980,"src":"3702:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2785,"nodeType":"Block","src":"4285:342:19","statements":[{"id":2784,"nodeType":"UncheckedBlock","src":"4295:326:19","statements":[{"assignments":[2754],"declarations":[{"constant":false,"id":2754,"mutability":"mutable","name":"s","nameLocation":"4327:1:19","nodeType":"VariableDeclaration","scope":2784,"src":"4319:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2761,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2755,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"4331:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:19","typeDescriptions":{}}},"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:19"},{"assignments":[2763],"declarations":[{"constant":false,"id":2763,"mutability":"mutable","name":"v","nameLocation":"4528:1:19","nodeType":"VariableDeclaration","scope":2784,"src":"4522:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2762,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2776,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2768,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"4547:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:19","typeDescriptions":{}}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2764,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:19","typeDescriptions":{}}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:19"},{"expression":{"arguments":[{"id":2778,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"4596:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2779,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"4602:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2780,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"4605:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2781,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"4608:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2777,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2706,2786,2894],"referencedDeclaration":2894,"src":"4585:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2752,"id":2783,"nodeType":"Return","src":"4578:32:19"}]}]},"documentation":{"id":2737,"nodeType":"StructuredDocumentation","src":"3963:205:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:19","nodeType":"FunctionDefinition","parameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"hash","nameLocation":"4201:4:19","nodeType":"VariableDeclaration","scope":2786,"src":"4193:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"r","nameLocation":"4215:1:19","nodeType":"VariableDeclaration","scope":2786,"src":"4207:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2743,"mutability":"mutable","name":"vs","nameLocation":"4226:2:19","nodeType":"VariableDeclaration","scope":2786,"src":"4218:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:19"},"returnParameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2786,"src":"4253:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2745,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2786,"src":"4262:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2748,"nodeType":"UserDefinedTypeName","pathNode":{"id":2747,"name":"RecoverError","nameLocations":["4262:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"4262:12:19"},"referencedDeclaration":2640,"src":"4262:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2786,"src":"4276:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:19"},"scope":2980,"src":"4173:454:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2818,"nodeType":"Block","src":"4840:164:19","statements":[{"assignments":[2799,2802,2804],"declarations":[{"constant":false,"id":2799,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:19","nodeType":"VariableDeclaration","scope":2818,"src":"4851:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2798,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2802,"mutability":"mutable","name":"error","nameLocation":"4883:5:19","nodeType":"VariableDeclaration","scope":2818,"src":"4870:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2801,"nodeType":"UserDefinedTypeName","pathNode":{"id":2800,"name":"RecoverError","nameLocations":["4870:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"4870:12:19"},"referencedDeclaration":2640,"src":"4870:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2804,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:19","nodeType":"VariableDeclaration","scope":2818,"src":"4890:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2810,"initialValue":{"arguments":[{"id":2806,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"4921:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2807,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"4927:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2808,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"4930:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2805,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2706,2786,2894],"referencedDeclaration":2786,"src":"4910:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:19"},{"expression":{"arguments":[{"id":2812,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"4955:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},{"id":2813,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"4962:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2811,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"4943:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2640_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2815,"nodeType":"ExpressionStatement","src":"4943:28:19"},{"expression":{"id":2816,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"4988:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2797,"id":2817,"nodeType":"Return","src":"4981:16:19"}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"4633:116:19","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2819,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:19","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"hash","nameLocation":"4779:4:19","nodeType":"VariableDeclaration","scope":2819,"src":"4771:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2791,"mutability":"mutable","name":"r","nameLocation":"4793:1:19","nodeType":"VariableDeclaration","scope":2819,"src":"4785:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"vs","nameLocation":"4804:2:19","nodeType":"VariableDeclaration","scope":2819,"src":"4796:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:19"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2819,"src":"4831:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2795,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:19"},"scope":2980,"src":"4754:250:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2893,"nodeType":"Block","src":"5298:1372:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2840,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"6194:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:19","typeDescriptions":{}}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2854,"nodeType":"IfStatement","src":"6182:164:19","trueBody":{"id":2853,"nodeType":"Block","src":"6267:79:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2844,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:19","typeDescriptions":{}}},"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2848,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"6301:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2640_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2639,"src":"6301:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},{"id":2850,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"6333:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2837,"id":2852,"nodeType":"Return","src":"6281:54:19"}]}},{"assignments":[2856],"declarations":[{"constant":false,"id":2856,"mutability":"mutable","name":"signer","nameLocation":"6448:6:19","nodeType":"VariableDeclaration","scope":2893,"src":"6440:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2855,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2863,"initialValue":{"arguments":[{"id":2858,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"6467:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2859,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"6473:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2860,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"6476:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2861,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"6479:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2857,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2864,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"6495:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2865,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:19","typeDescriptions":{}}},"id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2883,"nodeType":"IfStatement","src":"6491:113:19","trueBody":{"id":2882,"nodeType":"Block","src":"6517:87:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2870,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:19","typeDescriptions":{}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2874,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"6551:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2640_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2637,"src":"6551:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:19","typeDescriptions":{}}},"id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2837,"id":2881,"nodeType":"Return","src":"6531:62:19"}]}},{"expression":{"components":[{"id":2884,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"6622:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2885,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"6630:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2640_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2636,"src":"6630:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:19","typeDescriptions":{}}},"id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2837,"id":2892,"nodeType":"Return","src":"6614:49:19"}]},"documentation":{"id":2820,"nodeType":"StructuredDocumentation","src":"5010:125:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2894,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:19","nodeType":"FunctionDefinition","parameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"hash","nameLocation":"5177:4:19","nodeType":"VariableDeclaration","scope":2894,"src":"5169:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2824,"mutability":"mutable","name":"v","nameLocation":"5197:1:19","nodeType":"VariableDeclaration","scope":2894,"src":"5191:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2823,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"r","nameLocation":"5216:1:19","nodeType":"VariableDeclaration","scope":2894,"src":"5208:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"s","nameLocation":"5235:1:19","nodeType":"VariableDeclaration","scope":2894,"src":"5227:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:19"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2894,"src":"5266:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2894,"src":"5275:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2833,"nodeType":"UserDefinedTypeName","pathNode":{"id":2832,"name":"RecoverError","nameLocations":["5275:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"5275:12:19"},"referencedDeclaration":2640,"src":"5275:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2894,"src":"5289:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:19"},"scope":2980,"src":"5140:1530:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2929,"nodeType":"Block","src":"6897:166:19","statements":[{"assignments":[2909,2912,2914],"declarations":[{"constant":false,"id":2909,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:19","nodeType":"VariableDeclaration","scope":2929,"src":"6908:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2908,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"error","nameLocation":"6940:5:19","nodeType":"VariableDeclaration","scope":2929,"src":"6927:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2911,"nodeType":"UserDefinedTypeName","pathNode":{"id":2910,"name":"RecoverError","nameLocations":["6927:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"6927:12:19"},"referencedDeclaration":2640,"src":"6927:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2914,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:19","nodeType":"VariableDeclaration","scope":2929,"src":"6947:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2921,"initialValue":{"arguments":[{"id":2916,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"6978:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2917,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"6984:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2918,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"6987:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2919,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"6990:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2915,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2706,2786,2894],"referencedDeclaration":2894,"src":"6967:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2640_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:19"},{"expression":{"arguments":[{"id":2923,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"7014:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},{"id":2924,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"7021:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2922,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"7002:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2640_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2926,"nodeType":"ExpressionStatement","src":"7002:28:19"},{"expression":{"id":2927,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"7047:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2907,"id":2928,"nodeType":"Return","src":"7040:16:19"}]},"documentation":{"id":2895,"nodeType":"StructuredDocumentation","src":"6676:122:19","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2930,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:19","nodeType":"FunctionDefinition","parameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"hash","nameLocation":"6828:4:19","nodeType":"VariableDeclaration","scope":2930,"src":"6820:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"v","nameLocation":"6840:1:19","nodeType":"VariableDeclaration","scope":2930,"src":"6834:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2898,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"r","nameLocation":"6851:1:19","nodeType":"VariableDeclaration","scope":2930,"src":"6843:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"s","nameLocation":"6862:1:19","nodeType":"VariableDeclaration","scope":2930,"src":"6854:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:19"},"returnParameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2930,"src":"6888:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2905,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:19"},"scope":2980,"src":"6803:260:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2978,"nodeType":"Block","src":"7268:460:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2939,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"7282:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2940,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"7291:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2640_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2636,"src":"7291:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"7378:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2946,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"7387:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2640_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2637,"src":"7387:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2953,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"7483:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2954,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"7492:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2640_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"7492:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"7617:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2966,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"7626:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2640_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2639,"src":"7626:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2974,"nodeType":"IfStatement","src":"7613:109:19","trueBody":{"id":2973,"nodeType":"Block","src":"7658:64:19","statements":[{"errorCall":{"arguments":[{"id":2970,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"7702:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2969,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"7679:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2972,"nodeType":"RevertStatement","src":"7672:39:19"}]}},"id":2975,"nodeType":"IfStatement","src":"7479:243:19","trueBody":{"id":2964,"nodeType":"Block","src":"7529:78:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2960,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"7586:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2958,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:19","typeDescriptions":{}}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2957,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"7550:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2963,"nodeType":"RevertStatement","src":"7543:53:19"}]}},"id":2976,"nodeType":"IfStatement","src":"7374:348:19","trueBody":{"id":2952,"nodeType":"Block","src":"7418:55:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2949,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"7439:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2951,"nodeType":"RevertStatement","src":"7432:30:19"}]}},"id":2977,"nodeType":"IfStatement","src":"7278:444:19","trueBody":{"id":2944,"nodeType":"Block","src":"7313:55:19","statements":[{"functionReturnParameters":2938,"id":2943,"nodeType":"Return","src":"7327:7:19"}]}}]},"documentation":{"id":2931,"nodeType":"StructuredDocumentation","src":"7069:122:19","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2979,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:19","nodeType":"FunctionDefinition","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"error","nameLocation":"7230:5:19","nodeType":"VariableDeclaration","scope":2979,"src":"7217:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2933,"nodeType":"UserDefinedTypeName","pathNode":{"id":2932,"name":"RecoverError","nameLocations":["7217:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"7217:12:19"},"referencedDeclaration":2640,"src":"7217:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2640","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2936,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:19","nodeType":"VariableDeclaration","scope":2979,"src":"7237:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:19"},"returnParameters":{"id":2938,"nodeType":"ParameterList","parameters":[],"src":"7268:0:19"},"scope":2980,"src":"7196:532:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2981,"src":"344:7386:19","usedErrors":[2643,2648,2653],"usedEvents":[]}],"src":"112:7619:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3207],"IERC5267":[802],"MessageHashUtils":[3281],"ShortString":[2056],"ShortStrings":[2267]},"id":3208,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2982,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":2984,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3208,"sourceUnit":3282,"src":"139:56:20","symbolAliases":[{"foreign":{"id":2983,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"147:16:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2987,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3208,"sourceUnit":2268,"src":"196:62:20","symbolAliases":[{"foreign":{"id":2985,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"204:12:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2986,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"218:11:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2989,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3208,"sourceUnit":803,"src":"259:55:20","symbolAliases":[{"foreign":{"id":2988,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"267:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2991,"name":"IERC5267","nameLocations":["1988:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":802,"src":"1988:8:20"},"id":2992,"nodeType":"InheritanceSpecifier","src":"1988:8:20"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2990,"nodeType":"StructuredDocumentation","src":"316:1643:20","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3207,"linearizedBaseContracts":[3207,802],"name":"EIP712","nameLocation":"1978:6:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2994,"libraryName":{"id":2993,"name":"ShortStrings","nameLocations":["2009:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2267,"src":"2009:12:20"},"nodeType":"UsingForDirective","src":"2003:25:20"},{"constant":true,"id":2999,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:20","nodeType":"VariableDeclaration","scope":3207,"src":"2034:140:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2996,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3001,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:20","nodeType":"VariableDeclaration","scope":3207,"src":"2373:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3003,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:20","nodeType":"VariableDeclaration","scope":3207,"src":"2427:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3005,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:20","nodeType":"VariableDeclaration","scope":3207,"src":"2473:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3004,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3007,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:20","nodeType":"VariableDeclaration","scope":3207,"src":"2517:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3009,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:20","nodeType":"VariableDeclaration","scope":3207,"src":"2560:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3012,"mutability":"immutable","name":"_name","nameLocation":"2637:5:20","nodeType":"VariableDeclaration","scope":3207,"src":"2607:35:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":3011,"nodeType":"UserDefinedTypeName","pathNode":{"id":3010,"name":"ShortString","nameLocations":["2607:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"2607:11:20"},"referencedDeclaration":2056,"src":"2607:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3015,"mutability":"immutable","name":"_version","nameLocation":"2678:8:20","nodeType":"VariableDeclaration","scope":3207,"src":"2648:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":3014,"nodeType":"UserDefinedTypeName","pathNode":{"id":3013,"name":"ShortString","nameLocations":["2648:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"2648:11:20"},"referencedDeclaration":2056,"src":"2648:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3017,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:20","nodeType":"VariableDeclaration","scope":3207,"src":"2692:28:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3016,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3019,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:20","nodeType":"VariableDeclaration","scope":3207,"src":"2726:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3018,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3076,"nodeType":"Block","src":"3383:376:20","statements":[{"expression":{"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3027,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"3393:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3030,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"3432:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3028,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"3401:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2208,"src":"3401:30:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2056_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"src":"3393:53:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"id":3033,"nodeType":"ExpressionStatement","src":"3393:53:20"},{"expression":{"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3034,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"3456:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3037,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"3501:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3035,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"3467:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2208,"src":"3467:33:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2056_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"src":"3456:62:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"id":3040,"nodeType":"ExpressionStatement","src":"3456:62:20"},{"expression":{"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3041,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"3528:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3045,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"3558:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3043,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:20","typeDescriptions":{}}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3042,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3049,"nodeType":"ExpressionStatement","src":"3528:36:20"},{"expression":{"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3050,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"3574:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3054,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"3607:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3052,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:20","typeDescriptions":{}}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3051,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3058,"nodeType":"ExpressionStatement","src":"3574:42:20"},{"expression":{"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3059,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"3627:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3060,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3063,"nodeType":"ExpressionStatement","src":"3627:30:20"},{"expression":{"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3064,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"3667:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3065,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"3692:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3068,"nodeType":"ExpressionStatement","src":"3667:48:20"},{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3069,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"3725:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3072,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3207","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3207","typeString":"contract EIP712"}],"id":3071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3070,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:20","typeDescriptions":{}}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3075,"nodeType":"ExpressionStatement","src":"3725:27:20"}]},"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"2764:559:20","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3077,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"name","nameLocation":"3354:4:20","nodeType":"VariableDeclaration","scope":3077,"src":"3340:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3021,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3024,"mutability":"mutable","name":"version","nameLocation":"3374:7:20","nodeType":"VariableDeclaration","scope":3077,"src":"3360:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3023,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:20"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[],"src":"3383:0:20"},"scope":3207,"src":"3328:431:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3102,"nodeType":"Block","src":"3907:200:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3085,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3207","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3207","typeString":"contract EIP712"}],"id":3084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3083,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:20","typeDescriptions":{}}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3087,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"3938:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3089,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3091,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"3970:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3100,"nodeType":"Block","src":"4046:55:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3097,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"4067:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3082,"id":3099,"nodeType":"Return","src":"4060:30:20"}]},"id":3101,"nodeType":"IfStatement","src":"3917:184:20","trueBody":{"id":3096,"nodeType":"Block","src":"3986:54:20","statements":[{"expression":{"id":3094,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"4007:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3082,"id":3095,"nodeType":"Return","src":"4000:29:20"}]}}]},"documentation":{"id":3078,"nodeType":"StructuredDocumentation","src":"3765:75:20","text":" @dev Returns the domain separator for the current chain."},"id":3103,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:20","nodeType":"FunctionDefinition","parameters":{"id":3079,"nodeType":"ParameterList","parameters":[],"src":"3872:2:20"},"returnParameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3103,"src":"3898:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:20"},"scope":3207,"src":"3845:262:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3123,"nodeType":"Block","src":"4177:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":3111,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"4215:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3112,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"4226:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3113,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"4239:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3114,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3118,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3207","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3207","typeString":"contract EIP712"}],"id":3117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3116,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:20","typeDescriptions":{}}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3109,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:20","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3108,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3107,"id":3122,"nodeType":"Return","src":"4187:98:20"}]},"id":3124,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:20","nodeType":"FunctionDefinition","parameters":{"id":3104,"nodeType":"ParameterList","parameters":[],"src":"4143:2:20"},"returnParameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3124,"src":"4168:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:20"},"scope":3207,"src":"4113:179:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3139,"nodeType":"Block","src":"5003:90:20","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3134,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"5053:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3136,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5075:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3132,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"5020:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3281_$","typeString":"type(library MessageHashUtils)"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:20","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3280,"src":"5020:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3131,"id":3138,"nodeType":"Return","src":"5013:73:20"}]},"documentation":{"id":3125,"nodeType":"StructuredDocumentation","src":"4298:614:20","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3140,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:20","nodeType":"FunctionDefinition","parameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:20","nodeType":"VariableDeclaration","scope":3140,"src":"4943:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:20"},"returnParameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3140,"src":"4994:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:20"},"scope":3207,"src":"4917:176:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[801],"body":{"id":3181,"nodeType":"Block","src":"5472:229:20","statements":[{"expression":{"components":[{"hexValue":"0f","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3160,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"5533:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3162,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"5560:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3164,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3168,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3207","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3207","typeString":"contract EIP712"}],"id":3167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:20","typeDescriptions":{}}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:20","typeDescriptions":{}}},"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3174,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3175,"nodeType":"ArrayTypeName","src":"5672:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3158,"id":3180,"nodeType":"Return","src":"5482:212:20"}]},"documentation":{"id":3141,"nodeType":"StructuredDocumentation","src":"5099:40:20","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:20","nodeType":"FunctionDefinition","parameters":{"id":3142,"nodeType":"ParameterList","parameters":[],"src":"5165:2:20"},"returnParameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3144,"mutability":"mutable","name":"fields","nameLocation":"5249:6:20","nodeType":"VariableDeclaration","scope":3182,"src":"5242:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3143,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3146,"mutability":"mutable","name":"name","nameLocation":"5283:4:20","nodeType":"VariableDeclaration","scope":3182,"src":"5269:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3145,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"version","nameLocation":"5315:7:20","nodeType":"VariableDeclaration","scope":3182,"src":"5301:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3147,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3150,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:20","nodeType":"VariableDeclaration","scope":3182,"src":"5336:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3152,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:20","nodeType":"VariableDeclaration","scope":3182,"src":"5365:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3151,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3154,"mutability":"mutable","name":"salt","nameLocation":"5412:4:20","nodeType":"VariableDeclaration","scope":3182,"src":"5404:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:20","nodeType":"VariableDeclaration","scope":3182,"src":"5430:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3156,"nodeType":"ArrayTypeName","src":"5430:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:20"},"scope":3207,"src":"5144:557:20","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3193,"nodeType":"Block","src":"6082:65:20","statements":[{"expression":{"arguments":[{"id":3190,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"6126:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3188,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"6099:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"6099:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2056_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3187,"id":3192,"nodeType":"Return","src":"6092:48:20"}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"5707:256:20","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3194,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:20","nodeType":"FunctionDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[],"src":"6041:2:20"},"returnParameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3194,"src":"6067:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3185,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:20"},"scope":3207,"src":"6021:126:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3205,"nodeType":"Block","src":"6537:71:20","statements":[{"expression":{"arguments":[{"id":3202,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"6584:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3200,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"6554:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"6554:29:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2056_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3199,"id":3204,"nodeType":"Return","src":"6547:54:20"}]},"documentation":{"id":3195,"nodeType":"StructuredDocumentation","src":"6153:262:20","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3206,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:20","nodeType":"FunctionDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[],"src":"6496:2:20"},"returnParameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3206,"src":"6522:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3197,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:20"},"scope":3207,"src":"6473:135:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3208,"src":"1960:4650:20","usedErrors":[2064,2066],"usedEvents":[782]}],"src":"113:6498:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3281],"Strings":[2632]},"id":3282,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3209,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3211,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3282,"sourceUnit":2633,"src":"149:39:21","symbolAliases":[{"foreign":{"id":3210,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"157:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3212,"nodeType":"StructuredDocumentation","src":"190:330:21","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3281,"linearizedBaseContracts":[3281],"name":"MessageHashUtils","nameLocation":"529:16:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":3221,"nodeType":"Block","src":"1314:368:21","statements":[{"AST":{"nativeSrc":"1376:300:21","nodeType":"YulBlock","src":"1376:300:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:21","nodeType":"YulLiteral","src":"1397:4:21","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:21","nodeType":"YulLiteral","src":"1403:34:21","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:21","nodeType":"YulIdentifier","src":"1390:6:21"},"nativeSrc":"1390:48:21","nodeType":"YulFunctionCall","src":"1390:48:21"},"nativeSrc":"1390:48:21","nodeType":"YulExpressionStatement","src":"1390:48:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:21","nodeType":"YulLiteral","src":"1499:4:21","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:21","nodeType":"YulIdentifier","src":"1505:11:21"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:21","nodeType":"YulIdentifier","src":"1492:6:21"},"nativeSrc":"1492:25:21","nodeType":"YulFunctionCall","src":"1492:25:21"},"nativeSrc":"1492:25:21","nodeType":"YulExpressionStatement","src":"1492:25:21"},{"nativeSrc":"1571:31:21","nodeType":"YulAssignment","src":"1571:31:21","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:21","nodeType":"YulLiteral","src":"1591:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:21","nodeType":"YulLiteral","src":"1597:4:21","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:21","nodeType":"YulIdentifier","src":"1581:9:21"},"nativeSrc":"1581:21:21","nodeType":"YulFunctionCall","src":"1581:21:21"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:21","nodeType":"YulIdentifier","src":"1571:6:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3218,"isOffset":false,"isSlot":false,"src":"1571:6:21","valueSize":1},{"declaration":3215,"isOffset":false,"isSlot":false,"src":"1505:11:21","valueSize":1}],"id":3220,"nodeType":"InlineAssembly","src":"1367:309:21"}]},"documentation":{"id":3213,"nodeType":"StructuredDocumentation","src":"552:665:21","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3222,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:21","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:21","nodeType":"VariableDeclaration","scope":3222,"src":"1254:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:21"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"digest","nameLocation":"1306:6:21","nodeType":"VariableDeclaration","scope":3222,"src":"1298:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:21"},"scope":3281,"src":"1222:460:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3247,"nodeType":"Block","src":"2234:143:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3239,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"2343:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:21","memberName":"length","nodeType":"MemberAccess","src":"2343:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3237,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"2326:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2632_$","typeString":"type(library Strings)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:21","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2445,"src":"2326:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3235,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:21","typeDescriptions":{}}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3243,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"2361:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3231,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:21","typeDescriptions":{}}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:21","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:21","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3230,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3229,"id":3246,"nodeType":"Return","src":"2244:126:21"}]},"documentation":{"id":3223,"nodeType":"StructuredDocumentation","src":"1688:455:21","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3248,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:21","nodeType":"FunctionDefinition","parameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"message","nameLocation":"2193:7:21","nodeType":"VariableDeclaration","scope":3248,"src":"2180:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3224,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:21"},"returnParameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3248,"src":"2225:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:21"},"scope":3281,"src":"2148:229:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3267,"nodeType":"Block","src":"2831:80:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3262,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"2887:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3263,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"2898:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3259,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3258,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3257,"id":3266,"nodeType":"Return","src":"2841:63:21"}]},"documentation":{"id":3249,"nodeType":"StructuredDocumentation","src":"2383:332:21","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3268,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:21","nodeType":"FunctionDefinition","parameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"validator","nameLocation":"2769:9:21","nodeType":"VariableDeclaration","scope":3268,"src":"2761:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3250,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3253,"mutability":"mutable","name":"data","nameLocation":"2793:4:21","nodeType":"VariableDeclaration","scope":3268,"src":"2780:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3252,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:21"},"returnParameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3268,"src":"2822:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:21"},"scope":3281,"src":"2720:191:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3279,"nodeType":"Block","src":"3462:292:21","statements":[{"AST":{"nativeSrc":"3524:224:21","nodeType":"YulBlock","src":"3524:224:21","statements":[{"nativeSrc":"3538:22:21","nodeType":"YulVariableDeclaration","src":"3538:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:21","nodeType":"YulLiteral","src":"3555:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:21","nodeType":"YulIdentifier","src":"3549:5:21"},"nativeSrc":"3549:11:21","nodeType":"YulFunctionCall","src":"3549:11:21"},"variables":[{"name":"ptr","nativeSrc":"3542:3:21","nodeType":"YulTypedName","src":"3542:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:21","nodeType":"YulIdentifier","src":"3580:3:21"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:21","nodeType":"YulLiteral","src":"3585:10:21","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:21","nodeType":"YulIdentifier","src":"3573:6:21"},"nativeSrc":"3573:23:21","nodeType":"YulFunctionCall","src":"3573:23:21"},"nativeSrc":"3573:23:21","nodeType":"YulExpressionStatement","src":"3573:23:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:21","nodeType":"YulIdentifier","src":"3620:3:21"},{"kind":"number","nativeSrc":"3625:4:21","nodeType":"YulLiteral","src":"3625:4:21","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:21","nodeType":"YulIdentifier","src":"3616:3:21"},"nativeSrc":"3616:14:21","nodeType":"YulFunctionCall","src":"3616:14:21"},{"name":"domainSeparator","nativeSrc":"3632:15:21","nodeType":"YulIdentifier","src":"3632:15:21"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:21","nodeType":"YulIdentifier","src":"3609:6:21"},"nativeSrc":"3609:39:21","nodeType":"YulFunctionCall","src":"3609:39:21"},"nativeSrc":"3609:39:21","nodeType":"YulExpressionStatement","src":"3609:39:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:21","nodeType":"YulIdentifier","src":"3672:3:21"},{"kind":"number","nativeSrc":"3677:4:21","nodeType":"YulLiteral","src":"3677:4:21","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:21","nodeType":"YulIdentifier","src":"3668:3:21"},"nativeSrc":"3668:14:21","nodeType":"YulFunctionCall","src":"3668:14:21"},{"name":"structHash","nativeSrc":"3684:10:21","nodeType":"YulIdentifier","src":"3684:10:21"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:21","nodeType":"YulIdentifier","src":"3661:6:21"},"nativeSrc":"3661:34:21","nodeType":"YulFunctionCall","src":"3661:34:21"},"nativeSrc":"3661:34:21","nodeType":"YulExpressionStatement","src":"3661:34:21"},{"nativeSrc":"3708:30:21","nodeType":"YulAssignment","src":"3708:30:21","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:21","nodeType":"YulIdentifier","src":"3728:3:21"},{"kind":"number","nativeSrc":"3733:4:21","nodeType":"YulLiteral","src":"3733:4:21","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:21","nodeType":"YulIdentifier","src":"3718:9:21"},"nativeSrc":"3718:20:21","nodeType":"YulFunctionCall","src":"3718:20:21"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:21","nodeType":"YulIdentifier","src":"3708:6:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3276,"isOffset":false,"isSlot":false,"src":"3708:6:21","valueSize":1},{"declaration":3271,"isOffset":false,"isSlot":false,"src":"3632:15:21","valueSize":1},{"declaration":3273,"isOffset":false,"isSlot":false,"src":"3684:10:21","valueSize":1}],"id":3278,"nodeType":"InlineAssembly","src":"3515:233:21"}]},"documentation":{"id":3269,"nodeType":"StructuredDocumentation","src":"2917:431:21","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3280,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:21","nodeType":"FunctionDefinition","parameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:21","nodeType":"VariableDeclaration","scope":3280,"src":"3378:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:21","nodeType":"VariableDeclaration","scope":3280,"src":"3403:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:21"},"returnParameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"digest","nameLocation":"3454:6:21","nodeType":"VariableDeclaration","scope":3280,"src":"3446:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:21"},"scope":3281,"src":"3353:401:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3282,"src":"521:3235:21","usedErrors":[],"usedEvents":[]}],"src":"123:3634:21"},"id":21},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4335]},"id":4336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3283,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3284,"nodeType":"StructuredDocumentation","src":"129:73:22","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4335,"linearizedBaseContracts":[4335],"name":"Math","nameLocation":"211:4:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3285,"nodeType":"StructuredDocumentation","src":"222:50:22","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":3287,"name":"MathOverflowedMulDiv","nameLocation":"283:20:22","nodeType":"ErrorDefinition","parameters":{"id":3286,"nodeType":"ParameterList","parameters":[],"src":"303:2:22"},"src":"277:29:22"},{"canonicalName":"Math.Rounding","id":3292,"members":[{"id":3288,"name":"Floor","nameLocation":"336:5:22","nodeType":"EnumValue","src":"336:5:22"},{"id":3289,"name":"Ceil","nameLocation":"379:4:22","nodeType":"EnumValue","src":"379:4:22"},{"id":3290,"name":"Trunc","nameLocation":"421:5:22","nodeType":"EnumValue","src":"421:5:22"},{"id":3291,"name":"Expand","nameLocation":"451:6:22","nodeType":"EnumValue","src":"451:6:22"}],"name":"Rounding","nameLocation":"317:8:22","nodeType":"EnumDefinition","src":"312:169:22"},{"body":{"id":3323,"nodeType":"Block","src":"661:140:22","statements":[{"id":3322,"nodeType":"UncheckedBlock","src":"671:124:22","statements":[{"assignments":[3305],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"c","nameLocation":"703:1:22","nodeType":"VariableDeclaration","scope":3322,"src":"695:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3309,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"707:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3307,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"711:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3310,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"730:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3311,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"734:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3317,"nodeType":"IfStatement","src":"726:28:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3303,"id":3316,"nodeType":"Return","src":"737:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3319,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"782:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3303,"id":3321,"nodeType":"Return","src":"768:16:22"}]}]},"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"487:93:22","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":3324,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:22","nodeType":"FunctionDefinition","parameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"a","nameLocation":"609:1:22","nodeType":"VariableDeclaration","scope":3324,"src":"601:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"b","nameLocation":"620:1:22","nodeType":"VariableDeclaration","scope":3324,"src":"612:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:22"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3324,"src":"646:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3299,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3324,"src":"652:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:22"},"scope":4335,"src":"585:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3351,"nodeType":"Block","src":"984:113:22","statements":[{"id":3350,"nodeType":"UncheckedBlock","src":"994:97:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3336,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"1022:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3337,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"1026:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3343,"nodeType":"IfStatement","src":"1018:28:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3335,"id":3342,"nodeType":"Return","src":"1029:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"1074:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3346,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"1078:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3335,"id":3349,"nodeType":"Return","src":"1060:20:22"}]}]},"documentation":{"id":3325,"nodeType":"StructuredDocumentation","src":"807:96:22","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":3352,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:22","nodeType":"FunctionDefinition","parameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"a","nameLocation":"932:1:22","nodeType":"VariableDeclaration","scope":3352,"src":"924:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"b","nameLocation":"943:1:22","nodeType":"VariableDeclaration","scope":3352,"src":"935:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3328,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:22"},"returnParameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3352,"src":"969:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3331,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3352,"src":"975:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:22"},"scope":4335,"src":"908:189:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3393,"nodeType":"Block","src":"1283:417:22","statements":[{"id":3392,"nodeType":"UncheckedBlock","src":"1293:401:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3364,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"1551:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3371,"nodeType":"IfStatement","src":"1547:28:22","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3363,"id":3370,"nodeType":"Return","src":"1559:16:22"}},{"assignments":[3373],"declarations":[{"constant":false,"id":3373,"mutability":"mutable","name":"c","nameLocation":"1597:1:22","nodeType":"VariableDeclaration","scope":3392,"src":"1589:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3377,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3374,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"1601:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3375,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"1605:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3378,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"1624:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3379,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"1628:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3381,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"1633:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3387,"nodeType":"IfStatement","src":"1620:33:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3363,"id":3386,"nodeType":"Return","src":"1636:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3389,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"1681:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3363,"id":3391,"nodeType":"Return","src":"1667:16:22"}]}]},"documentation":{"id":3353,"nodeType":"StructuredDocumentation","src":"1103:99:22","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":3394,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:22","nodeType":"FunctionDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"a","nameLocation":"1231:1:22","nodeType":"VariableDeclaration","scope":3394,"src":"1223:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3357,"mutability":"mutable","name":"b","nameLocation":"1242:1:22","nodeType":"VariableDeclaration","scope":3394,"src":"1234:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:22"},"returnParameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3394,"src":"1268:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3359,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3394,"src":"1274:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:22"},"scope":4335,"src":"1207:493:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3421,"nodeType":"Block","src":"1887:114:22","statements":[{"id":3420,"nodeType":"UncheckedBlock","src":"1897:98:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3406,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"1925:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3413,"nodeType":"IfStatement","src":"1921:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3405,"id":3412,"nodeType":"Return","src":"1933:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3415,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"1978:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"1982:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3405,"id":3419,"nodeType":"Return","src":"1964:20:22"}]}]},"documentation":{"id":3395,"nodeType":"StructuredDocumentation","src":"1706:100:22","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":3422,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:22","nodeType":"FunctionDefinition","parameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"a","nameLocation":"1835:1:22","nodeType":"VariableDeclaration","scope":3422,"src":"1827:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3399,"mutability":"mutable","name":"b","nameLocation":"1846:1:22","nodeType":"VariableDeclaration","scope":3422,"src":"1838:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:22"},"returnParameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3422,"src":"1872:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3401,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3422,"src":"1878:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:22"},"scope":4335,"src":"1811:190:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3449,"nodeType":"Block","src":"2198:114:22","statements":[{"id":3448,"nodeType":"UncheckedBlock","src":"2208:98:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3434,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"2236:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3441,"nodeType":"IfStatement","src":"2232:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3433,"id":3440,"nodeType":"Return","src":"2244:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3443,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"2289:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3444,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"2293:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3433,"id":3447,"nodeType":"Return","src":"2275:20:22"}]}]},"documentation":{"id":3423,"nodeType":"StructuredDocumentation","src":"2007:110:22","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":3450,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:22","nodeType":"FunctionDefinition","parameters":{"id":3428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3425,"mutability":"mutable","name":"a","nameLocation":"2146:1:22","nodeType":"VariableDeclaration","scope":3450,"src":"2138:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3424,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3427,"mutability":"mutable","name":"b","nameLocation":"2157:1:22","nodeType":"VariableDeclaration","scope":3450,"src":"2149:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3426,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:22"},"returnParameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3450,"src":"2183:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3429,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3450,"src":"2189:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:22"},"scope":4335,"src":"2122:190:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3467,"nodeType":"Block","src":"2449:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"2466:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"2470:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3464,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"2478:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:22","trueExpression":{"id":3463,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"2474:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3459,"id":3466,"nodeType":"Return","src":"2459:20:22"}]},"documentation":{"id":3451,"nodeType":"StructuredDocumentation","src":"2318:59:22","text":" @dev Returns the largest of two numbers."},"id":3468,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:22","nodeType":"FunctionDefinition","parameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"a","nameLocation":"2403:1:22","nodeType":"VariableDeclaration","scope":3468,"src":"2395:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3455,"mutability":"mutable","name":"b","nameLocation":"2414:1:22","nodeType":"VariableDeclaration","scope":3468,"src":"2406:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:22"},"returnParameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3468,"src":"2440:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3457,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:22"},"scope":4335,"src":"2382:104:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3485,"nodeType":"Block","src":"2624:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"2641:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3479,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2645:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3482,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2653:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:22","trueExpression":{"id":3481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"2649:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3477,"id":3484,"nodeType":"Return","src":"2634:20:22"}]},"documentation":{"id":3469,"nodeType":"StructuredDocumentation","src":"2492:60:22","text":" @dev Returns the smallest of two numbers."},"id":3486,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:22","nodeType":"FunctionDefinition","parameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"a","nameLocation":"2578:1:22","nodeType":"VariableDeclaration","scope":3486,"src":"2570:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3470,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3473,"mutability":"mutable","name":"b","nameLocation":"2589:1:22","nodeType":"VariableDeclaration","scope":3486,"src":"2581:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:22"},"returnParameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3486,"src":"2615:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:22"},"scope":4335,"src":"2557:104:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3508,"nodeType":"Block","src":"2845:82:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3496,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"2900:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3497,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"2904:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"2910:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3501,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"2914:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3495,"id":3507,"nodeType":"Return","src":"2892:28:22"}]},"documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"2667:102:22","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3509,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:22","nodeType":"FunctionDefinition","parameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"a","nameLocation":"2799:1:22","nodeType":"VariableDeclaration","scope":3509,"src":"2791:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"b","nameLocation":"2810:1:22","nodeType":"VariableDeclaration","scope":3509,"src":"2802:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:22"},"returnParameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3509,"src":"2836:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:22"},"scope":4335,"src":"2774:153:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3542,"nodeType":"Block","src":"3219:260:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3519,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"3233:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3527,"nodeType":"IfStatement","src":"3229:127:22","trueBody":{"id":3526,"nodeType":"Block","src":"3241:115:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"3340:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3523,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"3344:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3518,"id":3525,"nodeType":"Return","src":"3333:12:22"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"3444:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"3458:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3536,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"3467:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:22","trueExpression":{"hexValue":"30","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3518,"id":3541,"nodeType":"Return","src":"3437:35:22"}]},"documentation":{"id":3510,"nodeType":"StructuredDocumentation","src":"2933:210:22","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3543,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:22","nodeType":"FunctionDefinition","parameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"a","nameLocation":"3173:1:22","nodeType":"VariableDeclaration","scope":3543,"src":"3165:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3514,"mutability":"mutable","name":"b","nameLocation":"3184:1:22","nodeType":"VariableDeclaration","scope":3543,"src":"3176:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:22"},"returnParameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3543,"src":"3210:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:22"},"scope":4335,"src":"3148:331:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3668,"nodeType":"Block","src":"3901:4018:22","statements":[{"id":3667,"nodeType":"UncheckedBlock","src":"3911:4002:22","statements":[{"assignments":[3556],"declarations":[{"constant":false,"id":3556,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:22","nodeType":"VariableDeclaration","scope":3667,"src":"4232:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3555,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3560,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3557,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"4248:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3558,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"4252:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:22"},{"assignments":[3562],"declarations":[{"constant":false,"id":3562,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:22","nodeType":"VariableDeclaration","scope":3667,"src":"4312:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3563,"nodeType":"VariableDeclarationStatement","src":"4312:13:22"},{"AST":{"nativeSrc":"4392:122:22","nodeType":"YulBlock","src":"4392:122:22","statements":[{"nativeSrc":"4410:30:22","nodeType":"YulVariableDeclaration","src":"4410:30:22","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:22","nodeType":"YulIdentifier","src":"4427:1:22"},{"name":"y","nativeSrc":"4430:1:22","nodeType":"YulIdentifier","src":"4430:1:22"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:22","nodeType":"YulLiteral","src":"4437:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:22","nodeType":"YulIdentifier","src":"4433:3:22"},"nativeSrc":"4433:6:22","nodeType":"YulFunctionCall","src":"4433:6:22"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:22","nodeType":"YulIdentifier","src":"4420:6:22"},"nativeSrc":"4420:20:22","nodeType":"YulFunctionCall","src":"4420:20:22"},"variables":[{"name":"mm","nativeSrc":"4414:2:22","nodeType":"YulTypedName","src":"4414:2:22","type":""}]},{"nativeSrc":"4457:43:22","nodeType":"YulAssignment","src":"4457:43:22","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:22","nodeType":"YulIdentifier","src":"4474:2:22"},{"name":"prod0","nativeSrc":"4478:5:22","nodeType":"YulIdentifier","src":"4478:5:22"}],"functionName":{"name":"sub","nativeSrc":"4470:3:22","nodeType":"YulIdentifier","src":"4470:3:22"},"nativeSrc":"4470:14:22","nodeType":"YulFunctionCall","src":"4470:14:22"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:22","nodeType":"YulIdentifier","src":"4489:2:22"},{"name":"prod0","nativeSrc":"4493:5:22","nodeType":"YulIdentifier","src":"4493:5:22"}],"functionName":{"name":"lt","nativeSrc":"4486:2:22","nodeType":"YulIdentifier","src":"4486:2:22"},"nativeSrc":"4486:13:22","nodeType":"YulFunctionCall","src":"4486:13:22"}],"functionName":{"name":"sub","nativeSrc":"4466:3:22","nodeType":"YulIdentifier","src":"4466:3:22"},"nativeSrc":"4466:34:22","nodeType":"YulFunctionCall","src":"4466:34:22"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:22","nodeType":"YulIdentifier","src":"4457:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3556,"isOffset":false,"isSlot":false,"src":"4478:5:22","valueSize":1},{"declaration":3556,"isOffset":false,"isSlot":false,"src":"4493:5:22","valueSize":1},{"declaration":3562,"isOffset":false,"isSlot":false,"src":"4457:5:22","valueSize":1},{"declaration":3546,"isOffset":false,"isSlot":false,"src":"4427:1:22","valueSize":1},{"declaration":3548,"isOffset":false,"isSlot":false,"src":"4430:1:22","valueSize":1}],"id":3564,"nodeType":"InlineAssembly","src":"4383:131:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"4595:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3573,"nodeType":"IfStatement","src":"4591:368:22","trueBody":{"id":3572,"nodeType":"Block","src":"4607:352:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3568,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"4925:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3569,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"4933:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3554,"id":3571,"nodeType":"Return","src":"4918:26:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3574,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"5065:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3575,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"5080:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3581,"nodeType":"IfStatement","src":"5061:88:22","trueBody":{"id":3580,"nodeType":"Block","src":"5087:62:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3577,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"5112:20:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3579,"nodeType":"RevertStatement","src":"5105:29:22"}]}},{"assignments":[3583],"declarations":[{"constant":false,"id":3583,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:22","nodeType":"VariableDeclaration","scope":3667,"src":"5404:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3584,"nodeType":"VariableDeclarationStatement","src":"5404:17:22"},{"AST":{"nativeSrc":"5444:291:22","nodeType":"YulBlock","src":"5444:291:22","statements":[{"nativeSrc":"5513:38:22","nodeType":"YulAssignment","src":"5513:38:22","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:22","nodeType":"YulIdentifier","src":"5533:1:22"},{"name":"y","nativeSrc":"5536:1:22","nodeType":"YulIdentifier","src":"5536:1:22"},{"name":"denominator","nativeSrc":"5539:11:22","nodeType":"YulIdentifier","src":"5539:11:22"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:22","nodeType":"YulIdentifier","src":"5526:6:22"},"nativeSrc":"5526:25:22","nodeType":"YulFunctionCall","src":"5526:25:22"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:22","nodeType":"YulIdentifier","src":"5513:9:22"}]},{"nativeSrc":"5633:41:22","nodeType":"YulAssignment","src":"5633:41:22","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:22","nodeType":"YulIdentifier","src":"5646:5:22"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:22","nodeType":"YulIdentifier","src":"5656:9:22"},{"name":"prod0","nativeSrc":"5667:5:22","nodeType":"YulIdentifier","src":"5667:5:22"}],"functionName":{"name":"gt","nativeSrc":"5653:2:22","nodeType":"YulIdentifier","src":"5653:2:22"},"nativeSrc":"5653:20:22","nodeType":"YulFunctionCall","src":"5653:20:22"}],"functionName":{"name":"sub","nativeSrc":"5642:3:22","nodeType":"YulIdentifier","src":"5642:3:22"},"nativeSrc":"5642:32:22","nodeType":"YulFunctionCall","src":"5642:32:22"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:22","nodeType":"YulIdentifier","src":"5633:5:22"}]},{"nativeSrc":"5691:30:22","nodeType":"YulAssignment","src":"5691:30:22","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:22","nodeType":"YulIdentifier","src":"5704:5:22"},{"name":"remainder","nativeSrc":"5711:9:22","nodeType":"YulIdentifier","src":"5711:9:22"}],"functionName":{"name":"sub","nativeSrc":"5700:3:22","nodeType":"YulIdentifier","src":"5700:3:22"},"nativeSrc":"5700:21:22","nodeType":"YulFunctionCall","src":"5700:21:22"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:22","nodeType":"YulIdentifier","src":"5691:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3550,"isOffset":false,"isSlot":false,"src":"5539:11:22","valueSize":1},{"declaration":3556,"isOffset":false,"isSlot":false,"src":"5667:5:22","valueSize":1},{"declaration":3556,"isOffset":false,"isSlot":false,"src":"5691:5:22","valueSize":1},{"declaration":3556,"isOffset":false,"isSlot":false,"src":"5704:5:22","valueSize":1},{"declaration":3562,"isOffset":false,"isSlot":false,"src":"5633:5:22","valueSize":1},{"declaration":3562,"isOffset":false,"isSlot":false,"src":"5646:5:22","valueSize":1},{"declaration":3583,"isOffset":false,"isSlot":false,"src":"5513:9:22","valueSize":1},{"declaration":3583,"isOffset":false,"isSlot":false,"src":"5656:9:22","valueSize":1},{"declaration":3583,"isOffset":false,"isSlot":false,"src":"5711:9:22","valueSize":1},{"declaration":3546,"isOffset":false,"isSlot":false,"src":"5533:1:22","valueSize":1},{"declaration":3548,"isOffset":false,"isSlot":false,"src":"5536:1:22","valueSize":1}],"id":3585,"nodeType":"InlineAssembly","src":"5435:300:22"},{"assignments":[3587],"declarations":[{"constant":false,"id":3587,"mutability":"mutable","name":"twos","nameLocation":"5947:4:22","nodeType":"VariableDeclaration","scope":3667,"src":"5939:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3586,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3594,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"5954:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3590,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"5973:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:22"},{"AST":{"nativeSrc":"6008:362:22","nodeType":"YulBlock","src":"6008:362:22","statements":[{"nativeSrc":"6073:37:22","nodeType":"YulAssignment","src":"6073:37:22","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:22","nodeType":"YulIdentifier","src":"6092:11:22"},{"name":"twos","nativeSrc":"6105:4:22","nodeType":"YulIdentifier","src":"6105:4:22"}],"functionName":{"name":"div","nativeSrc":"6088:3:22","nodeType":"YulIdentifier","src":"6088:3:22"},"nativeSrc":"6088:22:22","nodeType":"YulFunctionCall","src":"6088:22:22"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:22","nodeType":"YulIdentifier","src":"6073:11:22"}]},{"nativeSrc":"6177:25:22","nodeType":"YulAssignment","src":"6177:25:22","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:22","nodeType":"YulIdentifier","src":"6190:5:22"},{"name":"twos","nativeSrc":"6197:4:22","nodeType":"YulIdentifier","src":"6197:4:22"}],"functionName":{"name":"div","nativeSrc":"6186:3:22","nodeType":"YulIdentifier","src":"6186:3:22"},"nativeSrc":"6186:16:22","nodeType":"YulFunctionCall","src":"6186:16:22"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:22","nodeType":"YulIdentifier","src":"6177:5:22"}]},{"nativeSrc":"6317:39:22","nodeType":"YulAssignment","src":"6317:39:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:22","nodeType":"YulLiteral","src":"6337:1:22","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:22","nodeType":"YulIdentifier","src":"6340:4:22"}],"functionName":{"name":"sub","nativeSrc":"6333:3:22","nodeType":"YulIdentifier","src":"6333:3:22"},"nativeSrc":"6333:12:22","nodeType":"YulFunctionCall","src":"6333:12:22"},{"name":"twos","nativeSrc":"6347:4:22","nodeType":"YulIdentifier","src":"6347:4:22"}],"functionName":{"name":"div","nativeSrc":"6329:3:22","nodeType":"YulIdentifier","src":"6329:3:22"},"nativeSrc":"6329:23:22","nodeType":"YulFunctionCall","src":"6329:23:22"},{"kind":"number","nativeSrc":"6354:1:22","nodeType":"YulLiteral","src":"6354:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:22","nodeType":"YulIdentifier","src":"6325:3:22"},"nativeSrc":"6325:31:22","nodeType":"YulFunctionCall","src":"6325:31:22"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:22","nodeType":"YulIdentifier","src":"6317:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3550,"isOffset":false,"isSlot":false,"src":"6073:11:22","valueSize":1},{"declaration":3550,"isOffset":false,"isSlot":false,"src":"6092:11:22","valueSize":1},{"declaration":3556,"isOffset":false,"isSlot":false,"src":"6177:5:22","valueSize":1},{"declaration":3556,"isOffset":false,"isSlot":false,"src":"6190:5:22","valueSize":1},{"declaration":3587,"isOffset":false,"isSlot":false,"src":"6105:4:22","valueSize":1},{"declaration":3587,"isOffset":false,"isSlot":false,"src":"6197:4:22","valueSize":1},{"declaration":3587,"isOffset":false,"isSlot":false,"src":"6317:4:22","valueSize":1},{"declaration":3587,"isOffset":false,"isSlot":false,"src":"6340:4:22","valueSize":1},{"declaration":3587,"isOffset":false,"isSlot":false,"src":"6347:4:22","valueSize":1}],"id":3595,"nodeType":"InlineAssembly","src":"5999:371:22"},{"expression":{"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3596,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"6436:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3597,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"6445:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3598,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"6453:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3601,"nodeType":"ExpressionStatement","src":"6436:21:22"},{"assignments":[3603],"declarations":[{"constant":false,"id":3603,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:22","nodeType":"VariableDeclaration","scope":3667,"src":"6775:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3610,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3605,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"6798:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:22"},{"expression":{"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3611,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"7031:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3613,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"7046:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3614,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"7060:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3618,"nodeType":"ExpressionStatement","src":"7031:36:22"},{"expression":{"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3619,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"7100:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3621,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"7115:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3622,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"7129:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3626,"nodeType":"ExpressionStatement","src":"7100:36:22"},{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3627,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"7170:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3629,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"7185:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3630,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"7199:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3634,"nodeType":"ExpressionStatement","src":"7170:36:22"},{"expression":{"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3635,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"7240:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3637,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"7255:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3638,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"7269:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3642,"nodeType":"ExpressionStatement","src":"7240:36:22"},{"expression":{"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3643,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"7310:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"7325:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3646,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"7339:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3650,"nodeType":"ExpressionStatement","src":"7310:36:22"},{"expression":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3651,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"7381:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3653,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"7396:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3654,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"7410:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3658,"nodeType":"ExpressionStatement","src":"7381:36:22"},{"expression":{"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"7851:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3660,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"7860:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3661,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"7868:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3664,"nodeType":"ExpressionStatement","src":"7851:24:22"},{"expression":{"id":3665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"7896:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3554,"id":3666,"nodeType":"Return","src":"7889:13:22"}]}]},"documentation":{"id":3544,"nodeType":"StructuredDocumentation","src":"3485:313:22","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3669,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:22","nodeType":"FunctionDefinition","parameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3546,"mutability":"mutable","name":"x","nameLocation":"3827:1:22","nodeType":"VariableDeclaration","scope":3669,"src":"3819:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3545,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3548,"mutability":"mutable","name":"y","nameLocation":"3838:1:22","nodeType":"VariableDeclaration","scope":3669,"src":"3830:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3550,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:22","nodeType":"VariableDeclaration","scope":3669,"src":"3841:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:22"},"returnParameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"result","nameLocation":"3893:6:22","nodeType":"VariableDeclaration","scope":3669,"src":"3885:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:22"},"scope":4335,"src":"3803:4116:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3711,"nodeType":"Block","src":"8161:192:22","statements":[{"assignments":[3685],"declarations":[{"constant":false,"id":3685,"mutability":"mutable","name":"result","nameLocation":"8179:6:22","nodeType":"VariableDeclaration","scope":3711,"src":"8171:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3691,"initialValue":{"arguments":[{"id":3687,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"8195:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3688,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"8198:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3689,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"8201:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3686,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3669,3712],"referencedDeclaration":3669,"src":"8188:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3693,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"8244:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}],"id":3692,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"8227:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3292_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3696,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"8264:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3697,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"8267:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3698,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"8270:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3695,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3708,"nodeType":"IfStatement","src":"8223:101:22","trueBody":{"id":3707,"nodeType":"Block","src":"8288:36:22","statements":[{"expression":{"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3703,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"8302:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3706,"nodeType":"ExpressionStatement","src":"8302:11:22"}]}},{"expression":{"id":3709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"8340:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3683,"id":3710,"nodeType":"Return","src":"8333:13:22"}]},"documentation":{"id":3670,"nodeType":"StructuredDocumentation","src":"7925:121:22","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3712,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:22","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"x","nameLocation":"8075:1:22","nodeType":"VariableDeclaration","scope":3712,"src":"8067:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3674,"mutability":"mutable","name":"y","nameLocation":"8086:1:22","nodeType":"VariableDeclaration","scope":3712,"src":"8078:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3676,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:22","nodeType":"VariableDeclaration","scope":3712,"src":"8089:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:22","nodeType":"VariableDeclaration","scope":3712,"src":"8110:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"},"typeName":{"id":3678,"nodeType":"UserDefinedTypeName","pathNode":{"id":3677,"name":"Rounding","nameLocations":["8110:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3292,"src":"8110:8:22"},"referencedDeclaration":3292,"src":"8110:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:22"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3712,"src":"8152:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:22"},"scope":4335,"src":"8051:302:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3823,"nodeType":"Block","src":"8644:1585:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"8658:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3726,"nodeType":"IfStatement","src":"8654:45:22","trueBody":{"id":3725,"nodeType":"Block","src":"8666:33:22","statements":[{"expression":{"hexValue":"30","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3719,"id":3724,"nodeType":"Return","src":"8680:8:22"}]}},{"assignments":[3728],"declarations":[{"constant":false,"id":3728,"mutability":"mutable","name":"result","nameLocation":"9386:6:22","nodeType":"VariableDeclaration","scope":3823,"src":"9378:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3737,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"9406:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3730,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3991,4026],"referencedDeclaration":3991,"src":"9401:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:22"},{"id":3822,"nodeType":"UncheckedBlock","src":"9815:408:22","statements":[{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"9839:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"9849:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"9858:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3741,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"9862:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3748,"nodeType":"ExpressionStatement","src":"9839:35:22"},{"expression":{"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3749,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"9888:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"9898:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3751,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"9907:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3752,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"9911:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3759,"nodeType":"ExpressionStatement","src":"9888:35:22"},{"expression":{"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"9937:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"9947:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3762,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"9956:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"9960:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3766,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3770,"nodeType":"ExpressionStatement","src":"9937:35:22"},{"expression":{"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3771,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"9986:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3772,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"9996:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3773,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"10005:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3774,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"10009:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3781,"nodeType":"ExpressionStatement","src":"9986:35:22"},{"expression":{"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3782,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"10035:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"10045:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3784,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"10054:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3785,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"10058:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3792,"nodeType":"ExpressionStatement","src":"10035:35:22"},{"expression":{"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3793,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"10084:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"10094:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"10103:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"10107:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3803,"nodeType":"ExpressionStatement","src":"10084:35:22"},{"expression":{"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"10133:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"10143:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3806,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"10152:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3807,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"10156:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3814,"nodeType":"ExpressionStatement","src":"10133:35:22"},{"expression":{"arguments":[{"id":3816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"10193:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3817,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"10201:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"10205:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3815,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"10189:3:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3719,"id":3821,"nodeType":"Return","src":"10182:30:22"}]}]},"documentation":{"id":3713,"nodeType":"StructuredDocumentation","src":"8359:223:22","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3824,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:22","nodeType":"FunctionDefinition","parameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"a","nameLocation":"8609:1:22","nodeType":"VariableDeclaration","scope":3824,"src":"8601:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:22"},"returnParameters":{"id":3719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3824,"src":"8635:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:22"},"scope":4335,"src":"8587:1642:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3858,"nodeType":"Block","src":"10405:164:22","statements":[{"id":3857,"nodeType":"UncheckedBlock","src":"10415:148:22","statements":[{"assignments":[3836],"declarations":[{"constant":false,"id":3836,"mutability":"mutable","name":"result","nameLocation":"10447:6:22","nodeType":"VariableDeclaration","scope":3857,"src":"10439:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3840,"initialValue":{"arguments":[{"id":3838,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"10461:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3837,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3824,3859],"referencedDeclaration":3824,"src":"10456:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"10484:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3843,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"10511:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}],"id":3842,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"10494:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3292_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"10524:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3846,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"10533:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3848,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"10542:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:22","trueExpression":{"hexValue":"31","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3834,"id":3856,"nodeType":"Return","src":"10477:75:22"}]}]},"documentation":{"id":3825,"nodeType":"StructuredDocumentation","src":"10235:89:22","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3859,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:22","nodeType":"FunctionDefinition","parameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"a","nameLocation":"10351:1:22","nodeType":"VariableDeclaration","scope":3859,"src":"10343:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:22","nodeType":"VariableDeclaration","scope":3859,"src":"10354:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"},"typeName":{"id":3829,"nodeType":"UserDefinedTypeName","pathNode":{"id":3828,"name":"Rounding","nameLocations":["10354:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3292,"src":"10354:8:22"},"referencedDeclaration":3292,"src":"10354:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:22"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3859,"src":"10396:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3832,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:22"},"scope":4335,"src":"10329:240:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3990,"nodeType":"Block","src":"10760:922:22","statements":[{"assignments":[3868],"declarations":[{"constant":false,"id":3868,"mutability":"mutable","name":"result","nameLocation":"10778:6:22","nodeType":"VariableDeclaration","scope":3990,"src":"10770:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3870,"initialValue":{"hexValue":"30","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:22"},{"id":3987,"nodeType":"UncheckedBlock","src":"10798:855:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"10826:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3885,"nodeType":"IfStatement","src":"10822:99:22","trueBody":{"id":3884,"nodeType":"Block","src":"10844:77:22","statements":[{"expression":{"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"10862:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3879,"nodeType":"ExpressionStatement","src":"10862:13:22"},{"expression":{"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3880,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"10893:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3883,"nodeType":"ExpressionStatement","src":"10893:13:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"10938:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3900,"nodeType":"IfStatement","src":"10934:96:22","trueBody":{"id":3899,"nodeType":"Block","src":"10955:75:22","statements":[{"expression":{"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"10973:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3894,"nodeType":"ExpressionStatement","src":"10973:12:22"},{"expression":{"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3895,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11003:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3898,"nodeType":"ExpressionStatement","src":"11003:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11047:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3915,"nodeType":"IfStatement","src":"11043:96:22","trueBody":{"id":3914,"nodeType":"Block","src":"11064:75:22","statements":[{"expression":{"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11082:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3909,"nodeType":"ExpressionStatement","src":"11082:12:22"},{"expression":{"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11112:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3913,"nodeType":"ExpressionStatement","src":"11112:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11156:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3930,"nodeType":"IfStatement","src":"11152:96:22","trueBody":{"id":3929,"nodeType":"Block","src":"11173:75:22","statements":[{"expression":{"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11191:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3924,"nodeType":"ExpressionStatement","src":"11191:12:22"},{"expression":{"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11221:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3928,"nodeType":"ExpressionStatement","src":"11221:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11265:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3945,"nodeType":"IfStatement","src":"11261:93:22","trueBody":{"id":3944,"nodeType":"Block","src":"11281:73:22","statements":[{"expression":{"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11299:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3939,"nodeType":"ExpressionStatement","src":"11299:11:22"},{"expression":{"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11328:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3943,"nodeType":"ExpressionStatement","src":"11328:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11371:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3960,"nodeType":"IfStatement","src":"11367:93:22","trueBody":{"id":3959,"nodeType":"Block","src":"11387:73:22","statements":[{"expression":{"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11405:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3954,"nodeType":"ExpressionStatement","src":"11405:11:22"},{"expression":{"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3955,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11434:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3958,"nodeType":"ExpressionStatement","src":"11434:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11477:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3975,"nodeType":"IfStatement","src":"11473:93:22","trueBody":{"id":3974,"nodeType":"Block","src":"11493:73:22","statements":[{"expression":{"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11511:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3969,"nodeType":"ExpressionStatement","src":"11511:11:22"},{"expression":{"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11540:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3973,"nodeType":"ExpressionStatement","src":"11540:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11583:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3986,"nodeType":"IfStatement","src":"11579:64:22","trueBody":{"id":3985,"nodeType":"Block","src":"11599:44:22","statements":[{"expression":{"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3981,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11617:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3984,"nodeType":"ExpressionStatement","src":"11617:11:22"}]}}]},{"expression":{"id":3988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11669:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3866,"id":3989,"nodeType":"Return","src":"11662:13:22"}]},"documentation":{"id":3860,"nodeType":"StructuredDocumentation","src":"10575:119:22","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3991,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:22","nodeType":"FunctionDefinition","parameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"value","nameLocation":"10721:5:22","nodeType":"VariableDeclaration","scope":3991,"src":"10713:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:22"},"returnParameters":{"id":3866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3991,"src":"10751:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3864,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:22"},"scope":4335,"src":"10699:983:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4025,"nodeType":"Block","src":"11915:168:22","statements":[{"id":4024,"nodeType":"UncheckedBlock","src":"11925:152:22","statements":[{"assignments":[4003],"declarations":[{"constant":false,"id":4003,"mutability":"mutable","name":"result","nameLocation":"11957:6:22","nodeType":"VariableDeclaration","scope":4024,"src":"11949:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4007,"initialValue":{"arguments":[{"id":4005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"11971:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4004,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3991,4026],"referencedDeclaration":3991,"src":"11966:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"11998:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4010,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"12025:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}],"id":4009,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"12008:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3292_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"12043:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"12052:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:22","trueExpression":{"hexValue":"31","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4001,"id":4023,"nodeType":"Return","src":"11991:75:22"}]}]},"documentation":{"id":3992,"nodeType":"StructuredDocumentation","src":"11688:142:22","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4026,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:22","nodeType":"FunctionDefinition","parameters":{"id":3998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3994,"mutability":"mutable","name":"value","nameLocation":"11857:5:22","nodeType":"VariableDeclaration","scope":4026,"src":"11849:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3993,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3997,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:22","nodeType":"VariableDeclaration","scope":4026,"src":"11864:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"},"typeName":{"id":3996,"nodeType":"UserDefinedTypeName","pathNode":{"id":3995,"name":"Rounding","nameLocations":["11864:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3292,"src":"11864:8:22"},"referencedDeclaration":3292,"src":"11864:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:22"},"returnParameters":{"id":4001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4026,"src":"11906:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3999,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:22"},"scope":4335,"src":"11835:248:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4154,"nodeType":"Block","src":"12276:854:22","statements":[{"assignments":[4035],"declarations":[{"constant":false,"id":4035,"mutability":"mutable","name":"result","nameLocation":"12294:6:22","nodeType":"VariableDeclaration","scope":4154,"src":"12286:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4037,"initialValue":{"hexValue":"30","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:22"},{"id":4151,"nodeType":"UncheckedBlock","src":"12314:787:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12342:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4054,"nodeType":"IfStatement","src":"12338:103:22","trueBody":{"id":4053,"nodeType":"Block","src":"12361:80:22","statements":[{"expression":{"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12379:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4048,"nodeType":"ExpressionStatement","src":"12379:17:22"},{"expression":{"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"12414:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4052,"nodeType":"ExpressionStatement","src":"12414:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12458:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4071,"nodeType":"IfStatement","src":"12454:103:22","trueBody":{"id":4070,"nodeType":"Block","src":"12477:80:22","statements":[{"expression":{"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12495:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4065,"nodeType":"ExpressionStatement","src":"12495:17:22"},{"expression":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"12530:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4069,"nodeType":"ExpressionStatement","src":"12530:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12574:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4088,"nodeType":"IfStatement","src":"12570:103:22","trueBody":{"id":4087,"nodeType":"Block","src":"12593:80:22","statements":[{"expression":{"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12611:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4082,"nodeType":"ExpressionStatement","src":"12611:17:22"},{"expression":{"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"12646:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4086,"nodeType":"ExpressionStatement","src":"12646:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12690:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4105,"nodeType":"IfStatement","src":"12686:100:22","trueBody":{"id":4104,"nodeType":"Block","src":"12708:78:22","statements":[{"expression":{"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12726:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4099,"nodeType":"ExpressionStatement","src":"12726:16:22"},{"expression":{"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"12760:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4103,"nodeType":"ExpressionStatement","src":"12760:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12803:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4122,"nodeType":"IfStatement","src":"12799:100:22","trueBody":{"id":4121,"nodeType":"Block","src":"12821:78:22","statements":[{"expression":{"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12839:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4116,"nodeType":"ExpressionStatement","src":"12839:16:22"},{"expression":{"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"12873:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4120,"nodeType":"ExpressionStatement","src":"12873:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12916:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4139,"nodeType":"IfStatement","src":"12912:100:22","trueBody":{"id":4138,"nodeType":"Block","src":"12934:78:22","statements":[{"expression":{"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12952:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4133,"nodeType":"ExpressionStatement","src":"12952:16:22"},{"expression":{"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4134,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"12986:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4137,"nodeType":"ExpressionStatement","src":"12986:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"13029:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4150,"nodeType":"IfStatement","src":"13025:66:22","trueBody":{"id":4149,"nodeType":"Block","src":"13047:44:22","statements":[{"expression":{"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4145,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"13065:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4148,"nodeType":"ExpressionStatement","src":"13065:11:22"}]}}]},{"expression":{"id":4152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"13117:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4033,"id":4153,"nodeType":"Return","src":"13110:13:22"}]},"documentation":{"id":4027,"nodeType":"StructuredDocumentation","src":"12089:120:22","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4155,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:22","nodeType":"FunctionDefinition","parameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"value","nameLocation":"12237:5:22","nodeType":"VariableDeclaration","scope":4155,"src":"12229:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4028,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:22"},"returnParameters":{"id":4033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4155,"src":"12267:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4031,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:22"},"scope":4335,"src":"12214:916:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4189,"nodeType":"Block","src":"13365:170:22","statements":[{"id":4188,"nodeType":"UncheckedBlock","src":"13375:154:22","statements":[{"assignments":[4167],"declarations":[{"constant":false,"id":4167,"mutability":"mutable","name":"result","nameLocation":"13407:6:22","nodeType":"VariableDeclaration","scope":4188,"src":"13399:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4171,"initialValue":{"arguments":[{"id":4169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"13422:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4168,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4155,4190],"referencedDeclaration":4155,"src":"13416:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"13449:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4174,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"13476:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}],"id":4173,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"13459:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3292_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4177,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"13495:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"13504:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:22","trueExpression":{"hexValue":"31","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4165,"id":4187,"nodeType":"Return","src":"13442:76:22"}]}]},"documentation":{"id":4156,"nodeType":"StructuredDocumentation","src":"13136:143:22","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4190,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:22","nodeType":"FunctionDefinition","parameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4158,"mutability":"mutable","name":"value","nameLocation":"13307:5:22","nodeType":"VariableDeclaration","scope":4190,"src":"13299:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4157,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4161,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:22","nodeType":"VariableDeclaration","scope":4190,"src":"13314:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"},"typeName":{"id":4160,"nodeType":"UserDefinedTypeName","pathNode":{"id":4159,"name":"Rounding","nameLocations":["13314:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3292,"src":"13314:8:22"},"referencedDeclaration":3292,"src":"13314:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:22"},"returnParameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4190,"src":"13356:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4163,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:22"},"scope":4335,"src":"13284:251:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4276,"nodeType":"Block","src":"13855:600:22","statements":[{"assignments":[4199],"declarations":[{"constant":false,"id":4199,"mutability":"mutable","name":"result","nameLocation":"13873:6:22","nodeType":"VariableDeclaration","scope":4276,"src":"13865:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4198,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4201,"initialValue":{"hexValue":"30","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:22"},{"id":4273,"nodeType":"UncheckedBlock","src":"13893:533:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"13921:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4216,"nodeType":"IfStatement","src":"13917:98:22","trueBody":{"id":4215,"nodeType":"Block","src":"13939:76:22","statements":[{"expression":{"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"13957:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4210,"nodeType":"ExpressionStatement","src":"13957:13:22"},{"expression":{"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4211,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"13988:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4214,"nodeType":"ExpressionStatement","src":"13988:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"14032:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4231,"nodeType":"IfStatement","src":"14028:95:22","trueBody":{"id":4230,"nodeType":"Block","src":"14049:74:22","statements":[{"expression":{"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"14067:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4225,"nodeType":"ExpressionStatement","src":"14067:12:22"},{"expression":{"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"14097:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4229,"nodeType":"ExpressionStatement","src":"14097:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"14140:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4246,"nodeType":"IfStatement","src":"14136:95:22","trueBody":{"id":4245,"nodeType":"Block","src":"14157:74:22","statements":[{"expression":{"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"14175:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4240,"nodeType":"ExpressionStatement","src":"14175:12:22"},{"expression":{"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"14205:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4244,"nodeType":"ExpressionStatement","src":"14205:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"14248:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4261,"nodeType":"IfStatement","src":"14244:95:22","trueBody":{"id":4260,"nodeType":"Block","src":"14265:74:22","statements":[{"expression":{"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"14283:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4255,"nodeType":"ExpressionStatement","src":"14283:12:22"},{"expression":{"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"14313:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4259,"nodeType":"ExpressionStatement","src":"14313:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"14356:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4272,"nodeType":"IfStatement","src":"14352:64:22","trueBody":{"id":4271,"nodeType":"Block","src":"14372:44:22","statements":[{"expression":{"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"14390:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4270,"nodeType":"ExpressionStatement","src":"14390:11:22"}]}}]},{"expression":{"id":4274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"14442:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4197,"id":4275,"nodeType":"Return","src":"14435:13:22"}]},"documentation":{"id":4191,"nodeType":"StructuredDocumentation","src":"13541:246:22","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4277,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:22","nodeType":"FunctionDefinition","parameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"value","nameLocation":"13816:5:22","nodeType":"VariableDeclaration","scope":4277,"src":"13808:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4192,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:22"},"returnParameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4277,"src":"13846:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4195,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:22"},"scope":4335,"src":"13792:663:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4314,"nodeType":"Block","src":"14692:177:22","statements":[{"id":4313,"nodeType":"UncheckedBlock","src":"14702:161:22","statements":[{"assignments":[4289],"declarations":[{"constant":false,"id":4289,"mutability":"mutable","name":"result","nameLocation":"14734:6:22","nodeType":"VariableDeclaration","scope":4313,"src":"14726:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4293,"initialValue":{"arguments":[{"id":4291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"14750:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4290,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4277,4315],"referencedDeclaration":4277,"src":"14743:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"14777:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4296,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"14804:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}],"id":4295,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"14787:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3292_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"14823:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"14838:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:22","trueExpression":{"hexValue":"31","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4287,"id":4312,"nodeType":"Return","src":"14770:82:22"}]}]},"documentation":{"id":4278,"nodeType":"StructuredDocumentation","src":"14461:144:22","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4315,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:22","nodeType":"FunctionDefinition","parameters":{"id":4284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"value","nameLocation":"14634:5:22","nodeType":"VariableDeclaration","scope":4315,"src":"14626:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4279,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:22","nodeType":"VariableDeclaration","scope":4315,"src":"14641:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"},"typeName":{"id":4282,"nodeType":"UserDefinedTypeName","pathNode":{"id":4281,"name":"Rounding","nameLocations":["14641:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3292,"src":"14641:8:22"},"referencedDeclaration":3292,"src":"14641:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:22"},"returnParameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4315,"src":"14683:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:22"},"scope":4335,"src":"14610:259:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4333,"nodeType":"Block","src":"15067:48:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4326,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"15090:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}],"id":4325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4324,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:22","typeDescriptions":{}}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4323,"id":4332,"nodeType":"Return","src":"15077:31:22"}]},"documentation":{"id":4316,"nodeType":"StructuredDocumentation","src":"14875:113:22","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4334,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:22","nodeType":"FunctionDefinition","parameters":{"id":4320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4319,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:22","nodeType":"VariableDeclaration","scope":4334,"src":"15019:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"},"typeName":{"id":4318,"nodeType":"UserDefinedTypeName","pathNode":{"id":4317,"name":"Rounding","nameLocations":["15019:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3292,"src":"15019:8:22"},"referencedDeclaration":3292,"src":"15019:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3292","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:22"},"returnParameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4334,"src":"15061:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4321,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:22"},"scope":4335,"src":"14993:122:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4336,"src":"203:14914:22","usedErrors":[3287],"usedEvents":[]}],"src":"103:15015:22"},"id":22},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6090]},"id":6091,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4337,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4338,"nodeType":"StructuredDocumentation","src":"218:545:23","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6090,"linearizedBaseContracts":[6090],"name":"SafeCast","nameLocation":"772:8:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4339,"nodeType":"StructuredDocumentation","src":"787:68:23","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4345,"name":"SafeCastOverflowedUintDowncast","nameLocation":"866:30:23","nodeType":"ErrorDefinition","parameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4341,"mutability":"mutable","name":"bits","nameLocation":"903:4:23","nodeType":"VariableDeclaration","scope":4345,"src":"897:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4340,"name":"uint8","nodeType":"ElementaryTypeName","src":"897:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"value","nameLocation":"917:5:23","nodeType":"VariableDeclaration","scope":4345,"src":"909:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"896:27:23"},"src":"860:64:23"},{"documentation":{"id":4346,"nodeType":"StructuredDocumentation","src":"930:75:23","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4350,"name":"SafeCastOverflowedIntToUint","nameLocation":"1016:27:23","nodeType":"ErrorDefinition","parameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"value","nameLocation":"1051:5:23","nodeType":"VariableDeclaration","scope":4350,"src":"1044:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4347,"name":"int256","nodeType":"ElementaryTypeName","src":"1044:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1043:14:23"},"src":"1010:48:23"},{"documentation":{"id":4351,"nodeType":"StructuredDocumentation","src":"1064:67:23","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4357,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1142:29:23","nodeType":"ErrorDefinition","parameters":{"id":4356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4353,"mutability":"mutable","name":"bits","nameLocation":"1178:4:23","nodeType":"VariableDeclaration","scope":4357,"src":"1172:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4352,"name":"uint8","nodeType":"ElementaryTypeName","src":"1172:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4355,"mutability":"mutable","name":"value","nameLocation":"1191:5:23","nodeType":"VariableDeclaration","scope":4357,"src":"1184:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4354,"name":"int256","nodeType":"ElementaryTypeName","src":"1184:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1171:26:23"},"src":"1136:62:23"},{"documentation":{"id":4358,"nodeType":"StructuredDocumentation","src":"1204:75:23","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4362,"name":"SafeCastOverflowedUintToInt","nameLocation":"1290:27:23","nodeType":"ErrorDefinition","parameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"value","nameLocation":"1326:5:23","nodeType":"VariableDeclaration","scope":4362,"src":"1318:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:15:23"},"src":"1284:49:23"},{"body":{"id":4389,"nodeType":"Block","src":"1690:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"1704:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1717:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4372,"name":"uint248","nodeType":"ElementaryTypeName","src":"1717:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4371,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:3:23","memberName":"max","nodeType":"MemberAccess","src":"1712:17:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1704:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4383,"nodeType":"IfStatement","src":"1700:105:23","trueBody":{"id":4382,"nodeType":"Block","src":"1731:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"1788:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4377,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"1752:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4381,"nodeType":"RevertStatement","src":"1745:49:23"}]}},{"expression":{"arguments":[{"id":4386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"1829:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1821:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4384,"name":"uint248","nodeType":"ElementaryTypeName","src":"1821:7:23","typeDescriptions":{}}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1821:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4369,"id":4388,"nodeType":"Return","src":"1814:21:23"}]},"documentation":{"id":4363,"nodeType":"StructuredDocumentation","src":"1339:280:23","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4390,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1633:9:23","nodeType":"FunctionDefinition","parameters":{"id":4366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"value","nameLocation":"1651:5:23","nodeType":"VariableDeclaration","scope":4390,"src":"1643:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1642:15:23"},"returnParameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4390,"src":"1681:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4367,"name":"uint248","nodeType":"ElementaryTypeName","src":"1681:7:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1680:9:23"},"scope":6090,"src":"1624:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4417,"nodeType":"Block","src":"2199:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"2213:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2226:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4400,"name":"uint240","nodeType":"ElementaryTypeName","src":"2226:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4399,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2221:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2235:3:23","memberName":"max","nodeType":"MemberAccess","src":"2221:17:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2213:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4411,"nodeType":"IfStatement","src":"2209:105:23","trueBody":{"id":4410,"nodeType":"Block","src":"2240:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"2297:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4405,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"2261:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4409,"nodeType":"RevertStatement","src":"2254:49:23"}]}},{"expression":{"arguments":[{"id":4414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"2338:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2330:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4412,"name":"uint240","nodeType":"ElementaryTypeName","src":"2330:7:23","typeDescriptions":{}}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4397,"id":4416,"nodeType":"Return","src":"2323:21:23"}]},"documentation":{"id":4391,"nodeType":"StructuredDocumentation","src":"1848:280:23","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4418,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2142:9:23","nodeType":"FunctionDefinition","parameters":{"id":4394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4393,"mutability":"mutable","name":"value","nameLocation":"2160:5:23","nodeType":"VariableDeclaration","scope":4418,"src":"2152:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:15:23"},"returnParameters":{"id":4397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4418,"src":"2190:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4395,"name":"uint240","nodeType":"ElementaryTypeName","src":"2190:7:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2189:9:23"},"scope":6090,"src":"2133:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4445,"nodeType":"Block","src":"2708:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"2722:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4428,"name":"uint232","nodeType":"ElementaryTypeName","src":"2735:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4427,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2730:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2744:3:23","memberName":"max","nodeType":"MemberAccess","src":"2730:17:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2722:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4439,"nodeType":"IfStatement","src":"2718:105:23","trueBody":{"id":4438,"nodeType":"Block","src":"2749:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2801:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"2806:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4433,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"2770:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4437,"nodeType":"RevertStatement","src":"2763:49:23"}]}},{"expression":{"arguments":[{"id":4442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"2847:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2839:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4440,"name":"uint232","nodeType":"ElementaryTypeName","src":"2839:7:23","typeDescriptions":{}}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2839:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4425,"id":4444,"nodeType":"Return","src":"2832:21:23"}]},"documentation":{"id":4419,"nodeType":"StructuredDocumentation","src":"2357:280:23","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4446,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2651:9:23","nodeType":"FunctionDefinition","parameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4421,"mutability":"mutable","name":"value","nameLocation":"2669:5:23","nodeType":"VariableDeclaration","scope":4446,"src":"2661:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2660:15:23"},"returnParameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4446,"src":"2699:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4423,"name":"uint232","nodeType":"ElementaryTypeName","src":"2699:7:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2698:9:23"},"scope":6090,"src":"2642:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4473,"nodeType":"Block","src":"3217:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"3231:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3244:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4456,"name":"uint224","nodeType":"ElementaryTypeName","src":"3244:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4455,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3239:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3253:3:23","memberName":"max","nodeType":"MemberAccess","src":"3239:17:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3231:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4467,"nodeType":"IfStatement","src":"3227:105:23","trueBody":{"id":4466,"nodeType":"Block","src":"3258:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"3315:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4461,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"3279:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3279:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4465,"nodeType":"RevertStatement","src":"3272:49:23"}]}},{"expression":{"arguments":[{"id":4470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"3356:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3348:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4468,"name":"uint224","nodeType":"ElementaryTypeName","src":"3348:7:23","typeDescriptions":{}}},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4453,"id":4472,"nodeType":"Return","src":"3341:21:23"}]},"documentation":{"id":4447,"nodeType":"StructuredDocumentation","src":"2866:280:23","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4474,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3160:9:23","nodeType":"FunctionDefinition","parameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"value","nameLocation":"3178:5:23","nodeType":"VariableDeclaration","scope":4474,"src":"3170:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4448,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3169:15:23"},"returnParameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4474,"src":"3208:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4451,"name":"uint224","nodeType":"ElementaryTypeName","src":"3208:7:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3207:9:23"},"scope":6090,"src":"3151:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4501,"nodeType":"Block","src":"3726:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"3740:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3753:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4484,"name":"uint216","nodeType":"ElementaryTypeName","src":"3753:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4483,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3748:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3748:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3762:3:23","memberName":"max","nodeType":"MemberAccess","src":"3748:17:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3740:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4495,"nodeType":"IfStatement","src":"3736:105:23","trueBody":{"id":4494,"nodeType":"Block","src":"3767:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3819:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"3824:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4489,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"3788:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3788:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4493,"nodeType":"RevertStatement","src":"3781:49:23"}]}},{"expression":{"arguments":[{"id":4498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"3865:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3857:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4496,"name":"uint216","nodeType":"ElementaryTypeName","src":"3857:7:23","typeDescriptions":{}}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3857:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4481,"id":4500,"nodeType":"Return","src":"3850:21:23"}]},"documentation":{"id":4475,"nodeType":"StructuredDocumentation","src":"3375:280:23","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4502,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3669:9:23","nodeType":"FunctionDefinition","parameters":{"id":4478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4477,"mutability":"mutable","name":"value","nameLocation":"3687:5:23","nodeType":"VariableDeclaration","scope":4502,"src":"3679:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4476,"name":"uint256","nodeType":"ElementaryTypeName","src":"3679:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3678:15:23"},"returnParameters":{"id":4481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4502,"src":"3717:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4479,"name":"uint216","nodeType":"ElementaryTypeName","src":"3717:7:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3716:9:23"},"scope":6090,"src":"3660:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4529,"nodeType":"Block","src":"4235:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"4249:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4262:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4512,"name":"uint208","nodeType":"ElementaryTypeName","src":"4262:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4511,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4257:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4271:3:23","memberName":"max","nodeType":"MemberAccess","src":"4257:17:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4249:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4523,"nodeType":"IfStatement","src":"4245:105:23","trueBody":{"id":4522,"nodeType":"Block","src":"4276:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4328:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"4333:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4517,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"4297:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4521,"nodeType":"RevertStatement","src":"4290:49:23"}]}},{"expression":{"arguments":[{"id":4526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"4374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4524,"name":"uint208","nodeType":"ElementaryTypeName","src":"4366:7:23","typeDescriptions":{}}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4509,"id":4528,"nodeType":"Return","src":"4359:21:23"}]},"documentation":{"id":4503,"nodeType":"StructuredDocumentation","src":"3884:280:23","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4530,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4178:9:23","nodeType":"FunctionDefinition","parameters":{"id":4506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4505,"mutability":"mutable","name":"value","nameLocation":"4196:5:23","nodeType":"VariableDeclaration","scope":4530,"src":"4188:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"4188:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4187:15:23"},"returnParameters":{"id":4509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4530,"src":"4226:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4507,"name":"uint208","nodeType":"ElementaryTypeName","src":"4226:7:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4225:9:23"},"scope":6090,"src":"4169:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4557,"nodeType":"Block","src":"4744:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"4758:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4771:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4540,"name":"uint200","nodeType":"ElementaryTypeName","src":"4771:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4539,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4766:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4780:3:23","memberName":"max","nodeType":"MemberAccess","src":"4766:17:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4758:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4551,"nodeType":"IfStatement","src":"4754:105:23","trueBody":{"id":4550,"nodeType":"Block","src":"4785:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"4842:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4545,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"4806:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4549,"nodeType":"RevertStatement","src":"4799:49:23"}]}},{"expression":{"arguments":[{"id":4554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"4883:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4875:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4552,"name":"uint200","nodeType":"ElementaryTypeName","src":"4875:7:23","typeDescriptions":{}}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4875:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4537,"id":4556,"nodeType":"Return","src":"4868:21:23"}]},"documentation":{"id":4531,"nodeType":"StructuredDocumentation","src":"4393:280:23","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4558,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4687:9:23","nodeType":"FunctionDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"value","nameLocation":"4705:5:23","nodeType":"VariableDeclaration","scope":4558,"src":"4697:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4532,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4696:15:23"},"returnParameters":{"id":4537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4558,"src":"4735:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4535,"name":"uint200","nodeType":"ElementaryTypeName","src":"4735:7:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4734:9:23"},"scope":6090,"src":"4678:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4585,"nodeType":"Block","src":"5253:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"5267:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5280:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4568,"name":"uint192","nodeType":"ElementaryTypeName","src":"5280:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4567,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5275:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5289:3:23","memberName":"max","nodeType":"MemberAccess","src":"5275:17:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5267:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4579,"nodeType":"IfStatement","src":"5263:105:23","trueBody":{"id":4578,"nodeType":"Block","src":"5294:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5346:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"5351:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4573,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"5315:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4577,"nodeType":"RevertStatement","src":"5308:49:23"}]}},{"expression":{"arguments":[{"id":4582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"5392:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5384:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4580,"name":"uint192","nodeType":"ElementaryTypeName","src":"5384:7:23","typeDescriptions":{}}},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5384:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4565,"id":4584,"nodeType":"Return","src":"5377:21:23"}]},"documentation":{"id":4559,"nodeType":"StructuredDocumentation","src":"4902:280:23","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4586,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5196:9:23","nodeType":"FunctionDefinition","parameters":{"id":4562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4561,"mutability":"mutable","name":"value","nameLocation":"5214:5:23","nodeType":"VariableDeclaration","scope":4586,"src":"5206:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5205:15:23"},"returnParameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4586,"src":"5244:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4563,"name":"uint192","nodeType":"ElementaryTypeName","src":"5244:7:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5243:9:23"},"scope":6090,"src":"5187:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4613,"nodeType":"Block","src":"5762:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"5776:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5789:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4596,"name":"uint184","nodeType":"ElementaryTypeName","src":"5789:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4595,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5784:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5798:3:23","memberName":"max","nodeType":"MemberAccess","src":"5784:17:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5776:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4607,"nodeType":"IfStatement","src":"5772:105:23","trueBody":{"id":4606,"nodeType":"Block","src":"5803:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5855:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"5860:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4601,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"5824:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5824:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4605,"nodeType":"RevertStatement","src":"5817:49:23"}]}},{"expression":{"arguments":[{"id":4610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"5901:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5893:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4608,"name":"uint184","nodeType":"ElementaryTypeName","src":"5893:7:23","typeDescriptions":{}}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5893:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4593,"id":4612,"nodeType":"Return","src":"5886:21:23"}]},"documentation":{"id":4587,"nodeType":"StructuredDocumentation","src":"5411:280:23","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4614,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5705:9:23","nodeType":"FunctionDefinition","parameters":{"id":4590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4589,"mutability":"mutable","name":"value","nameLocation":"5723:5:23","nodeType":"VariableDeclaration","scope":4614,"src":"5715:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4588,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5714:15:23"},"returnParameters":{"id":4593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4614,"src":"5753:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4591,"name":"uint184","nodeType":"ElementaryTypeName","src":"5753:7:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5752:9:23"},"scope":6090,"src":"5696:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4641,"nodeType":"Block","src":"6271:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"6285:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6298:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4624,"name":"uint176","nodeType":"ElementaryTypeName","src":"6298:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4623,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6293:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6307:3:23","memberName":"max","nodeType":"MemberAccess","src":"6293:17:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6285:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4635,"nodeType":"IfStatement","src":"6281:105:23","trueBody":{"id":4634,"nodeType":"Block","src":"6312:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6364:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"6369:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4629,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"6333:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4633,"nodeType":"RevertStatement","src":"6326:49:23"}]}},{"expression":{"arguments":[{"id":4638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"6410:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6402:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4636,"name":"uint176","nodeType":"ElementaryTypeName","src":"6402:7:23","typeDescriptions":{}}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6402:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4621,"id":4640,"nodeType":"Return","src":"6395:21:23"}]},"documentation":{"id":4615,"nodeType":"StructuredDocumentation","src":"5920:280:23","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4642,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6214:9:23","nodeType":"FunctionDefinition","parameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4617,"mutability":"mutable","name":"value","nameLocation":"6232:5:23","nodeType":"VariableDeclaration","scope":4642,"src":"6224:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4616,"name":"uint256","nodeType":"ElementaryTypeName","src":"6224:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6223:15:23"},"returnParameters":{"id":4621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4642,"src":"6262:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4619,"name":"uint176","nodeType":"ElementaryTypeName","src":"6262:7:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6261:9:23"},"scope":6090,"src":"6205:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4669,"nodeType":"Block","src":"6780:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"6794:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6807:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4652,"name":"uint168","nodeType":"ElementaryTypeName","src":"6807:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4651,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6802:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6816:3:23","memberName":"max","nodeType":"MemberAccess","src":"6802:17:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6794:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4663,"nodeType":"IfStatement","src":"6790:105:23","trueBody":{"id":4662,"nodeType":"Block","src":"6821:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6873:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"6878:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4657,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"6842:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6842:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4661,"nodeType":"RevertStatement","src":"6835:49:23"}]}},{"expression":{"arguments":[{"id":4666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"6919:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4664,"name":"uint168","nodeType":"ElementaryTypeName","src":"6911:7:23","typeDescriptions":{}}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4649,"id":4668,"nodeType":"Return","src":"6904:21:23"}]},"documentation":{"id":4643,"nodeType":"StructuredDocumentation","src":"6429:280:23","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4670,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6723:9:23","nodeType":"FunctionDefinition","parameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"value","nameLocation":"6741:5:23","nodeType":"VariableDeclaration","scope":4670,"src":"6733:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"6733:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6732:15:23"},"returnParameters":{"id":4649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4670,"src":"6771:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4647,"name":"uint168","nodeType":"ElementaryTypeName","src":"6771:7:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6770:9:23"},"scope":6090,"src":"6714:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4697,"nodeType":"Block","src":"7289:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"7303:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7316:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4680,"name":"uint160","nodeType":"ElementaryTypeName","src":"7316:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4679,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7311:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7325:3:23","memberName":"max","nodeType":"MemberAccess","src":"7311:17:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7303:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4691,"nodeType":"IfStatement","src":"7299:105:23","trueBody":{"id":4690,"nodeType":"Block","src":"7330:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7382:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"7387:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4685,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"7351:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4689,"nodeType":"RevertStatement","src":"7344:49:23"}]}},{"expression":{"arguments":[{"id":4694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"7428:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7420:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4692,"name":"uint160","nodeType":"ElementaryTypeName","src":"7420:7:23","typeDescriptions":{}}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7420:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4677,"id":4696,"nodeType":"Return","src":"7413:21:23"}]},"documentation":{"id":4671,"nodeType":"StructuredDocumentation","src":"6938:280:23","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4698,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7232:9:23","nodeType":"FunctionDefinition","parameters":{"id":4674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4673,"mutability":"mutable","name":"value","nameLocation":"7250:5:23","nodeType":"VariableDeclaration","scope":4698,"src":"7242:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4672,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7241:15:23"},"returnParameters":{"id":4677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4698,"src":"7280:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4675,"name":"uint160","nodeType":"ElementaryTypeName","src":"7280:7:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7279:9:23"},"scope":6090,"src":"7223:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4725,"nodeType":"Block","src":"7798:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"7812:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7825:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4708,"name":"uint152","nodeType":"ElementaryTypeName","src":"7825:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4707,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7820:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7820:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7834:3:23","memberName":"max","nodeType":"MemberAccess","src":"7820:17:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7812:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4719,"nodeType":"IfStatement","src":"7808:105:23","trueBody":{"id":4718,"nodeType":"Block","src":"7839:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7891:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"7896:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4713,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"7860:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7860:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4717,"nodeType":"RevertStatement","src":"7853:49:23"}]}},{"expression":{"arguments":[{"id":4722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"7937:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7929:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4720,"name":"uint152","nodeType":"ElementaryTypeName","src":"7929:7:23","typeDescriptions":{}}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4705,"id":4724,"nodeType":"Return","src":"7922:21:23"}]},"documentation":{"id":4699,"nodeType":"StructuredDocumentation","src":"7447:280:23","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4726,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7741:9:23","nodeType":"FunctionDefinition","parameters":{"id":4702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4701,"mutability":"mutable","name":"value","nameLocation":"7759:5:23","nodeType":"VariableDeclaration","scope":4726,"src":"7751:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4700,"name":"uint256","nodeType":"ElementaryTypeName","src":"7751:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7750:15:23"},"returnParameters":{"id":4705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4726,"src":"7789:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4703,"name":"uint152","nodeType":"ElementaryTypeName","src":"7789:7:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7788:9:23"},"scope":6090,"src":"7732:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4753,"nodeType":"Block","src":"8307:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"8321:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8334:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4736,"name":"uint144","nodeType":"ElementaryTypeName","src":"8334:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4735,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8329:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8343:3:23","memberName":"max","nodeType":"MemberAccess","src":"8329:17:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8321:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4747,"nodeType":"IfStatement","src":"8317:105:23","trueBody":{"id":4746,"nodeType":"Block","src":"8348:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8400:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"8405:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4741,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"8369:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8369:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4745,"nodeType":"RevertStatement","src":"8362:49:23"}]}},{"expression":{"arguments":[{"id":4750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"8446:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8438:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4748,"name":"uint144","nodeType":"ElementaryTypeName","src":"8438:7:23","typeDescriptions":{}}},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8438:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4733,"id":4752,"nodeType":"Return","src":"8431:21:23"}]},"documentation":{"id":4727,"nodeType":"StructuredDocumentation","src":"7956:280:23","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4754,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8250:9:23","nodeType":"FunctionDefinition","parameters":{"id":4730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"value","nameLocation":"8268:5:23","nodeType":"VariableDeclaration","scope":4754,"src":"8260:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4728,"name":"uint256","nodeType":"ElementaryTypeName","src":"8260:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8259:15:23"},"returnParameters":{"id":4733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4754,"src":"8298:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4731,"name":"uint144","nodeType":"ElementaryTypeName","src":"8298:7:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8297:9:23"},"scope":6090,"src":"8241:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4781,"nodeType":"Block","src":"8816:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"8830:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8843:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4764,"name":"uint136","nodeType":"ElementaryTypeName","src":"8843:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4763,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8838:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8852:3:23","memberName":"max","nodeType":"MemberAccess","src":"8838:17:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8830:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4775,"nodeType":"IfStatement","src":"8826:105:23","trueBody":{"id":4774,"nodeType":"Block","src":"8857:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8909:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"8914:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4769,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"8878:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8878:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4773,"nodeType":"RevertStatement","src":"8871:49:23"}]}},{"expression":{"arguments":[{"id":4778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"8955:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8947:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4776,"name":"uint136","nodeType":"ElementaryTypeName","src":"8947:7:23","typeDescriptions":{}}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4761,"id":4780,"nodeType":"Return","src":"8940:21:23"}]},"documentation":{"id":4755,"nodeType":"StructuredDocumentation","src":"8465:280:23","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4782,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8759:9:23","nodeType":"FunctionDefinition","parameters":{"id":4758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4757,"mutability":"mutable","name":"value","nameLocation":"8777:5:23","nodeType":"VariableDeclaration","scope":4782,"src":"8769:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4756,"name":"uint256","nodeType":"ElementaryTypeName","src":"8769:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8768:15:23"},"returnParameters":{"id":4761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4782,"src":"8807:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4759,"name":"uint136","nodeType":"ElementaryTypeName","src":"8807:7:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8806:9:23"},"scope":6090,"src":"8750:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4809,"nodeType":"Block","src":"9325:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"9339:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9352:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4792,"name":"uint128","nodeType":"ElementaryTypeName","src":"9352:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4791,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9347:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9347:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9361:3:23","memberName":"max","nodeType":"MemberAccess","src":"9347:17:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9339:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4803,"nodeType":"IfStatement","src":"9335:105:23","trueBody":{"id":4802,"nodeType":"Block","src":"9366:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9418:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"9423:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4797,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"9387:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9387:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4801,"nodeType":"RevertStatement","src":"9380:49:23"}]}},{"expression":{"arguments":[{"id":4806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"9464:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4804,"name":"uint128","nodeType":"ElementaryTypeName","src":"9456:7:23","typeDescriptions":{}}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4789,"id":4808,"nodeType":"Return","src":"9449:21:23"}]},"documentation":{"id":4783,"nodeType":"StructuredDocumentation","src":"8974:280:23","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4810,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9268:9:23","nodeType":"FunctionDefinition","parameters":{"id":4786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4785,"mutability":"mutable","name":"value","nameLocation":"9286:5:23","nodeType":"VariableDeclaration","scope":4810,"src":"9278:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"9278:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9277:15:23"},"returnParameters":{"id":4789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4810,"src":"9316:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4787,"name":"uint128","nodeType":"ElementaryTypeName","src":"9316:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9315:9:23"},"scope":6090,"src":"9259:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4837,"nodeType":"Block","src":"9834:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"9848:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9861:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4820,"name":"uint120","nodeType":"ElementaryTypeName","src":"9861:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4819,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9856:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9870:3:23","memberName":"max","nodeType":"MemberAccess","src":"9856:17:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9848:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4831,"nodeType":"IfStatement","src":"9844:105:23","trueBody":{"id":4830,"nodeType":"Block","src":"9875:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9927:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"9932:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4825,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"9896:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9896:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4829,"nodeType":"RevertStatement","src":"9889:49:23"}]}},{"expression":{"arguments":[{"id":4834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"9973:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9965:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4832,"name":"uint120","nodeType":"ElementaryTypeName","src":"9965:7:23","typeDescriptions":{}}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9965:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4817,"id":4836,"nodeType":"Return","src":"9958:21:23"}]},"documentation":{"id":4811,"nodeType":"StructuredDocumentation","src":"9483:280:23","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4838,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9777:9:23","nodeType":"FunctionDefinition","parameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"value","nameLocation":"9795:5:23","nodeType":"VariableDeclaration","scope":4838,"src":"9787:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4812,"name":"uint256","nodeType":"ElementaryTypeName","src":"9787:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9786:15:23"},"returnParameters":{"id":4817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4838,"src":"9825:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4815,"name":"uint120","nodeType":"ElementaryTypeName","src":"9825:7:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9824:9:23"},"scope":6090,"src":"9768:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4865,"nodeType":"Block","src":"10343:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"10357:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10370:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4848,"name":"uint112","nodeType":"ElementaryTypeName","src":"10370:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4847,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10365:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10365:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10379:3:23","memberName":"max","nodeType":"MemberAccess","src":"10365:17:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10357:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4859,"nodeType":"IfStatement","src":"10353:105:23","trueBody":{"id":4858,"nodeType":"Block","src":"10384:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10436:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"10441:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4853,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"10405:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10405:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4857,"nodeType":"RevertStatement","src":"10398:49:23"}]}},{"expression":{"arguments":[{"id":4862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"10482:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4860,"name":"uint112","nodeType":"ElementaryTypeName","src":"10474:7:23","typeDescriptions":{}}},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10474:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4845,"id":4864,"nodeType":"Return","src":"10467:21:23"}]},"documentation":{"id":4839,"nodeType":"StructuredDocumentation","src":"9992:280:23","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4866,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10286:9:23","nodeType":"FunctionDefinition","parameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"value","nameLocation":"10304:5:23","nodeType":"VariableDeclaration","scope":4866,"src":"10296:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4840,"name":"uint256","nodeType":"ElementaryTypeName","src":"10296:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10295:15:23"},"returnParameters":{"id":4845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4866,"src":"10334:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4843,"name":"uint112","nodeType":"ElementaryTypeName","src":"10334:7:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10333:9:23"},"scope":6090,"src":"10277:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4893,"nodeType":"Block","src":"10852:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"10866:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10879:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4876,"name":"uint104","nodeType":"ElementaryTypeName","src":"10879:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4875,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10874:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10888:3:23","memberName":"max","nodeType":"MemberAccess","src":"10874:17:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10866:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4887,"nodeType":"IfStatement","src":"10862:105:23","trueBody":{"id":4886,"nodeType":"Block","src":"10893:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10945:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"10950:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4881,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"10914:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10914:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4885,"nodeType":"RevertStatement","src":"10907:49:23"}]}},{"expression":{"arguments":[{"id":4890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"10991:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10983:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4888,"name":"uint104","nodeType":"ElementaryTypeName","src":"10983:7:23","typeDescriptions":{}}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10983:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4873,"id":4892,"nodeType":"Return","src":"10976:21:23"}]},"documentation":{"id":4867,"nodeType":"StructuredDocumentation","src":"10501:280:23","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4894,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10795:9:23","nodeType":"FunctionDefinition","parameters":{"id":4870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"value","nameLocation":"10813:5:23","nodeType":"VariableDeclaration","scope":4894,"src":"10805:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4868,"name":"uint256","nodeType":"ElementaryTypeName","src":"10805:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10804:15:23"},"returnParameters":{"id":4873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4894,"src":"10843:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4871,"name":"uint104","nodeType":"ElementaryTypeName","src":"10843:7:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10842:9:23"},"scope":6090,"src":"10786:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4921,"nodeType":"Block","src":"11355:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"11369:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11382:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4904,"name":"uint96","nodeType":"ElementaryTypeName","src":"11382:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4903,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11377:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11377:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11390:3:23","memberName":"max","nodeType":"MemberAccess","src":"11377:16:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11369:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4915,"nodeType":"IfStatement","src":"11365:103:23","trueBody":{"id":4914,"nodeType":"Block","src":"11395:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"11451:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4909,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"11416:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11416:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4913,"nodeType":"RevertStatement","src":"11409:48:23"}]}},{"expression":{"arguments":[{"id":4918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"11491:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11484:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4916,"name":"uint96","nodeType":"ElementaryTypeName","src":"11484:6:23","typeDescriptions":{}}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11484:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4901,"id":4920,"nodeType":"Return","src":"11477:20:23"}]},"documentation":{"id":4895,"nodeType":"StructuredDocumentation","src":"11010:276:23","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4922,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11300:8:23","nodeType":"FunctionDefinition","parameters":{"id":4898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4897,"mutability":"mutable","name":"value","nameLocation":"11317:5:23","nodeType":"VariableDeclaration","scope":4922,"src":"11309:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4896,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:15:23"},"returnParameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4922,"src":"11347:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4899,"name":"uint96","nodeType":"ElementaryTypeName","src":"11347:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11346:8:23"},"scope":6090,"src":"11291:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4949,"nodeType":"Block","src":"11855:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"11869:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11882:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4932,"name":"uint88","nodeType":"ElementaryTypeName","src":"11882:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4931,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11877:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11877:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11890:3:23","memberName":"max","nodeType":"MemberAccess","src":"11877:16:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11869:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4943,"nodeType":"IfStatement","src":"11865:103:23","trueBody":{"id":4942,"nodeType":"Block","src":"11895:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11947:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"11951:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4937,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"11916:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4941,"nodeType":"RevertStatement","src":"11909:48:23"}]}},{"expression":{"arguments":[{"id":4946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"11991:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11984:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4944,"name":"uint88","nodeType":"ElementaryTypeName","src":"11984:6:23","typeDescriptions":{}}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11984:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4929,"id":4948,"nodeType":"Return","src":"11977:20:23"}]},"documentation":{"id":4923,"nodeType":"StructuredDocumentation","src":"11510:276:23","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4950,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11800:8:23","nodeType":"FunctionDefinition","parameters":{"id":4926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4925,"mutability":"mutable","name":"value","nameLocation":"11817:5:23","nodeType":"VariableDeclaration","scope":4950,"src":"11809:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"11809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11808:15:23"},"returnParameters":{"id":4929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4950,"src":"11847:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4927,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11846:8:23"},"scope":6090,"src":"11791:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4977,"nodeType":"Block","src":"12355:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"12369:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4960,"name":"uint80","nodeType":"ElementaryTypeName","src":"12382:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4959,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12377:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12390:3:23","memberName":"max","nodeType":"MemberAccess","src":"12377:16:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12369:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4971,"nodeType":"IfStatement","src":"12365:103:23","trueBody":{"id":4970,"nodeType":"Block","src":"12395:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12447:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"12451:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4965,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"12416:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12416:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4969,"nodeType":"RevertStatement","src":"12409:48:23"}]}},{"expression":{"arguments":[{"id":4974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"12491:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12484:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4972,"name":"uint80","nodeType":"ElementaryTypeName","src":"12484:6:23","typeDescriptions":{}}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12484:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4957,"id":4976,"nodeType":"Return","src":"12477:20:23"}]},"documentation":{"id":4951,"nodeType":"StructuredDocumentation","src":"12010:276:23","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4978,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12300:8:23","nodeType":"FunctionDefinition","parameters":{"id":4954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4953,"mutability":"mutable","name":"value","nameLocation":"12317:5:23","nodeType":"VariableDeclaration","scope":4978,"src":"12309:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4952,"name":"uint256","nodeType":"ElementaryTypeName","src":"12309:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12308:15:23"},"returnParameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4978,"src":"12347:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4955,"name":"uint80","nodeType":"ElementaryTypeName","src":"12347:6:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12346:8:23"},"scope":6090,"src":"12291:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5005,"nodeType":"Block","src":"12855:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"12869:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12882:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4988,"name":"uint72","nodeType":"ElementaryTypeName","src":"12882:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4987,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12877:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12877:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12890:3:23","memberName":"max","nodeType":"MemberAccess","src":"12877:16:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12869:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4999,"nodeType":"IfStatement","src":"12865:103:23","trueBody":{"id":4998,"nodeType":"Block","src":"12895:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12947:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"12951:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4993,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"12916:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12916:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4997,"nodeType":"RevertStatement","src":"12909:48:23"}]}},{"expression":{"arguments":[{"id":5002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"12991:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12984:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5000,"name":"uint72","nodeType":"ElementaryTypeName","src":"12984:6:23","typeDescriptions":{}}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12984:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4985,"id":5004,"nodeType":"Return","src":"12977:20:23"}]},"documentation":{"id":4979,"nodeType":"StructuredDocumentation","src":"12510:276:23","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5006,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12800:8:23","nodeType":"FunctionDefinition","parameters":{"id":4982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4981,"mutability":"mutable","name":"value","nameLocation":"12817:5:23","nodeType":"VariableDeclaration","scope":5006,"src":"12809:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4980,"name":"uint256","nodeType":"ElementaryTypeName","src":"12809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12808:15:23"},"returnParameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5006,"src":"12847:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4983,"name":"uint72","nodeType":"ElementaryTypeName","src":"12847:6:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12846:8:23"},"scope":6090,"src":"12791:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5033,"nodeType":"Block","src":"13355:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"13369:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13382:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5016,"name":"uint64","nodeType":"ElementaryTypeName","src":"13382:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5015,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13377:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13390:3:23","memberName":"max","nodeType":"MemberAccess","src":"13377:16:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13369:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5027,"nodeType":"IfStatement","src":"13365:103:23","trueBody":{"id":5026,"nodeType":"Block","src":"13395:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13447:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"13451:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5021,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"13416:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5025,"nodeType":"RevertStatement","src":"13409:48:23"}]}},{"expression":{"arguments":[{"id":5030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"13491:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13484:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5028,"name":"uint64","nodeType":"ElementaryTypeName","src":"13484:6:23","typeDescriptions":{}}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13484:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5013,"id":5032,"nodeType":"Return","src":"13477:20:23"}]},"documentation":{"id":5007,"nodeType":"StructuredDocumentation","src":"13010:276:23","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5034,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13300:8:23","nodeType":"FunctionDefinition","parameters":{"id":5010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5009,"mutability":"mutable","name":"value","nameLocation":"13317:5:23","nodeType":"VariableDeclaration","scope":5034,"src":"13309:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5008,"name":"uint256","nodeType":"ElementaryTypeName","src":"13309:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13308:15:23"},"returnParameters":{"id":5013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5034,"src":"13347:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5011,"name":"uint64","nodeType":"ElementaryTypeName","src":"13347:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13346:8:23"},"scope":6090,"src":"13291:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5061,"nodeType":"Block","src":"13855:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"13869:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13882:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5044,"name":"uint56","nodeType":"ElementaryTypeName","src":"13882:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5043,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13877:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13877:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13890:3:23","memberName":"max","nodeType":"MemberAccess","src":"13877:16:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13869:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5055,"nodeType":"IfStatement","src":"13865:103:23","trueBody":{"id":5054,"nodeType":"Block","src":"13895:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13947:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"13951:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5049,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"13916:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13916:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5053,"nodeType":"RevertStatement","src":"13909:48:23"}]}},{"expression":{"arguments":[{"id":5058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"13991:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13984:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5056,"name":"uint56","nodeType":"ElementaryTypeName","src":"13984:6:23","typeDescriptions":{}}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13984:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5041,"id":5060,"nodeType":"Return","src":"13977:20:23"}]},"documentation":{"id":5035,"nodeType":"StructuredDocumentation","src":"13510:276:23","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5062,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13800:8:23","nodeType":"FunctionDefinition","parameters":{"id":5038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5037,"mutability":"mutable","name":"value","nameLocation":"13817:5:23","nodeType":"VariableDeclaration","scope":5062,"src":"13809:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5036,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13808:15:23"},"returnParameters":{"id":5041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5062,"src":"13847:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5039,"name":"uint56","nodeType":"ElementaryTypeName","src":"13847:6:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13846:8:23"},"scope":6090,"src":"13791:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5089,"nodeType":"Block","src":"14355:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"14369:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14382:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5072,"name":"uint48","nodeType":"ElementaryTypeName","src":"14382:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5071,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14377:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14377:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14390:3:23","memberName":"max","nodeType":"MemberAccess","src":"14377:16:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14369:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5083,"nodeType":"IfStatement","src":"14365:103:23","trueBody":{"id":5082,"nodeType":"Block","src":"14395:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14447:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"14451:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5077,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"14416:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14416:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5081,"nodeType":"RevertStatement","src":"14409:48:23"}]}},{"expression":{"arguments":[{"id":5086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"14491:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14484:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5084,"name":"uint48","nodeType":"ElementaryTypeName","src":"14484:6:23","typeDescriptions":{}}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5069,"id":5088,"nodeType":"Return","src":"14477:20:23"}]},"documentation":{"id":5063,"nodeType":"StructuredDocumentation","src":"14010:276:23","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5090,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14300:8:23","nodeType":"FunctionDefinition","parameters":{"id":5066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5065,"mutability":"mutable","name":"value","nameLocation":"14317:5:23","nodeType":"VariableDeclaration","scope":5090,"src":"14309:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5064,"name":"uint256","nodeType":"ElementaryTypeName","src":"14309:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14308:15:23"},"returnParameters":{"id":5069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5090,"src":"14347:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5067,"name":"uint48","nodeType":"ElementaryTypeName","src":"14347:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14346:8:23"},"scope":6090,"src":"14291:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5117,"nodeType":"Block","src":"14855:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"14869:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14882:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5100,"name":"uint40","nodeType":"ElementaryTypeName","src":"14882:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5099,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14877:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14877:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14890:3:23","memberName":"max","nodeType":"MemberAccess","src":"14877:16:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14869:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5111,"nodeType":"IfStatement","src":"14865:103:23","trueBody":{"id":5110,"nodeType":"Block","src":"14895:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14947:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"14951:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5105,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"14916:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14916:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5109,"nodeType":"RevertStatement","src":"14909:48:23"}]}},{"expression":{"arguments":[{"id":5114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"14991:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14984:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5112,"name":"uint40","nodeType":"ElementaryTypeName","src":"14984:6:23","typeDescriptions":{}}},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14984:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5097,"id":5116,"nodeType":"Return","src":"14977:20:23"}]},"documentation":{"id":5091,"nodeType":"StructuredDocumentation","src":"14510:276:23","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5118,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14800:8:23","nodeType":"FunctionDefinition","parameters":{"id":5094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5093,"mutability":"mutable","name":"value","nameLocation":"14817:5:23","nodeType":"VariableDeclaration","scope":5118,"src":"14809:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5092,"name":"uint256","nodeType":"ElementaryTypeName","src":"14809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14808:15:23"},"returnParameters":{"id":5097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5118,"src":"14847:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5095,"name":"uint40","nodeType":"ElementaryTypeName","src":"14847:6:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14846:8:23"},"scope":6090,"src":"14791:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5145,"nodeType":"Block","src":"15355:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"15369:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15382:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5128,"name":"uint32","nodeType":"ElementaryTypeName","src":"15382:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5127,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15377:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15377:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15390:3:23","memberName":"max","nodeType":"MemberAccess","src":"15377:16:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15369:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5139,"nodeType":"IfStatement","src":"15365:103:23","trueBody":{"id":5138,"nodeType":"Block","src":"15395:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15447:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"15451:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5133,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"15416:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15416:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5137,"nodeType":"RevertStatement","src":"15409:48:23"}]}},{"expression":{"arguments":[{"id":5142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"15491:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15484:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5140,"name":"uint32","nodeType":"ElementaryTypeName","src":"15484:6:23","typeDescriptions":{}}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5125,"id":5144,"nodeType":"Return","src":"15477:20:23"}]},"documentation":{"id":5119,"nodeType":"StructuredDocumentation","src":"15010:276:23","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5146,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15300:8:23","nodeType":"FunctionDefinition","parameters":{"id":5122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5121,"mutability":"mutable","name":"value","nameLocation":"15317:5:23","nodeType":"VariableDeclaration","scope":5146,"src":"15309:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5120,"name":"uint256","nodeType":"ElementaryTypeName","src":"15309:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15308:15:23"},"returnParameters":{"id":5125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5146,"src":"15347:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5123,"name":"uint32","nodeType":"ElementaryTypeName","src":"15347:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15346:8:23"},"scope":6090,"src":"15291:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5173,"nodeType":"Block","src":"15855:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"15869:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15882:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5156,"name":"uint24","nodeType":"ElementaryTypeName","src":"15882:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5155,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15877:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15877:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15890:3:23","memberName":"max","nodeType":"MemberAccess","src":"15877:16:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15869:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5167,"nodeType":"IfStatement","src":"15865:103:23","trueBody":{"id":5166,"nodeType":"Block","src":"15895:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15947:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"15951:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5161,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"15916:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15916:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5165,"nodeType":"RevertStatement","src":"15909:48:23"}]}},{"expression":{"arguments":[{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"15991:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15984:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5168,"name":"uint24","nodeType":"ElementaryTypeName","src":"15984:6:23","typeDescriptions":{}}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5153,"id":5172,"nodeType":"Return","src":"15977:20:23"}]},"documentation":{"id":5147,"nodeType":"StructuredDocumentation","src":"15510:276:23","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5174,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15800:8:23","nodeType":"FunctionDefinition","parameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"mutability":"mutable","name":"value","nameLocation":"15817:5:23","nodeType":"VariableDeclaration","scope":5174,"src":"15809:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"15809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15808:15:23"},"returnParameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5174,"src":"15847:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5151,"name":"uint24","nodeType":"ElementaryTypeName","src":"15847:6:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15846:8:23"},"scope":6090,"src":"15791:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5201,"nodeType":"Block","src":"16355:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"16369:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16382:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5184,"name":"uint16","nodeType":"ElementaryTypeName","src":"16382:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5183,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16377:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16377:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16390:3:23","memberName":"max","nodeType":"MemberAccess","src":"16377:16:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16369:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5195,"nodeType":"IfStatement","src":"16365:103:23","trueBody":{"id":5194,"nodeType":"Block","src":"16395:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16447:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"16451:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5189,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"16416:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16416:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5193,"nodeType":"RevertStatement","src":"16409:48:23"}]}},{"expression":{"arguments":[{"id":5198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"16491:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16484:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5196,"name":"uint16","nodeType":"ElementaryTypeName","src":"16484:6:23","typeDescriptions":{}}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16484:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5181,"id":5200,"nodeType":"Return","src":"16477:20:23"}]},"documentation":{"id":5175,"nodeType":"StructuredDocumentation","src":"16010:276:23","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5202,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16300:8:23","nodeType":"FunctionDefinition","parameters":{"id":5178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5177,"mutability":"mutable","name":"value","nameLocation":"16317:5:23","nodeType":"VariableDeclaration","scope":5202,"src":"16309:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5176,"name":"uint256","nodeType":"ElementaryTypeName","src":"16309:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16308:15:23"},"returnParameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5202,"src":"16347:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5179,"name":"uint16","nodeType":"ElementaryTypeName","src":"16347:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16346:8:23"},"scope":6090,"src":"16291:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5229,"nodeType":"Block","src":"16849:146:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"16863:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16876:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5212,"name":"uint8","nodeType":"ElementaryTypeName","src":"16876:5:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5211,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16871:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16871:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16883:3:23","memberName":"max","nodeType":"MemberAccess","src":"16871:15:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16863:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5223,"nodeType":"IfStatement","src":"16859:101:23","trueBody":{"id":5222,"nodeType":"Block","src":"16888:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16940:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"16943:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5217,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"16909:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16909:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5221,"nodeType":"RevertStatement","src":"16902:47:23"}]}},{"expression":{"arguments":[{"id":5226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"16982:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16976:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5224,"name":"uint8","nodeType":"ElementaryTypeName","src":"16976:5:23","typeDescriptions":{}}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16976:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5209,"id":5228,"nodeType":"Return","src":"16969:19:23"}]},"documentation":{"id":5203,"nodeType":"StructuredDocumentation","src":"16510:272:23","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5230,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16796:7:23","nodeType":"FunctionDefinition","parameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"value","nameLocation":"16812:5:23","nodeType":"VariableDeclaration","scope":5230,"src":"16804:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"16804:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16803:15:23"},"returnParameters":{"id":5209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5230,"src":"16842:5:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5207,"name":"uint8","nodeType":"ElementaryTypeName","src":"16842:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16841:7:23"},"scope":6090,"src":"16787:208:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5252,"nodeType":"Block","src":"17231:128:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"17245:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17253:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17245:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5246,"nodeType":"IfStatement","src":"17241:81:23","trueBody":{"id":5245,"nodeType":"Block","src":"17256:66:23","statements":[{"errorCall":{"arguments":[{"id":5242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"17305:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5241,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"17277:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17277:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5244,"nodeType":"RevertStatement","src":"17270:41:23"}]}},{"expression":{"arguments":[{"id":5249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"17346:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17338:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"17338:7:23","typeDescriptions":{}}},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17338:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5237,"id":5251,"nodeType":"Return","src":"17331:21:23"}]},"documentation":{"id":5231,"nodeType":"StructuredDocumentation","src":"17001:160:23","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5253,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17175:9:23","nodeType":"FunctionDefinition","parameters":{"id":5234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5233,"mutability":"mutable","name":"value","nameLocation":"17192:5:23","nodeType":"VariableDeclaration","scope":5253,"src":"17185:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5232,"name":"int256","nodeType":"ElementaryTypeName","src":"17185:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17184:14:23"},"returnParameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5253,"src":"17222:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5235,"name":"uint256","nodeType":"ElementaryTypeName","src":"17222:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17221:9:23"},"scope":6090,"src":"17166:193:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5278,"nodeType":"Block","src":"17756:150:23","statements":[{"expression":{"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"17766:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"17786:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17779:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5262,"name":"int248","nodeType":"ElementaryTypeName","src":"17779:6:23","typeDescriptions":{}}},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17779:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17766:26:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5267,"nodeType":"ExpressionStatement","src":"17766:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"17806:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"17820:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17806:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5277,"nodeType":"IfStatement","src":"17802:98:23","trueBody":{"id":5276,"nodeType":"Block","src":"17827:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17878:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"17883:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5271,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"17848:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17848:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5275,"nodeType":"RevertStatement","src":"17841:48:23"}]}}]},"documentation":{"id":5254,"nodeType":"StructuredDocumentation","src":"17365:312:23","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5279,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17691:8:23","nodeType":"FunctionDefinition","parameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"value","nameLocation":"17707:5:23","nodeType":"VariableDeclaration","scope":5279,"src":"17700:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5255,"name":"int256","nodeType":"ElementaryTypeName","src":"17700:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17699:14:23"},"returnParameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"downcasted","nameLocation":"17744:10:23","nodeType":"VariableDeclaration","scope":5279,"src":"17737:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5258,"name":"int248","nodeType":"ElementaryTypeName","src":"17737:6:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17736:19:23"},"scope":6090,"src":"17682:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5304,"nodeType":"Block","src":"18303:150:23","statements":[{"expression":{"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"18313:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"18333:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18326:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5288,"name":"int240","nodeType":"ElementaryTypeName","src":"18326:6:23","typeDescriptions":{}}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18326:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18313:26:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5293,"nodeType":"ExpressionStatement","src":"18313:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"18353:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"18367:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18353:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5303,"nodeType":"IfStatement","src":"18349:98:23","trueBody":{"id":5302,"nodeType":"Block","src":"18374:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18425:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"18430:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5297,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"18395:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5301,"nodeType":"RevertStatement","src":"18388:48:23"}]}}]},"documentation":{"id":5280,"nodeType":"StructuredDocumentation","src":"17912:312:23","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18238:8:23","nodeType":"FunctionDefinition","parameters":{"id":5283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5282,"mutability":"mutable","name":"value","nameLocation":"18254:5:23","nodeType":"VariableDeclaration","scope":5305,"src":"18247:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5281,"name":"int256","nodeType":"ElementaryTypeName","src":"18247:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18246:14:23"},"returnParameters":{"id":5286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5285,"mutability":"mutable","name":"downcasted","nameLocation":"18291:10:23","nodeType":"VariableDeclaration","scope":5305,"src":"18284:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5284,"name":"int240","nodeType":"ElementaryTypeName","src":"18284:6:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18283:19:23"},"scope":6090,"src":"18229:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5330,"nodeType":"Block","src":"18850:150:23","statements":[{"expression":{"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"18860:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"18880:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18873:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5314,"name":"int232","nodeType":"ElementaryTypeName","src":"18873:6:23","typeDescriptions":{}}},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18873:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18860:26:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5319,"nodeType":"ExpressionStatement","src":"18860:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"18900:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"18914:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18900:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5329,"nodeType":"IfStatement","src":"18896:98:23","trueBody":{"id":5328,"nodeType":"Block","src":"18921:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18972:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"18977:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5323,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"18942:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18942:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5327,"nodeType":"RevertStatement","src":"18935:48:23"}]}}]},"documentation":{"id":5306,"nodeType":"StructuredDocumentation","src":"18459:312:23","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5331,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18785:8:23","nodeType":"FunctionDefinition","parameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"value","nameLocation":"18801:5:23","nodeType":"VariableDeclaration","scope":5331,"src":"18794:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5307,"name":"int256","nodeType":"ElementaryTypeName","src":"18794:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18793:14:23"},"returnParameters":{"id":5312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5311,"mutability":"mutable","name":"downcasted","nameLocation":"18838:10:23","nodeType":"VariableDeclaration","scope":5331,"src":"18831:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5310,"name":"int232","nodeType":"ElementaryTypeName","src":"18831:6:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18830:19:23"},"scope":6090,"src":"18776:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5356,"nodeType":"Block","src":"19397:150:23","statements":[{"expression":{"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"19407:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"19427:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19420:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5340,"name":"int224","nodeType":"ElementaryTypeName","src":"19420:6:23","typeDescriptions":{}}},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19420:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19407:26:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5345,"nodeType":"ExpressionStatement","src":"19407:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"19447:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"19461:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19447:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5355,"nodeType":"IfStatement","src":"19443:98:23","trueBody":{"id":5354,"nodeType":"Block","src":"19468:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19519:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"19524:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5349,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"19489:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19489:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5353,"nodeType":"RevertStatement","src":"19482:48:23"}]}}]},"documentation":{"id":5332,"nodeType":"StructuredDocumentation","src":"19006:312:23","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19332:8:23","nodeType":"FunctionDefinition","parameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"value","nameLocation":"19348:5:23","nodeType":"VariableDeclaration","scope":5357,"src":"19341:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5333,"name":"int256","nodeType":"ElementaryTypeName","src":"19341:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19340:14:23"},"returnParameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"downcasted","nameLocation":"19385:10:23","nodeType":"VariableDeclaration","scope":5357,"src":"19378:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5336,"name":"int224","nodeType":"ElementaryTypeName","src":"19378:6:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19377:19:23"},"scope":6090,"src":"19323:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5382,"nodeType":"Block","src":"19944:150:23","statements":[{"expression":{"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"19954:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"19974:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19967:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5366,"name":"int216","nodeType":"ElementaryTypeName","src":"19967:6:23","typeDescriptions":{}}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19967:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19954:26:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5371,"nodeType":"ExpressionStatement","src":"19954:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"19994:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"20008:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19994:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5381,"nodeType":"IfStatement","src":"19990:98:23","trueBody":{"id":5380,"nodeType":"Block","src":"20015:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20066:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"20071:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"20036:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20036:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5379,"nodeType":"RevertStatement","src":"20029:48:23"}]}}]},"documentation":{"id":5358,"nodeType":"StructuredDocumentation","src":"19553:312:23","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19879:8:23","nodeType":"FunctionDefinition","parameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"value","nameLocation":"19895:5:23","nodeType":"VariableDeclaration","scope":5383,"src":"19888:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5359,"name":"int256","nodeType":"ElementaryTypeName","src":"19888:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19887:14:23"},"returnParameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5363,"mutability":"mutable","name":"downcasted","nameLocation":"19932:10:23","nodeType":"VariableDeclaration","scope":5383,"src":"19925:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5362,"name":"int216","nodeType":"ElementaryTypeName","src":"19925:6:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19924:19:23"},"scope":6090,"src":"19870:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5408,"nodeType":"Block","src":"20491:150:23","statements":[{"expression":{"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"20501:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"20521:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20514:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5392,"name":"int208","nodeType":"ElementaryTypeName","src":"20514:6:23","typeDescriptions":{}}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20514:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20501:26:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5397,"nodeType":"ExpressionStatement","src":"20501:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"20541:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"20555:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20541:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5407,"nodeType":"IfStatement","src":"20537:98:23","trueBody":{"id":5406,"nodeType":"Block","src":"20562:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20613:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"20618:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5401,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"20583:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20583:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5405,"nodeType":"RevertStatement","src":"20576:48:23"}]}}]},"documentation":{"id":5384,"nodeType":"StructuredDocumentation","src":"20100:312:23","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5409,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20426:8:23","nodeType":"FunctionDefinition","parameters":{"id":5387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"mutability":"mutable","name":"value","nameLocation":"20442:5:23","nodeType":"VariableDeclaration","scope":5409,"src":"20435:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5385,"name":"int256","nodeType":"ElementaryTypeName","src":"20435:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20434:14:23"},"returnParameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"downcasted","nameLocation":"20479:10:23","nodeType":"VariableDeclaration","scope":5409,"src":"20472:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5388,"name":"int208","nodeType":"ElementaryTypeName","src":"20472:6:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20471:19:23"},"scope":6090,"src":"20417:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5434,"nodeType":"Block","src":"21038:150:23","statements":[{"expression":{"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"21048:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"21068:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21061:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5418,"name":"int200","nodeType":"ElementaryTypeName","src":"21061:6:23","typeDescriptions":{}}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21061:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21048:26:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5423,"nodeType":"ExpressionStatement","src":"21048:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"21088:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"21102:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21088:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5433,"nodeType":"IfStatement","src":"21084:98:23","trueBody":{"id":5432,"nodeType":"Block","src":"21109:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21160:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"21165:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5427,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"21130:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21130:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5431,"nodeType":"RevertStatement","src":"21123:48:23"}]}}]},"documentation":{"id":5410,"nodeType":"StructuredDocumentation","src":"20647:312:23","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20973:8:23","nodeType":"FunctionDefinition","parameters":{"id":5413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5412,"mutability":"mutable","name":"value","nameLocation":"20989:5:23","nodeType":"VariableDeclaration","scope":5435,"src":"20982:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5411,"name":"int256","nodeType":"ElementaryTypeName","src":"20982:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20981:14:23"},"returnParameters":{"id":5416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5415,"mutability":"mutable","name":"downcasted","nameLocation":"21026:10:23","nodeType":"VariableDeclaration","scope":5435,"src":"21019:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5414,"name":"int200","nodeType":"ElementaryTypeName","src":"21019:6:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21018:19:23"},"scope":6090,"src":"20964:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5460,"nodeType":"Block","src":"21585:150:23","statements":[{"expression":{"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"21595:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"21615:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21608:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5444,"name":"int192","nodeType":"ElementaryTypeName","src":"21608:6:23","typeDescriptions":{}}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21608:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21595:26:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5449,"nodeType":"ExpressionStatement","src":"21595:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"21635:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"21649:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21635:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5459,"nodeType":"IfStatement","src":"21631:98:23","trueBody":{"id":5458,"nodeType":"Block","src":"21656:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21707:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"21712:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5453,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"21677:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21677:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5457,"nodeType":"RevertStatement","src":"21670:48:23"}]}}]},"documentation":{"id":5436,"nodeType":"StructuredDocumentation","src":"21194:312:23","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5461,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21520:8:23","nodeType":"FunctionDefinition","parameters":{"id":5439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5438,"mutability":"mutable","name":"value","nameLocation":"21536:5:23","nodeType":"VariableDeclaration","scope":5461,"src":"21529:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5437,"name":"int256","nodeType":"ElementaryTypeName","src":"21529:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21528:14:23"},"returnParameters":{"id":5442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"downcasted","nameLocation":"21573:10:23","nodeType":"VariableDeclaration","scope":5461,"src":"21566:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5440,"name":"int192","nodeType":"ElementaryTypeName","src":"21566:6:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21565:19:23"},"scope":6090,"src":"21511:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5486,"nodeType":"Block","src":"22132:150:23","statements":[{"expression":{"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"22142:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"22162:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22155:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5470,"name":"int184","nodeType":"ElementaryTypeName","src":"22155:6:23","typeDescriptions":{}}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22155:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22142:26:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5475,"nodeType":"ExpressionStatement","src":"22142:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"22182:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"22196:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22182:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5485,"nodeType":"IfStatement","src":"22178:98:23","trueBody":{"id":5484,"nodeType":"Block","src":"22203:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22254:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"22259:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5479,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"22224:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22224:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5483,"nodeType":"RevertStatement","src":"22217:48:23"}]}}]},"documentation":{"id":5462,"nodeType":"StructuredDocumentation","src":"21741:312:23","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22067:8:23","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"value","nameLocation":"22083:5:23","nodeType":"VariableDeclaration","scope":5487,"src":"22076:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5463,"name":"int256","nodeType":"ElementaryTypeName","src":"22076:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22075:14:23"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"downcasted","nameLocation":"22120:10:23","nodeType":"VariableDeclaration","scope":5487,"src":"22113:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5466,"name":"int184","nodeType":"ElementaryTypeName","src":"22113:6:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22112:19:23"},"scope":6090,"src":"22058:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5512,"nodeType":"Block","src":"22679:150:23","statements":[{"expression":{"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"22689:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"22709:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22702:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5496,"name":"int176","nodeType":"ElementaryTypeName","src":"22702:6:23","typeDescriptions":{}}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22702:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22689:26:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5501,"nodeType":"ExpressionStatement","src":"22689:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"22729:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"22743:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22729:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5511,"nodeType":"IfStatement","src":"22725:98:23","trueBody":{"id":5510,"nodeType":"Block","src":"22750:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22801:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"22806:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5505,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"22771:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22771:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5509,"nodeType":"RevertStatement","src":"22764:48:23"}]}}]},"documentation":{"id":5488,"nodeType":"StructuredDocumentation","src":"22288:312:23","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22614:8:23","nodeType":"FunctionDefinition","parameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"value","nameLocation":"22630:5:23","nodeType":"VariableDeclaration","scope":5513,"src":"22623:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5489,"name":"int256","nodeType":"ElementaryTypeName","src":"22623:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22622:14:23"},"returnParameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"downcasted","nameLocation":"22667:10:23","nodeType":"VariableDeclaration","scope":5513,"src":"22660:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5492,"name":"int176","nodeType":"ElementaryTypeName","src":"22660:6:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22659:19:23"},"scope":6090,"src":"22605:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5538,"nodeType":"Block","src":"23226:150:23","statements":[{"expression":{"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"23236:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"23256:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23249:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5522,"name":"int168","nodeType":"ElementaryTypeName","src":"23249:6:23","typeDescriptions":{}}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23249:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23236:26:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5527,"nodeType":"ExpressionStatement","src":"23236:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"23276:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"23290:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23276:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5537,"nodeType":"IfStatement","src":"23272:98:23","trueBody":{"id":5536,"nodeType":"Block","src":"23297:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23348:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"23353:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5531,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"23318:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23318:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5535,"nodeType":"RevertStatement","src":"23311:48:23"}]}}]},"documentation":{"id":5514,"nodeType":"StructuredDocumentation","src":"22835:312:23","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23161:8:23","nodeType":"FunctionDefinition","parameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"value","nameLocation":"23177:5:23","nodeType":"VariableDeclaration","scope":5539,"src":"23170:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5515,"name":"int256","nodeType":"ElementaryTypeName","src":"23170:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23169:14:23"},"returnParameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"downcasted","nameLocation":"23214:10:23","nodeType":"VariableDeclaration","scope":5539,"src":"23207:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5518,"name":"int168","nodeType":"ElementaryTypeName","src":"23207:6:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23206:19:23"},"scope":6090,"src":"23152:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5564,"nodeType":"Block","src":"23773:150:23","statements":[{"expression":{"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"23783:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"23803:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23796:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5548,"name":"int160","nodeType":"ElementaryTypeName","src":"23796:6:23","typeDescriptions":{}}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23796:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23783:26:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5553,"nodeType":"ExpressionStatement","src":"23783:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"23823:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"23837:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23823:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5563,"nodeType":"IfStatement","src":"23819:98:23","trueBody":{"id":5562,"nodeType":"Block","src":"23844:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23895:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"23900:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5557,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"23865:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23865:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5561,"nodeType":"RevertStatement","src":"23858:48:23"}]}}]},"documentation":{"id":5540,"nodeType":"StructuredDocumentation","src":"23382:312:23","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5565,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23708:8:23","nodeType":"FunctionDefinition","parameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"value","nameLocation":"23724:5:23","nodeType":"VariableDeclaration","scope":5565,"src":"23717:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5541,"name":"int256","nodeType":"ElementaryTypeName","src":"23717:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23716:14:23"},"returnParameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"downcasted","nameLocation":"23761:10:23","nodeType":"VariableDeclaration","scope":5565,"src":"23754:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5544,"name":"int160","nodeType":"ElementaryTypeName","src":"23754:6:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23753:19:23"},"scope":6090,"src":"23699:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5590,"nodeType":"Block","src":"24320:150:23","statements":[{"expression":{"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"24330:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"24350:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24343:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5574,"name":"int152","nodeType":"ElementaryTypeName","src":"24343:6:23","typeDescriptions":{}}},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24343:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24330:26:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5579,"nodeType":"ExpressionStatement","src":"24330:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"24370:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"24384:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24370:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5589,"nodeType":"IfStatement","src":"24366:98:23","trueBody":{"id":5588,"nodeType":"Block","src":"24391:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24442:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"24447:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5583,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"24412:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24412:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5587,"nodeType":"RevertStatement","src":"24405:48:23"}]}}]},"documentation":{"id":5566,"nodeType":"StructuredDocumentation","src":"23929:312:23","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5591,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24255:8:23","nodeType":"FunctionDefinition","parameters":{"id":5569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5568,"mutability":"mutable","name":"value","nameLocation":"24271:5:23","nodeType":"VariableDeclaration","scope":5591,"src":"24264:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5567,"name":"int256","nodeType":"ElementaryTypeName","src":"24264:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24263:14:23"},"returnParameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"downcasted","nameLocation":"24308:10:23","nodeType":"VariableDeclaration","scope":5591,"src":"24301:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5570,"name":"int152","nodeType":"ElementaryTypeName","src":"24301:6:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24300:19:23"},"scope":6090,"src":"24246:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5616,"nodeType":"Block","src":"24867:150:23","statements":[{"expression":{"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"24877:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"24897:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24890:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5600,"name":"int144","nodeType":"ElementaryTypeName","src":"24890:6:23","typeDescriptions":{}}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24890:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24877:26:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5605,"nodeType":"ExpressionStatement","src":"24877:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"24917:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"24931:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24917:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5615,"nodeType":"IfStatement","src":"24913:98:23","trueBody":{"id":5614,"nodeType":"Block","src":"24938:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24989:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"24994:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5609,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"24959:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24959:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5613,"nodeType":"RevertStatement","src":"24952:48:23"}]}}]},"documentation":{"id":5592,"nodeType":"StructuredDocumentation","src":"24476:312:23","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5617,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24802:8:23","nodeType":"FunctionDefinition","parameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"mutability":"mutable","name":"value","nameLocation":"24818:5:23","nodeType":"VariableDeclaration","scope":5617,"src":"24811:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5593,"name":"int256","nodeType":"ElementaryTypeName","src":"24811:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24810:14:23"},"returnParameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"downcasted","nameLocation":"24855:10:23","nodeType":"VariableDeclaration","scope":5617,"src":"24848:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5596,"name":"int144","nodeType":"ElementaryTypeName","src":"24848:6:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24847:19:23"},"scope":6090,"src":"24793:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5642,"nodeType":"Block","src":"25414:150:23","statements":[{"expression":{"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"25424:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"25444:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25437:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5626,"name":"int136","nodeType":"ElementaryTypeName","src":"25437:6:23","typeDescriptions":{}}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25437:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25424:26:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5631,"nodeType":"ExpressionStatement","src":"25424:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"25464:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"25478:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25464:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5641,"nodeType":"IfStatement","src":"25460:98:23","trueBody":{"id":5640,"nodeType":"Block","src":"25485:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25536:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"25541:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5635,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"25506:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25506:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5639,"nodeType":"RevertStatement","src":"25499:48:23"}]}}]},"documentation":{"id":5618,"nodeType":"StructuredDocumentation","src":"25023:312:23","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5643,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25349:8:23","nodeType":"FunctionDefinition","parameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"value","nameLocation":"25365:5:23","nodeType":"VariableDeclaration","scope":5643,"src":"25358:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5619,"name":"int256","nodeType":"ElementaryTypeName","src":"25358:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25357:14:23"},"returnParameters":{"id":5624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5623,"mutability":"mutable","name":"downcasted","nameLocation":"25402:10:23","nodeType":"VariableDeclaration","scope":5643,"src":"25395:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5622,"name":"int136","nodeType":"ElementaryTypeName","src":"25395:6:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25394:19:23"},"scope":6090,"src":"25340:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5668,"nodeType":"Block","src":"25961:150:23","statements":[{"expression":{"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"25971:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"25991:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25984:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5652,"name":"int128","nodeType":"ElementaryTypeName","src":"25984:6:23","typeDescriptions":{}}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25984:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25971:26:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5657,"nodeType":"ExpressionStatement","src":"25971:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"26011:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"26025:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26011:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5667,"nodeType":"IfStatement","src":"26007:98:23","trueBody":{"id":5666,"nodeType":"Block","src":"26032:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26083:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"26088:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5661,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"26053:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26053:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5665,"nodeType":"RevertStatement","src":"26046:48:23"}]}}]},"documentation":{"id":5644,"nodeType":"StructuredDocumentation","src":"25570:312:23","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5669,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25896:8:23","nodeType":"FunctionDefinition","parameters":{"id":5647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5646,"mutability":"mutable","name":"value","nameLocation":"25912:5:23","nodeType":"VariableDeclaration","scope":5669,"src":"25905:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5645,"name":"int256","nodeType":"ElementaryTypeName","src":"25905:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25904:14:23"},"returnParameters":{"id":5650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"downcasted","nameLocation":"25949:10:23","nodeType":"VariableDeclaration","scope":5669,"src":"25942:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5648,"name":"int128","nodeType":"ElementaryTypeName","src":"25942:6:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25941:19:23"},"scope":6090,"src":"25887:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5694,"nodeType":"Block","src":"26508:150:23","statements":[{"expression":{"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5675,"src":"26518:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"26538:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26531:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5678,"name":"int120","nodeType":"ElementaryTypeName","src":"26531:6:23","typeDescriptions":{}}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26531:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26518:26:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5683,"nodeType":"ExpressionStatement","src":"26518:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5684,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5675,"src":"26558:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"26572:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26558:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5693,"nodeType":"IfStatement","src":"26554:98:23","trueBody":{"id":5692,"nodeType":"Block","src":"26579:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26630:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"26635:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5687,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"26600:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26600:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5691,"nodeType":"RevertStatement","src":"26593:48:23"}]}}]},"documentation":{"id":5670,"nodeType":"StructuredDocumentation","src":"26117:312:23","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5695,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26443:8:23","nodeType":"FunctionDefinition","parameters":{"id":5673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5672,"mutability":"mutable","name":"value","nameLocation":"26459:5:23","nodeType":"VariableDeclaration","scope":5695,"src":"26452:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5671,"name":"int256","nodeType":"ElementaryTypeName","src":"26452:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26451:14:23"},"returnParameters":{"id":5676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5675,"mutability":"mutable","name":"downcasted","nameLocation":"26496:10:23","nodeType":"VariableDeclaration","scope":5695,"src":"26489:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5674,"name":"int120","nodeType":"ElementaryTypeName","src":"26489:6:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26488:19:23"},"scope":6090,"src":"26434:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5720,"nodeType":"Block","src":"27055:150:23","statements":[{"expression":{"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"27065:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"27085:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27078:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5704,"name":"int112","nodeType":"ElementaryTypeName","src":"27078:6:23","typeDescriptions":{}}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27078:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27065:26:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5709,"nodeType":"ExpressionStatement","src":"27065:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"27105:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"27119:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27105:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5719,"nodeType":"IfStatement","src":"27101:98:23","trueBody":{"id":5718,"nodeType":"Block","src":"27126:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27177:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"27182:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5713,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"27147:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27147:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5717,"nodeType":"RevertStatement","src":"27140:48:23"}]}}]},"documentation":{"id":5696,"nodeType":"StructuredDocumentation","src":"26664:312:23","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5721,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26990:8:23","nodeType":"FunctionDefinition","parameters":{"id":5699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5698,"mutability":"mutable","name":"value","nameLocation":"27006:5:23","nodeType":"VariableDeclaration","scope":5721,"src":"26999:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5697,"name":"int256","nodeType":"ElementaryTypeName","src":"26999:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26998:14:23"},"returnParameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"downcasted","nameLocation":"27043:10:23","nodeType":"VariableDeclaration","scope":5721,"src":"27036:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5700,"name":"int112","nodeType":"ElementaryTypeName","src":"27036:6:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27035:19:23"},"scope":6090,"src":"26981:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5746,"nodeType":"Block","src":"27602:150:23","statements":[{"expression":{"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"27612:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"27632:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27625:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5730,"name":"int104","nodeType":"ElementaryTypeName","src":"27625:6:23","typeDescriptions":{}}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27625:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27612:26:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5735,"nodeType":"ExpressionStatement","src":"27612:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5736,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"27652:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"27666:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27652:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5745,"nodeType":"IfStatement","src":"27648:98:23","trueBody":{"id":5744,"nodeType":"Block","src":"27673:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27724:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"27729:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5739,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"27694:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27694:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5743,"nodeType":"RevertStatement","src":"27687:48:23"}]}}]},"documentation":{"id":5722,"nodeType":"StructuredDocumentation","src":"27211:312:23","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5747,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27537:8:23","nodeType":"FunctionDefinition","parameters":{"id":5725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5724,"mutability":"mutable","name":"value","nameLocation":"27553:5:23","nodeType":"VariableDeclaration","scope":5747,"src":"27546:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5723,"name":"int256","nodeType":"ElementaryTypeName","src":"27546:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27545:14:23"},"returnParameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"downcasted","nameLocation":"27590:10:23","nodeType":"VariableDeclaration","scope":5747,"src":"27583:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5726,"name":"int104","nodeType":"ElementaryTypeName","src":"27583:6:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27582:19:23"},"scope":6090,"src":"27528:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5772,"nodeType":"Block","src":"28142:148:23","statements":[{"expression":{"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"28152:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"28171:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28165:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5756,"name":"int96","nodeType":"ElementaryTypeName","src":"28165:5:23","typeDescriptions":{}}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28165:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28152:25:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5761,"nodeType":"ExpressionStatement","src":"28152:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5762,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"28191:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"28205:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28191:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5771,"nodeType":"IfStatement","src":"28187:97:23","trueBody":{"id":5770,"nodeType":"Block","src":"28212:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28263:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"28267:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5765,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"28233:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28233:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5769,"nodeType":"RevertStatement","src":"28226:47:23"}]}}]},"documentation":{"id":5748,"nodeType":"StructuredDocumentation","src":"27758:307:23","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5773,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28079:7:23","nodeType":"FunctionDefinition","parameters":{"id":5751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5750,"mutability":"mutable","name":"value","nameLocation":"28094:5:23","nodeType":"VariableDeclaration","scope":5773,"src":"28087:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5749,"name":"int256","nodeType":"ElementaryTypeName","src":"28087:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28086:14:23"},"returnParameters":{"id":5754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5753,"mutability":"mutable","name":"downcasted","nameLocation":"28130:10:23","nodeType":"VariableDeclaration","scope":5773,"src":"28124:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5752,"name":"int96","nodeType":"ElementaryTypeName","src":"28124:5:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28123:18:23"},"scope":6090,"src":"28070:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5798,"nodeType":"Block","src":"28680:148:23","statements":[{"expression":{"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"28690:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"28709:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28703:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5782,"name":"int88","nodeType":"ElementaryTypeName","src":"28703:5:23","typeDescriptions":{}}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28703:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28690:25:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5787,"nodeType":"ExpressionStatement","src":"28690:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5788,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"28729:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"28743:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28729:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5797,"nodeType":"IfStatement","src":"28725:97:23","trueBody":{"id":5796,"nodeType":"Block","src":"28750:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28801:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"28805:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5791,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"28771:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28771:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5795,"nodeType":"RevertStatement","src":"28764:47:23"}]}}]},"documentation":{"id":5774,"nodeType":"StructuredDocumentation","src":"28296:307:23","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5799,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28617:7:23","nodeType":"FunctionDefinition","parameters":{"id":5777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"value","nameLocation":"28632:5:23","nodeType":"VariableDeclaration","scope":5799,"src":"28625:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5775,"name":"int256","nodeType":"ElementaryTypeName","src":"28625:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28624:14:23"},"returnParameters":{"id":5780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5779,"mutability":"mutable","name":"downcasted","nameLocation":"28668:10:23","nodeType":"VariableDeclaration","scope":5799,"src":"28662:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5778,"name":"int88","nodeType":"ElementaryTypeName","src":"28662:5:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28661:18:23"},"scope":6090,"src":"28608:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5824,"nodeType":"Block","src":"29218:148:23","statements":[{"expression":{"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"29228:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"29247:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29241:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5808,"name":"int80","nodeType":"ElementaryTypeName","src":"29241:5:23","typeDescriptions":{}}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29241:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29228:25:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5813,"nodeType":"ExpressionStatement","src":"29228:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5814,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"29267:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"29281:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29267:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5823,"nodeType":"IfStatement","src":"29263:97:23","trueBody":{"id":5822,"nodeType":"Block","src":"29288:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29339:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"29343:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5817,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"29309:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29309:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5821,"nodeType":"RevertStatement","src":"29302:47:23"}]}}]},"documentation":{"id":5800,"nodeType":"StructuredDocumentation","src":"28834:307:23","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5825,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29155:7:23","nodeType":"FunctionDefinition","parameters":{"id":5803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5802,"mutability":"mutable","name":"value","nameLocation":"29170:5:23","nodeType":"VariableDeclaration","scope":5825,"src":"29163:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5801,"name":"int256","nodeType":"ElementaryTypeName","src":"29163:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29162:14:23"},"returnParameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5805,"mutability":"mutable","name":"downcasted","nameLocation":"29206:10:23","nodeType":"VariableDeclaration","scope":5825,"src":"29200:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5804,"name":"int80","nodeType":"ElementaryTypeName","src":"29200:5:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29199:18:23"},"scope":6090,"src":"29146:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5850,"nodeType":"Block","src":"29756:148:23","statements":[{"expression":{"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"29766:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"29785:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29779:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5834,"name":"int72","nodeType":"ElementaryTypeName","src":"29779:5:23","typeDescriptions":{}}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29779:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29766:25:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5839,"nodeType":"ExpressionStatement","src":"29766:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5840,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"29805:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"29819:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29805:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5849,"nodeType":"IfStatement","src":"29801:97:23","trueBody":{"id":5848,"nodeType":"Block","src":"29826:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29877:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"29881:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5843,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"29847:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29847:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5847,"nodeType":"RevertStatement","src":"29840:47:23"}]}}]},"documentation":{"id":5826,"nodeType":"StructuredDocumentation","src":"29372:307:23","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5851,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29693:7:23","nodeType":"FunctionDefinition","parameters":{"id":5829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5828,"mutability":"mutable","name":"value","nameLocation":"29708:5:23","nodeType":"VariableDeclaration","scope":5851,"src":"29701:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5827,"name":"int256","nodeType":"ElementaryTypeName","src":"29701:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29700:14:23"},"returnParameters":{"id":5832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"downcasted","nameLocation":"29744:10:23","nodeType":"VariableDeclaration","scope":5851,"src":"29738:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5830,"name":"int72","nodeType":"ElementaryTypeName","src":"29738:5:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29737:18:23"},"scope":6090,"src":"29684:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5876,"nodeType":"Block","src":"30294:148:23","statements":[{"expression":{"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"30304:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"30323:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30317:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5860,"name":"int64","nodeType":"ElementaryTypeName","src":"30317:5:23","typeDescriptions":{}}},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30317:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30304:25:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5865,"nodeType":"ExpressionStatement","src":"30304:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5866,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"30343:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"30357:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30343:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5875,"nodeType":"IfStatement","src":"30339:97:23","trueBody":{"id":5874,"nodeType":"Block","src":"30364:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30415:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"30419:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5869,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"30385:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30385:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5873,"nodeType":"RevertStatement","src":"30378:47:23"}]}}]},"documentation":{"id":5852,"nodeType":"StructuredDocumentation","src":"29910:307:23","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5877,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30231:7:23","nodeType":"FunctionDefinition","parameters":{"id":5855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5854,"mutability":"mutable","name":"value","nameLocation":"30246:5:23","nodeType":"VariableDeclaration","scope":5877,"src":"30239:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5853,"name":"int256","nodeType":"ElementaryTypeName","src":"30239:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30238:14:23"},"returnParameters":{"id":5858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5857,"mutability":"mutable","name":"downcasted","nameLocation":"30282:10:23","nodeType":"VariableDeclaration","scope":5877,"src":"30276:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5856,"name":"int64","nodeType":"ElementaryTypeName","src":"30276:5:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30275:18:23"},"scope":6090,"src":"30222:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5902,"nodeType":"Block","src":"30832:148:23","statements":[{"expression":{"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"30842:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"30861:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30855:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5886,"name":"int56","nodeType":"ElementaryTypeName","src":"30855:5:23","typeDescriptions":{}}},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30855:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30842:25:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5891,"nodeType":"ExpressionStatement","src":"30842:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5892,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"30881:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"30895:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30881:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5901,"nodeType":"IfStatement","src":"30877:97:23","trueBody":{"id":5900,"nodeType":"Block","src":"30902:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30953:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"30957:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5895,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"30923:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30923:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5899,"nodeType":"RevertStatement","src":"30916:47:23"}]}}]},"documentation":{"id":5878,"nodeType":"StructuredDocumentation","src":"30448:307:23","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5903,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30769:7:23","nodeType":"FunctionDefinition","parameters":{"id":5881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5880,"mutability":"mutable","name":"value","nameLocation":"30784:5:23","nodeType":"VariableDeclaration","scope":5903,"src":"30777:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5879,"name":"int256","nodeType":"ElementaryTypeName","src":"30777:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30776:14:23"},"returnParameters":{"id":5884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5883,"mutability":"mutable","name":"downcasted","nameLocation":"30820:10:23","nodeType":"VariableDeclaration","scope":5903,"src":"30814:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5882,"name":"int56","nodeType":"ElementaryTypeName","src":"30814:5:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30813:18:23"},"scope":6090,"src":"30760:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5928,"nodeType":"Block","src":"31370:148:23","statements":[{"expression":{"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"31380:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"31399:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31393:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5912,"name":"int48","nodeType":"ElementaryTypeName","src":"31393:5:23","typeDescriptions":{}}},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31393:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31380:25:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5917,"nodeType":"ExpressionStatement","src":"31380:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5918,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"31419:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"31433:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31419:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5927,"nodeType":"IfStatement","src":"31415:97:23","trueBody":{"id":5926,"nodeType":"Block","src":"31440:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31491:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"31495:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5921,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"31461:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31461:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5925,"nodeType":"RevertStatement","src":"31454:47:23"}]}}]},"documentation":{"id":5904,"nodeType":"StructuredDocumentation","src":"30986:307:23","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5929,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31307:7:23","nodeType":"FunctionDefinition","parameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"value","nameLocation":"31322:5:23","nodeType":"VariableDeclaration","scope":5929,"src":"31315:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5905,"name":"int256","nodeType":"ElementaryTypeName","src":"31315:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31314:14:23"},"returnParameters":{"id":5910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5909,"mutability":"mutable","name":"downcasted","nameLocation":"31358:10:23","nodeType":"VariableDeclaration","scope":5929,"src":"31352:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5908,"name":"int48","nodeType":"ElementaryTypeName","src":"31352:5:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31351:18:23"},"scope":6090,"src":"31298:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5954,"nodeType":"Block","src":"31908:148:23","statements":[{"expression":{"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"31918:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"31937:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31931:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5938,"name":"int40","nodeType":"ElementaryTypeName","src":"31931:5:23","typeDescriptions":{}}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31931:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31918:25:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5943,"nodeType":"ExpressionStatement","src":"31918:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5944,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"31957:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"31971:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31957:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5953,"nodeType":"IfStatement","src":"31953:97:23","trueBody":{"id":5952,"nodeType":"Block","src":"31978:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32029:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"32033:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5947,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"31999:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31999:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5951,"nodeType":"RevertStatement","src":"31992:47:23"}]}}]},"documentation":{"id":5930,"nodeType":"StructuredDocumentation","src":"31524:307:23","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5955,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31845:7:23","nodeType":"FunctionDefinition","parameters":{"id":5933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5932,"mutability":"mutable","name":"value","nameLocation":"31860:5:23","nodeType":"VariableDeclaration","scope":5955,"src":"31853:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5931,"name":"int256","nodeType":"ElementaryTypeName","src":"31853:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31852:14:23"},"returnParameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"downcasted","nameLocation":"31896:10:23","nodeType":"VariableDeclaration","scope":5955,"src":"31890:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5934,"name":"int40","nodeType":"ElementaryTypeName","src":"31890:5:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31889:18:23"},"scope":6090,"src":"31836:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5980,"nodeType":"Block","src":"32446:148:23","statements":[{"expression":{"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"32456:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"32475:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32469:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5964,"name":"int32","nodeType":"ElementaryTypeName","src":"32469:5:23","typeDescriptions":{}}},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32469:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32456:25:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5969,"nodeType":"ExpressionStatement","src":"32456:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5970,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"32495:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"32509:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32495:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5979,"nodeType":"IfStatement","src":"32491:97:23","trueBody":{"id":5978,"nodeType":"Block","src":"32516:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32567:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"32571:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5973,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"32537:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32537:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5977,"nodeType":"RevertStatement","src":"32530:47:23"}]}}]},"documentation":{"id":5956,"nodeType":"StructuredDocumentation","src":"32062:307:23","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5981,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32383:7:23","nodeType":"FunctionDefinition","parameters":{"id":5959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5958,"mutability":"mutable","name":"value","nameLocation":"32398:5:23","nodeType":"VariableDeclaration","scope":5981,"src":"32391:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5957,"name":"int256","nodeType":"ElementaryTypeName","src":"32391:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32390:14:23"},"returnParameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"downcasted","nameLocation":"32434:10:23","nodeType":"VariableDeclaration","scope":5981,"src":"32428:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5960,"name":"int32","nodeType":"ElementaryTypeName","src":"32428:5:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32427:18:23"},"scope":6090,"src":"32374:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6006,"nodeType":"Block","src":"32984:148:23","statements":[{"expression":{"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5989,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"32994:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"33013:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33007:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5990,"name":"int24","nodeType":"ElementaryTypeName","src":"33007:5:23","typeDescriptions":{}}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33007:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32994:25:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5995,"nodeType":"ExpressionStatement","src":"32994:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5996,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"33033:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"33047:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33033:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6005,"nodeType":"IfStatement","src":"33029:97:23","trueBody":{"id":6004,"nodeType":"Block","src":"33054:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33105:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"33109:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5999,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"33075:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33075:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6003,"nodeType":"RevertStatement","src":"33068:47:23"}]}}]},"documentation":{"id":5982,"nodeType":"StructuredDocumentation","src":"32600:307:23","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6007,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32921:7:23","nodeType":"FunctionDefinition","parameters":{"id":5985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5984,"mutability":"mutable","name":"value","nameLocation":"32936:5:23","nodeType":"VariableDeclaration","scope":6007,"src":"32929:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5983,"name":"int256","nodeType":"ElementaryTypeName","src":"32929:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32928:14:23"},"returnParameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"downcasted","nameLocation":"32972:10:23","nodeType":"VariableDeclaration","scope":6007,"src":"32966:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5986,"name":"int24","nodeType":"ElementaryTypeName","src":"32966:5:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32965:18:23"},"scope":6090,"src":"32912:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6032,"nodeType":"Block","src":"33522:148:23","statements":[{"expression":{"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"33532:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"33551:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33545:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6016,"name":"int16","nodeType":"ElementaryTypeName","src":"33545:5:23","typeDescriptions":{}}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33545:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33532:25:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6021,"nodeType":"ExpressionStatement","src":"33532:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6022,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"33571:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"33585:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33571:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6031,"nodeType":"IfStatement","src":"33567:97:23","trueBody":{"id":6030,"nodeType":"Block","src":"33592:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33643:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"33647:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6025,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"33613:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33613:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6029,"nodeType":"RevertStatement","src":"33606:47:23"}]}}]},"documentation":{"id":6008,"nodeType":"StructuredDocumentation","src":"33138:307:23","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6033,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33459:7:23","nodeType":"FunctionDefinition","parameters":{"id":6011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6010,"mutability":"mutable","name":"value","nameLocation":"33474:5:23","nodeType":"VariableDeclaration","scope":6033,"src":"33467:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6009,"name":"int256","nodeType":"ElementaryTypeName","src":"33467:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33466:14:23"},"returnParameters":{"id":6014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6013,"mutability":"mutable","name":"downcasted","nameLocation":"33510:10:23","nodeType":"VariableDeclaration","scope":6033,"src":"33504:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6012,"name":"int16","nodeType":"ElementaryTypeName","src":"33504:5:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33503:18:23"},"scope":6090,"src":"33450:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6058,"nodeType":"Block","src":"34053:146:23","statements":[{"expression":{"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"34063:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"34081:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34076:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6042,"name":"int8","nodeType":"ElementaryTypeName","src":"34076:4:23","typeDescriptions":{}}},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34076:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34063:24:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6047,"nodeType":"ExpressionStatement","src":"34063:24:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6048,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"34101:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"34115:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34101:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6057,"nodeType":"IfStatement","src":"34097:96:23","trueBody":{"id":6056,"nodeType":"Block","src":"34122:71:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34173:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"34176:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6051,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"34143:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34143:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6055,"nodeType":"RevertStatement","src":"34136:46:23"}]}}]},"documentation":{"id":6034,"nodeType":"StructuredDocumentation","src":"33676:302:23","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6059,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33992:6:23","nodeType":"FunctionDefinition","parameters":{"id":6037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6036,"mutability":"mutable","name":"value","nameLocation":"34006:5:23","nodeType":"VariableDeclaration","scope":6059,"src":"33999:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6035,"name":"int256","nodeType":"ElementaryTypeName","src":"33999:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33998:14:23"},"returnParameters":{"id":6040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6039,"mutability":"mutable","name":"downcasted","nameLocation":"34041:10:23","nodeType":"VariableDeclaration","scope":6059,"src":"34036:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6038,"name":"int8","nodeType":"ElementaryTypeName","src":"34036:4:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34035:17:23"},"scope":6090,"src":"33983:216:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6088,"nodeType":"Block","src":"34439:250:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"34552:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34573:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6071,"name":"int256","nodeType":"ElementaryTypeName","src":"34573:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6070,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34568:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34568:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34581:3:23","memberName":"max","nodeType":"MemberAccess","src":"34568:16:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34560:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6068,"name":"uint256","nodeType":"ElementaryTypeName","src":"34560:7:23","typeDescriptions":{}}},"id":6075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34560:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34552:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6082,"nodeType":"IfStatement","src":"34548:105:23","trueBody":{"id":6081,"nodeType":"Block","src":"34587:66:23","statements":[{"errorCall":{"arguments":[{"id":6078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"34636:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6077,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"34608:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34608:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6080,"nodeType":"RevertStatement","src":"34601:41:23"}]}},{"expression":{"arguments":[{"id":6085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"34676:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34669:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6083,"name":"int256","nodeType":"ElementaryTypeName","src":"34669:6:23","typeDescriptions":{}}},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34669:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6066,"id":6087,"nodeType":"Return","src":"34662:20:23"}]},"documentation":{"id":6060,"nodeType":"StructuredDocumentation","src":"34205:165:23","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6089,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34384:8:23","nodeType":"FunctionDefinition","parameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6062,"mutability":"mutable","name":"value","nameLocation":"34401:5:23","nodeType":"VariableDeclaration","scope":6089,"src":"34393:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6061,"name":"uint256","nodeType":"ElementaryTypeName","src":"34393:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34392:15:23"},"returnParameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6089,"src":"34431:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6064,"name":"int256","nodeType":"ElementaryTypeName","src":"34431:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34430:8:23"},"scope":6090,"src":"34375:314:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6091,"src":"764:33927:23","usedErrors":[4345,4350,4357,4362],"usedEvents":[]}],"src":"192:34500:23"},"id":23},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[6195]},"id":6196,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6092,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6093,"nodeType":"StructuredDocumentation","src":"135:80:24","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6195,"linearizedBaseContracts":[6195],"name":"SignedMath","nameLocation":"224:10:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":6110,"nodeType":"Block","src":"376:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6103,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"393:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6104,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"397:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6107,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"405:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:24","trueExpression":{"id":6106,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"401:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6102,"id":6109,"nodeType":"Return","src":"386:20:24"}]},"documentation":{"id":6094,"nodeType":"StructuredDocumentation","src":"241:66:24","text":" @dev Returns the largest of two signed numbers."},"id":6111,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:24","nodeType":"FunctionDefinition","parameters":{"id":6099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6096,"mutability":"mutable","name":"a","nameLocation":"332:1:24","nodeType":"VariableDeclaration","scope":6111,"src":"325:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6095,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6098,"mutability":"mutable","name":"b","nameLocation":"342:1:24","nodeType":"VariableDeclaration","scope":6111,"src":"335:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6097,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:24"},"returnParameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6111,"src":"368:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6100,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:24"},"scope":6195,"src":"312:101:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6128,"nodeType":"Block","src":"555:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"572:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6122,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"576:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6125,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"584:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:24","trueExpression":{"id":6124,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"580:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6120,"id":6127,"nodeType":"Return","src":"565:20:24"}]},"documentation":{"id":6112,"nodeType":"StructuredDocumentation","src":"419:67:24","text":" @dev Returns the smallest of two signed numbers."},"id":6129,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:24","nodeType":"FunctionDefinition","parameters":{"id":6117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6114,"mutability":"mutable","name":"a","nameLocation":"511:1:24","nodeType":"VariableDeclaration","scope":6129,"src":"504:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6113,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6116,"mutability":"mutable","name":"b","nameLocation":"521:1:24","nodeType":"VariableDeclaration","scope":6129,"src":"514:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6115,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:24"},"returnParameters":{"id":6120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6129,"src":"547:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6118,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:24"},"scope":6195,"src":"491:101:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6172,"nodeType":"Block","src":"797:162:24","statements":[{"assignments":[6140],"declarations":[{"constant":false,"id":6140,"mutability":"mutable","name":"x","nameLocation":"866:1:24","nodeType":"VariableDeclaration","scope":6172,"src":"859:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6139,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6153,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6141,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"871:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6142,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"875:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"882:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6146,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"886:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:24"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6154,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"911:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6159,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"931:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6157,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:24","typeDescriptions":{}}},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6155,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:24","typeDescriptions":{}}},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"945:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6165,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"949:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6138,"id":6171,"nodeType":"Return","src":"904:48:24"}]},"documentation":{"id":6130,"nodeType":"StructuredDocumentation","src":"598:126:24","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6173,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:24","nodeType":"FunctionDefinition","parameters":{"id":6135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6132,"mutability":"mutable","name":"a","nameLocation":"753:1:24","nodeType":"VariableDeclaration","scope":6173,"src":"746:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6131,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6134,"mutability":"mutable","name":"b","nameLocation":"763:1:24","nodeType":"VariableDeclaration","scope":6173,"src":"756:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6133,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:24"},"returnParameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6173,"src":"789:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6136,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:24"},"scope":6195,"src":"729:230:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6193,"nodeType":"Block","src":"1103:158:24","statements":[{"id":6192,"nodeType":"UncheckedBlock","src":"1113:142:24","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6183,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"1228:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:24","subExpression":{"id":6187,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"1242:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:24","trueExpression":{"id":6186,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"1237:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:24","typeDescriptions":{}}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6180,"id":6191,"nodeType":"Return","src":"1213:31:24"}]}]},"documentation":{"id":6174,"nodeType":"StructuredDocumentation","src":"965:78:24","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6194,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:24","nodeType":"FunctionDefinition","parameters":{"id":6177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6176,"mutability":"mutable","name":"n","nameLocation":"1068:1:24","nodeType":"VariableDeclaration","scope":6194,"src":"1061:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6175,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:24"},"returnParameters":{"id":6180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6194,"src":"1094:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:24"},"scope":6195,"src":"1048:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6196,"src":"216:1047:24","usedErrors":[],"usedEvents":[]}],"src":"109:1155:24"},"id":24},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","exportedSymbols":{"Checkpoints":[7767],"Math":[4335]},"id":7768,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6197,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"201:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":6199,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7768,"sourceUnit":4336,"src":"227:38:25","symbolAliases":[{"foreign":{"id":6198,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"235:4:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":6200,"nodeType":"StructuredDocumentation","src":"267:400:25","text":" @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function."},"fullyImplemented":true,"id":7767,"linearizedBaseContracts":[7767],"name":"Checkpoints","nameLocation":"676:11:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6201,"nodeType":"StructuredDocumentation","src":"694:82:25","text":" @dev A value was attempted to be inserted on a past checkpoint."},"errorSelector":"2520601d","id":6203,"name":"CheckpointUnorderedInsertion","nameLocation":"787:28:25","nodeType":"ErrorDefinition","parameters":{"id":6202,"nodeType":"ParameterList","parameters":[],"src":"815:2:25"},"src":"781:37:25"},{"canonicalName":"Checkpoints.Trace224","id":6208,"members":[{"constant":false,"id":6207,"mutability":"mutable","name":"_checkpoints","nameLocation":"866:12:25","nodeType":"VariableDeclaration","scope":6208,"src":"850:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":6205,"nodeType":"UserDefinedTypeName","pathNode":{"id":6204,"name":"Checkpoint224","nameLocations":["850:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6213,"src":"850:13:25"},"referencedDeclaration":6213,"src":"850:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":6206,"nodeType":"ArrayTypeName","src":"850:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"831:8:25","nodeType":"StructDefinition","scope":7767,"src":"824:61:25","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":6213,"members":[{"constant":false,"id":6210,"mutability":"mutable","name":"_key","nameLocation":"929:4:25","nodeType":"VariableDeclaration","scope":6213,"src":"922:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6209,"name":"uint32","nodeType":"ElementaryTypeName","src":"922:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6212,"mutability":"mutable","name":"_value","nameLocation":"951:6:25","nodeType":"VariableDeclaration","scope":6213,"src":"943:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6211,"name":"uint224","nodeType":"ElementaryTypeName","src":"943:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"898:13:25","nodeType":"StructDefinition","scope":7767,"src":"891:73:25","visibility":"public"},{"body":{"id":6235,"nodeType":"Block","src":"1377:62:25","statements":[{"expression":{"arguments":[{"expression":{"id":6229,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"1402:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1407:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"1402:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6231,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"1421:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"1426:5:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":6228,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[6605,7126,7647],"referencedDeclaration":6605,"src":"1394:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1394:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":6227,"id":6234,"nodeType":"Return","src":"1387:45:25"}]},"documentation":{"id":6214,"nodeType":"StructuredDocumentation","src":"970:302:25","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n library."},"id":6236,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1286:4:25","nodeType":"FunctionDefinition","parameters":{"id":6222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6217,"mutability":"mutable","name":"self","nameLocation":"1308:4:25","nodeType":"VariableDeclaration","scope":6236,"src":"1291:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6216,"nodeType":"UserDefinedTypeName","pathNode":{"id":6215,"name":"Trace224","nameLocations":["1291:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6208,"src":"1291:8:25"},"referencedDeclaration":6208,"src":"1291:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6219,"mutability":"mutable","name":"key","nameLocation":"1321:3:25","nodeType":"VariableDeclaration","scope":6236,"src":"1314:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6218,"name":"uint32","nodeType":"ElementaryTypeName","src":"1314:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6221,"mutability":"mutable","name":"value","nameLocation":"1334:5:25","nodeType":"VariableDeclaration","scope":6236,"src":"1326:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6220,"name":"uint224","nodeType":"ElementaryTypeName","src":"1326:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1290:50:25"},"returnParameters":{"id":6227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6236,"src":"1359:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6223,"name":"uint224","nodeType":"ElementaryTypeName","src":"1359:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":6226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6236,"src":"1368:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6225,"name":"uint224","nodeType":"ElementaryTypeName","src":"1368:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1358:18:25"},"scope":7767,"src":"1277:162:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6275,"nodeType":"Block","src":"1692:207:25","statements":[{"assignments":[6248],"declarations":[{"constant":false,"id":6248,"mutability":"mutable","name":"len","nameLocation":"1710:3:25","nodeType":"VariableDeclaration","scope":6275,"src":"1702:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1702:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6252,"initialValue":{"expression":{"expression":{"id":6249,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"1716:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1721:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"1716:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1734:6:25","memberName":"length","nodeType":"MemberAccess","src":"1716:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1702:38:25"},{"assignments":[6254],"declarations":[{"constant":false,"id":6254,"mutability":"mutable","name":"pos","nameLocation":"1758:3:25","nodeType":"VariableDeclaration","scope":6275,"src":"1750:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6262,"initialValue":{"arguments":[{"expression":{"id":6256,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"1783:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1788:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"1783:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6258,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"1802:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":6259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1807:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6260,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"1810:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6255,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6709,7230,7751],"referencedDeclaration":6709,"src":"1764:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1750:64:25"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6263,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"1831:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6264,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"1838:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1831:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6268,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"1862:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1867:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"1862:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6270,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"1881:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6267,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":6724,"src":"1848:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6213_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1886:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6212,"src":"1848:44:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1831:61:25","trueExpression":{"hexValue":"30","id":6266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1844:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6246,"id":6274,"nodeType":"Return","src":"1824:68:25"}]},"documentation":{"id":6237,"nodeType":"StructuredDocumentation","src":"1445:154:25","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":6276,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"1613:11:25","nodeType":"FunctionDefinition","parameters":{"id":6243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6240,"mutability":"mutable","name":"self","nameLocation":"1642:4:25","nodeType":"VariableDeclaration","scope":6276,"src":"1625:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6239,"nodeType":"UserDefinedTypeName","pathNode":{"id":6238,"name":"Trace224","nameLocations":["1625:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6208,"src":"1625:8:25"},"referencedDeclaration":6208,"src":"1625:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6242,"mutability":"mutable","name":"key","nameLocation":"1655:3:25","nodeType":"VariableDeclaration","scope":6276,"src":"1648:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6241,"name":"uint32","nodeType":"ElementaryTypeName","src":"1648:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1624:35:25"},"returnParameters":{"id":6246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6276,"src":"1683:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6244,"name":"uint224","nodeType":"ElementaryTypeName","src":"1683:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1682:9:25"},"scope":7767,"src":"1604:295:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6317,"nodeType":"Block","src":"2154:209:25","statements":[{"assignments":[6288],"declarations":[{"constant":false,"id":6288,"mutability":"mutable","name":"len","nameLocation":"2172:3:25","nodeType":"VariableDeclaration","scope":6317,"src":"2164:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6292,"initialValue":{"expression":{"expression":{"id":6289,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"2178:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2183:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"2178:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2196:6:25","memberName":"length","nodeType":"MemberAccess","src":"2178:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2164:38:25"},{"assignments":[6294],"declarations":[{"constant":false,"id":6294,"mutability":"mutable","name":"pos","nameLocation":"2220:3:25","nodeType":"VariableDeclaration","scope":6317,"src":"2212:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2212:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6302,"initialValue":{"arguments":[{"expression":{"id":6296,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"2245:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2250:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"2245:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6298,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"2264:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":6299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2269:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6300,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"2272:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6295,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6657,7178,7699],"referencedDeclaration":6657,"src":"2226:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2212:64:25"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6303,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"2293:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2300:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2293:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6308,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"2322:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2327:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"2322:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6310,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"2341:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2347:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2341:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6307,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":6724,"src":"2308:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6213_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2350:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6212,"src":"2308:48:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2293:63:25","trueExpression":{"hexValue":"30","id":6306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2304:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6286,"id":6316,"nodeType":"Return","src":"2286:70:25"}]},"documentation":{"id":6277,"nodeType":"StructuredDocumentation","src":"1905:156:25","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":6318,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"2075:11:25","nodeType":"FunctionDefinition","parameters":{"id":6283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"self","nameLocation":"2104:4:25","nodeType":"VariableDeclaration","scope":6318,"src":"2087:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6279,"nodeType":"UserDefinedTypeName","pathNode":{"id":6278,"name":"Trace224","nameLocations":["2087:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6208,"src":"2087:8:25"},"referencedDeclaration":6208,"src":"2087:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6282,"mutability":"mutable","name":"key","nameLocation":"2117:3:25","nodeType":"VariableDeclaration","scope":6318,"src":"2110:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6281,"name":"uint32","nodeType":"ElementaryTypeName","src":"2110:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2086:35:25"},"returnParameters":{"id":6286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6318,"src":"2145:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6284,"name":"uint224","nodeType":"ElementaryTypeName","src":"2145:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2144:9:25"},"scope":7767,"src":"2066:297:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6402,"nodeType":"Block","src":"2762:512:25","statements":[{"assignments":[6330],"declarations":[{"constant":false,"id":6330,"mutability":"mutable","name":"len","nameLocation":"2780:3:25","nodeType":"VariableDeclaration","scope":6402,"src":"2772:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2772:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6334,"initialValue":{"expression":{"expression":{"id":6331,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"2786:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2791:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"2786:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:6:25","memberName":"length","nodeType":"MemberAccess","src":"2786:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2772:38:25"},{"assignments":[6336],"declarations":[{"constant":false,"id":6336,"mutability":"mutable","name":"low","nameLocation":"2829:3:25","nodeType":"VariableDeclaration","scope":6402,"src":"2821:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6335,"name":"uint256","nodeType":"ElementaryTypeName","src":"2821:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6338,"initialValue":{"hexValue":"30","id":6337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2821:15:25"},{"assignments":[6340],"declarations":[{"constant":false,"id":6340,"mutability":"mutable","name":"high","nameLocation":"2854:4:25","nodeType":"VariableDeclaration","scope":6402,"src":"2846:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6339,"name":"uint256","nodeType":"ElementaryTypeName","src":"2846:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6342,"initialValue":{"id":6341,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"2861:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2846:18:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6343,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"2879:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":6344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:25","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2879:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6377,"nodeType":"IfStatement","src":"2875:234:25","trueBody":{"id":6376,"nodeType":"Block","src":"2888:221:25","statements":[{"assignments":[6347],"declarations":[{"constant":false,"id":6347,"mutability":"mutable","name":"mid","nameLocation":"2910:3:25","nodeType":"VariableDeclaration","scope":6376,"src":"2902:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2902:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6354,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6348,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"2916:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6351,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"2932:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6349,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"2922:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4335_$","typeString":"type(library Math)"}},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2927:4:25","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"2922:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2916:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2902:34:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6355,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"2954:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":6357,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"2974:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2979:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"2974:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6359,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"2993:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6356,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":6724,"src":"2960:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6213_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2998:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6210,"src":"2960:42:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2954:48:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6374,"nodeType":"Block","src":"3053:46:25","statements":[{"expression":{"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6368,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"3071:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6369,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"3077:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3083:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3077:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3071:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6373,"nodeType":"ExpressionStatement","src":"3071:13:25"}]},"id":6375,"nodeType":"IfStatement","src":"2950:149:25","trueBody":{"id":6367,"nodeType":"Block","src":"3004:43:25","statements":[{"expression":{"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6363,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"3022:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6364,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"3029:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3022:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6366,"nodeType":"ExpressionStatement","src":"3022:10:25"}]}}]}},{"assignments":[6379],"declarations":[{"constant":false,"id":6379,"mutability":"mutable","name":"pos","nameLocation":"3127:3:25","nodeType":"VariableDeclaration","scope":6402,"src":"3119:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6378,"name":"uint256","nodeType":"ElementaryTypeName","src":"3119:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6387,"initialValue":{"arguments":[{"expression":{"id":6381,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"3152:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3157:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"3152:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6383,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"3171:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6384,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"3176:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6385,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"3181:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6380,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6657,7178,7699],"referencedDeclaration":6657,"src":"3133:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3133:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3119:67:25"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6388,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"3204:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3211:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3204:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6393,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"3233:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3238:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"3233:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6395,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"3252:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3258:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3252:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6392,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":6724,"src":"3219:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6213_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3261:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6212,"src":"3219:48:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3204:63:25","trueExpression":{"hexValue":"30","id":6391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3215:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6328,"id":6401,"nodeType":"Return","src":"3197:70:25"}]},"documentation":{"id":6319,"nodeType":"StructuredDocumentation","src":"2369:294:25","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":6403,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"2677:17:25","nodeType":"FunctionDefinition","parameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6322,"mutability":"mutable","name":"self","nameLocation":"2712:4:25","nodeType":"VariableDeclaration","scope":6403,"src":"2695:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6321,"nodeType":"UserDefinedTypeName","pathNode":{"id":6320,"name":"Trace224","nameLocations":["2695:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6208,"src":"2695:8:25"},"referencedDeclaration":6208,"src":"2695:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6324,"mutability":"mutable","name":"key","nameLocation":"2725:3:25","nodeType":"VariableDeclaration","scope":6403,"src":"2718:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6323,"name":"uint32","nodeType":"ElementaryTypeName","src":"2718:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2694:35:25"},"returnParameters":{"id":6328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6403,"src":"2753:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6326,"name":"uint224","nodeType":"ElementaryTypeName","src":"2753:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2752:9:25"},"scope":7767,"src":"2668:606:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6432,"nodeType":"Block","src":"3465:135:25","statements":[{"assignments":[6413],"declarations":[{"constant":false,"id":6413,"mutability":"mutable","name":"pos","nameLocation":"3483:3:25","nodeType":"VariableDeclaration","scope":6432,"src":"3475:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6412,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6417,"initialValue":{"expression":{"expression":{"id":6414,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"3489:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3494:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"3489:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3507:6:25","memberName":"length","nodeType":"MemberAccess","src":"3489:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3475:38:25"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6418,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"3530:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3537:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3530:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6423,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"3559:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3564:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"3559:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6425,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"3578:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3584:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3578:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6422,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":6724,"src":"3545:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6213_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3545:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3587:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6212,"src":"3545:48:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3530:63:25","trueExpression":{"hexValue":"30","id":6421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3541:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6411,"id":6431,"nodeType":"Return","src":"3523:70:25"}]},"documentation":{"id":6404,"nodeType":"StructuredDocumentation","src":"3280:109:25","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":6433,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3403:6:25","nodeType":"FunctionDefinition","parameters":{"id":6408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6407,"mutability":"mutable","name":"self","nameLocation":"3427:4:25","nodeType":"VariableDeclaration","scope":6433,"src":"3410:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6406,"nodeType":"UserDefinedTypeName","pathNode":{"id":6405,"name":"Trace224","nameLocations":["3410:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6208,"src":"3410:8:25"},"referencedDeclaration":6208,"src":"3410:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3409:23:25"},"returnParameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6433,"src":"3456:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6409,"name":"uint224","nodeType":"ElementaryTypeName","src":"3456:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3455:9:25"},"scope":7767,"src":"3394:206:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6481,"nodeType":"Block","src":"3893:274:25","statements":[{"assignments":[6447],"declarations":[{"constant":false,"id":6447,"mutability":"mutable","name":"pos","nameLocation":"3911:3:25","nodeType":"VariableDeclaration","scope":6481,"src":"3903:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6446,"name":"uint256","nodeType":"ElementaryTypeName","src":"3903:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6451,"initialValue":{"expression":{"expression":{"id":6448,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"3917:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3922:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"3917:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3935:6:25","memberName":"length","nodeType":"MemberAccess","src":"3917:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3903:38:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6452,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"3955:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3962:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3955:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6479,"nodeType":"Block","src":"4016:145:25","statements":[{"assignments":[6463],"declarations":[{"constant":false,"id":6463,"mutability":"mutable","name":"ckpt","nameLocation":"4051:4:25","nodeType":"VariableDeclaration","scope":6479,"src":"4030:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":6462,"nodeType":"UserDefinedTypeName","pathNode":{"id":6461,"name":"Checkpoint224","nameLocations":["4030:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6213,"src":"4030:13:25"},"referencedDeclaration":6213,"src":"4030:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":6471,"initialValue":{"arguments":[{"expression":{"id":6465,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"4072:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4077:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"4072:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6467,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"4091:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4097:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4091:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6464,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":6724,"src":"4058:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6213_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4058:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4030:69:25"},{"expression":{"components":[{"hexValue":"74727565","id":6472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4121:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":6473,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"4127:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":6474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4132:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6210,"src":"4127:9:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":6475,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"4138:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":6476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4143:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6212,"src":"4138:11:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":6477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4120:30:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":6445,"id":6478,"nodeType":"Return","src":"4113:37:25"}]},"id":6480,"nodeType":"IfStatement","src":"3951:210:25","trueBody":{"id":6460,"nodeType":"Block","src":"3965:45:25","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":6455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3987:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3994:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6458,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3986:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":6445,"id":6459,"nodeType":"Return","src":"3979:20:25"}]}}]},"documentation":{"id":6434,"nodeType":"StructuredDocumentation","src":"3606:168:25","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":6482,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"3788:16:25","nodeType":"FunctionDefinition","parameters":{"id":6438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6437,"mutability":"mutable","name":"self","nameLocation":"3822:4:25","nodeType":"VariableDeclaration","scope":6482,"src":"3805:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6436,"nodeType":"UserDefinedTypeName","pathNode":{"id":6435,"name":"Trace224","nameLocations":["3805:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6208,"src":"3805:8:25"},"referencedDeclaration":6208,"src":"3805:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3804:23:25"},"returnParameters":{"id":6445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6440,"mutability":"mutable","name":"exists","nameLocation":"3856:6:25","nodeType":"VariableDeclaration","scope":6482,"src":"3851:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6439,"name":"bool","nodeType":"ElementaryTypeName","src":"3851:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6442,"mutability":"mutable","name":"_key","nameLocation":"3871:4:25","nodeType":"VariableDeclaration","scope":6482,"src":"3864:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6441,"name":"uint32","nodeType":"ElementaryTypeName","src":"3864:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6444,"mutability":"mutable","name":"_value","nameLocation":"3885:6:25","nodeType":"VariableDeclaration","scope":6482,"src":"3877:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6443,"name":"uint224","nodeType":"ElementaryTypeName","src":"3877:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3850:42:25"},"scope":7767,"src":"3779:388:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6495,"nodeType":"Block","src":"4306:48:25","statements":[{"expression":{"expression":{"expression":{"id":6491,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"4323:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4328:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"4323:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4341:6:25","memberName":"length","nodeType":"MemberAccess","src":"4323:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6490,"id":6494,"nodeType":"Return","src":"4316:31:25"}]},"documentation":{"id":6483,"nodeType":"StructuredDocumentation","src":"4173:57:25","text":" @dev Returns the number of checkpoint."},"id":6496,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4244:6:25","nodeType":"FunctionDefinition","parameters":{"id":6487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6486,"mutability":"mutable","name":"self","nameLocation":"4268:4:25","nodeType":"VariableDeclaration","scope":6496,"src":"4251:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6485,"nodeType":"UserDefinedTypeName","pathNode":{"id":6484,"name":"Trace224","nameLocations":["4251:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6208,"src":"4251:8:25"},"referencedDeclaration":6208,"src":"4251:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"4250:23:25"},"returnParameters":{"id":6490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6496,"src":"4297:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6488,"name":"uint256","nodeType":"ElementaryTypeName","src":"4297:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4296:9:25"},"scope":7767,"src":"4235:119:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6513,"nodeType":"Block","src":"4518:46:25","statements":[{"expression":{"baseExpression":{"expression":{"id":6508,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"4535:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4540:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"4535:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6511,"indexExpression":{"id":6510,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"4553:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4535:22:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref"}},"functionReturnParameters":6507,"id":6512,"nodeType":"Return","src":"4528:29:25"}]},"documentation":{"id":6497,"nodeType":"StructuredDocumentation","src":"4360:61:25","text":" @dev Returns checkpoint at given position."},"id":6514,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"4435:2:25","nodeType":"FunctionDefinition","parameters":{"id":6503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6500,"mutability":"mutable","name":"self","nameLocation":"4455:4:25","nodeType":"VariableDeclaration","scope":6514,"src":"4438:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6499,"nodeType":"UserDefinedTypeName","pathNode":{"id":6498,"name":"Trace224","nameLocations":["4438:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6208,"src":"4438:8:25"},"referencedDeclaration":6208,"src":"4438:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6208_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6502,"mutability":"mutable","name":"pos","nameLocation":"4468:3:25","nodeType":"VariableDeclaration","scope":6514,"src":"4461:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6501,"name":"uint32","nodeType":"ElementaryTypeName","src":"4461:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4437:35:25"},"returnParameters":{"id":6507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6514,"src":"4496:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":6505,"nodeType":"UserDefinedTypeName","pathNode":{"id":6504,"name":"Checkpoint224","nameLocations":["4496:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6213,"src":"4496:13:25"},"referencedDeclaration":6213,"src":"4496:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"4495:22:25"},"scope":7767,"src":"4426:138:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6604,"nodeType":"Block","src":"4849:761:25","statements":[{"assignments":[6531],"declarations":[{"constant":false,"id":6531,"mutability":"mutable","name":"pos","nameLocation":"4867:3:25","nodeType":"VariableDeclaration","scope":6604,"src":"4859:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6530,"name":"uint256","nodeType":"ElementaryTypeName","src":"4859:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6534,"initialValue":{"expression":{"id":6532,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"4873:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4878:6:25","memberName":"length","nodeType":"MemberAccess","src":"4873:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4859:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6535,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"4899:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4899:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6602,"nodeType":"Block","src":"5496:108:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":6593,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"5541:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"5554:5:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":6592,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"5520:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$6213_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5535:4:25","5546:6:25"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5520:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$6213_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":6589,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"5510:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5515:4:25","memberName":"push","nodeType":"MemberAccess","src":"5510:9:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$6213_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5510:52:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6597,"nodeType":"ExpressionStatement","src":"5510:52:25"},{"expression":{"components":[{"hexValue":"30","id":6598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5584:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"5587:5:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":6600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5583:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":6529,"id":6601,"nodeType":"Return","src":"5576:17:25"}]},"id":6603,"nodeType":"IfStatement","src":"4895:709:25","trueBody":{"id":6588,"nodeType":"Block","src":"4908:582:25","statements":[{"assignments":[6540],"declarations":[{"constant":false,"id":6540,"mutability":"mutable","name":"last","nameLocation":"4995:4:25","nodeType":"VariableDeclaration","scope":6588,"src":"4974:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":6539,"nodeType":"UserDefinedTypeName","pathNode":{"id":6538,"name":"Checkpoint224","nameLocations":["4974:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6213,"src":"4974:13:25"},"referencedDeclaration":6213,"src":"4974:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":6547,"initialValue":{"arguments":[{"id":6542,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"5016:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6543,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"5022:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5028:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5022:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6541,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":6724,"src":"5002:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6213_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5002:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4974:56:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6548,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"5104:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":6549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5109:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6210,"src":"5104:9:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6550,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"5116:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5104:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6556,"nodeType":"IfStatement","src":"5100:91:25","trueBody":{"id":6555,"nodeType":"Block","src":"5121:70:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6552,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"5146:28:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5146:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6554,"nodeType":"RevertStatement","src":"5139:37:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6557,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"5254:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":6558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5259:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6210,"src":"5254:9:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6559,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"5267:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5254:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6581,"nodeType":"Block","src":"5354:85:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":6576,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"5403:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"5416:5:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":6575,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"5382:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$6213_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5397:4:25","5408:6:25"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5382:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$6213_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":6572,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"5372:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5377:4:25","memberName":"push","nodeType":"MemberAccess","src":"5372:9:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$6213_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5372:52:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6580,"nodeType":"ExpressionStatement","src":"5372:52:25"}]},"id":6582,"nodeType":"IfStatement","src":"5250:189:25","trueBody":{"id":6571,"nodeType":"Block","src":"5272:76:25","statements":[{"expression":{"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":6562,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"5304:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6563,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"5310:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5316:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5310:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6561,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":6724,"src":"5290:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6213_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5319:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6212,"src":"5290:35:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"5328:5:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5290:43:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6570,"nodeType":"ExpressionStatement","src":"5290:43:25"}]}},{"expression":{"components":[{"expression":{"id":6583,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"5460:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":6584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5465:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6212,"src":"5460:11:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":6585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"5473:5:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":6586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5459:20:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":6529,"id":6587,"nodeType":"Return","src":"5452:27:25"}]}}]},"documentation":{"id":6515,"nodeType":"StructuredDocumentation","src":"4570:165:25","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":6605,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"4749:7:25","nodeType":"FunctionDefinition","parameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6519,"mutability":"mutable","name":"self","nameLocation":"4781:4:25","nodeType":"VariableDeclaration","scope":6605,"src":"4757:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":6517,"nodeType":"UserDefinedTypeName","pathNode":{"id":6516,"name":"Checkpoint224","nameLocations":["4757:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6213,"src":"4757:13:25"},"referencedDeclaration":6213,"src":"4757:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":6518,"nodeType":"ArrayTypeName","src":"4757:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":6521,"mutability":"mutable","name":"key","nameLocation":"4794:3:25","nodeType":"VariableDeclaration","scope":6605,"src":"4787:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6520,"name":"uint32","nodeType":"ElementaryTypeName","src":"4787:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6523,"mutability":"mutable","name":"value","nameLocation":"4807:5:25","nodeType":"VariableDeclaration","scope":6605,"src":"4799:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6522,"name":"uint224","nodeType":"ElementaryTypeName","src":"4799:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4756:57:25"},"returnParameters":{"id":6529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6605,"src":"4831:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6525,"name":"uint224","nodeType":"ElementaryTypeName","src":"4831:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":6528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6605,"src":"4840:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6527,"name":"uint224","nodeType":"ElementaryTypeName","src":"4840:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4830:18:25"},"scope":7767,"src":"4740:870:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6656,"nodeType":"Block","src":"6129:267:25","statements":[{"body":{"id":6652,"nodeType":"Block","src":"6158:211:25","statements":[{"assignments":[6625],"declarations":[{"constant":false,"id":6625,"mutability":"mutable","name":"mid","nameLocation":"6180:3:25","nodeType":"VariableDeclaration","scope":6652,"src":"6172:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6624,"name":"uint256","nodeType":"ElementaryTypeName","src":"6172:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6631,"initialValue":{"arguments":[{"id":6628,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6614,"src":"6199:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6629,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"6204:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6626,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"6186:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4335_$","typeString":"type(library Math)"}},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6191:7:25","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3509,"src":"6186:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6172:37:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6633,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"6241:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":6634,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"6247:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6632,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":6724,"src":"6227:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6213_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6227:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6252:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6210,"src":"6227:29:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6637,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"6259:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6227:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6650,"nodeType":"Block","src":"6313:46:25","statements":[{"expression":{"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6644,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6614,"src":"6331:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6645,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"6337:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6343:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6337:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6331:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6649,"nodeType":"ExpressionStatement","src":"6331:13:25"}]},"id":6651,"nodeType":"IfStatement","src":"6223:136:25","trueBody":{"id":6643,"nodeType":"Block","src":"6264:43:25","statements":[{"expression":{"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6639,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"6282:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6640,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"6289:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6282:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6642,"nodeType":"ExpressionStatement","src":"6282:10:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6621,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6614,"src":"6146:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6622,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"6152:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6146:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6653,"nodeType":"WhileStatement","src":"6139:230:25"},{"expression":{"id":6654,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"6385:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6620,"id":6655,"nodeType":"Return","src":"6378:11:25"}]},"documentation":{"id":6606,"nodeType":"StructuredDocumentation","src":"5616:342:25","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":6657,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"5972:18:25","nodeType":"FunctionDefinition","parameters":{"id":6617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6610,"mutability":"mutable","name":"self","nameLocation":"6024:4:25","nodeType":"VariableDeclaration","scope":6657,"src":"6000:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":6608,"nodeType":"UserDefinedTypeName","pathNode":{"id":6607,"name":"Checkpoint224","nameLocations":["6000:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6213,"src":"6000:13:25"},"referencedDeclaration":6213,"src":"6000:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":6609,"nodeType":"ArrayTypeName","src":"6000:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":6612,"mutability":"mutable","name":"key","nameLocation":"6045:3:25","nodeType":"VariableDeclaration","scope":6657,"src":"6038:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6611,"name":"uint32","nodeType":"ElementaryTypeName","src":"6038:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6614,"mutability":"mutable","name":"low","nameLocation":"6066:3:25","nodeType":"VariableDeclaration","scope":6657,"src":"6058:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6613,"name":"uint256","nodeType":"ElementaryTypeName","src":"6058:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6616,"mutability":"mutable","name":"high","nameLocation":"6087:4:25","nodeType":"VariableDeclaration","scope":6657,"src":"6079:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6615,"name":"uint256","nodeType":"ElementaryTypeName","src":"6079:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5990:107:25"},"returnParameters":{"id":6620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6657,"src":"6120:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6618,"name":"uint256","nodeType":"ElementaryTypeName","src":"6120:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6119:9:25"},"scope":7767,"src":"5963:433:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6708,"nodeType":"Block","src":"6916:267:25","statements":[{"body":{"id":6704,"nodeType":"Block","src":"6945:211:25","statements":[{"assignments":[6677],"declarations":[{"constant":false,"id":6677,"mutability":"mutable","name":"mid","nameLocation":"6967:3:25","nodeType":"VariableDeclaration","scope":6704,"src":"6959:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6676,"name":"uint256","nodeType":"ElementaryTypeName","src":"6959:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6683,"initialValue":{"arguments":[{"id":6680,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"6986:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6681,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"6991:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6678,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"6973:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4335_$","typeString":"type(library Math)"}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6978:7:25","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3509,"src":"6973:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6973:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6959:37:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6685,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"7028:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":6686,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"7034:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6684,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":6724,"src":"7014:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6213_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7014:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7039:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6210,"src":"7014:29:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6689,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"7046:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7014:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6702,"nodeType":"Block","src":"7103:43:25","statements":[{"expression":{"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6698,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"7121:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6699,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"7128:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7121:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6701,"nodeType":"ExpressionStatement","src":"7121:10:25"}]},"id":6703,"nodeType":"IfStatement","src":"7010:136:25","trueBody":{"id":6697,"nodeType":"Block","src":"7051:46:25","statements":[{"expression":{"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6691,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"7069:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6692,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"7075:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7081:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7075:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7069:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6696,"nodeType":"ExpressionStatement","src":"7069:13:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6673,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"6933:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6674,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"6939:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6705,"nodeType":"WhileStatement","src":"6926:230:25"},{"expression":{"id":6706,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"7172:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6672,"id":6707,"nodeType":"Return","src":"7165:11:25"}]},"documentation":{"id":6658,"nodeType":"StructuredDocumentation","src":"6402:343:25","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":6709,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6759:18:25","nodeType":"FunctionDefinition","parameters":{"id":6669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6662,"mutability":"mutable","name":"self","nameLocation":"6811:4:25","nodeType":"VariableDeclaration","scope":6709,"src":"6787:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":6660,"nodeType":"UserDefinedTypeName","pathNode":{"id":6659,"name":"Checkpoint224","nameLocations":["6787:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6213,"src":"6787:13:25"},"referencedDeclaration":6213,"src":"6787:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":6661,"nodeType":"ArrayTypeName","src":"6787:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":6664,"mutability":"mutable","name":"key","nameLocation":"6832:3:25","nodeType":"VariableDeclaration","scope":6709,"src":"6825:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6663,"name":"uint32","nodeType":"ElementaryTypeName","src":"6825:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6666,"mutability":"mutable","name":"low","nameLocation":"6853:3:25","nodeType":"VariableDeclaration","scope":6709,"src":"6845:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6665,"name":"uint256","nodeType":"ElementaryTypeName","src":"6845:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6668,"mutability":"mutable","name":"high","nameLocation":"6874:4:25","nodeType":"VariableDeclaration","scope":6709,"src":"6866:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6667,"name":"uint256","nodeType":"ElementaryTypeName","src":"6866:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6777:107:25"},"returnParameters":{"id":6672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6709,"src":"6907:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6670,"name":"uint256","nodeType":"ElementaryTypeName","src":"6907:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6906:9:25"},"scope":7767,"src":"6750:433:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6723,"nodeType":"Block","src":"7466:125:25","statements":[{"AST":{"nativeSrc":"7485:100:25","nodeType":"YulBlock","src":"7485:100:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7506:1:25","nodeType":"YulLiteral","src":"7506:1:25","type":"","value":"0"},{"name":"self.slot","nativeSrc":"7509:9:25","nodeType":"YulIdentifier","src":"7509:9:25"}],"functionName":{"name":"mstore","nativeSrc":"7499:6:25","nodeType":"YulIdentifier","src":"7499:6:25"},"nativeSrc":"7499:20:25","nodeType":"YulFunctionCall","src":"7499:20:25"},"nativeSrc":"7499:20:25","nodeType":"YulExpressionStatement","src":"7499:20:25"},{"nativeSrc":"7532:43:25","nodeType":"YulAssignment","src":"7532:43:25","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7561:1:25","nodeType":"YulLiteral","src":"7561:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7564:4:25","nodeType":"YulLiteral","src":"7564:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"7551:9:25","nodeType":"YulIdentifier","src":"7551:9:25"},"nativeSrc":"7551:18:25","nodeType":"YulFunctionCall","src":"7551:18:25"},{"name":"pos","nativeSrc":"7571:3:25","nodeType":"YulIdentifier","src":"7571:3:25"}],"functionName":{"name":"add","nativeSrc":"7547:3:25","nodeType":"YulIdentifier","src":"7547:3:25"},"nativeSrc":"7547:28:25","nodeType":"YulFunctionCall","src":"7547:28:25"},"variableNames":[{"name":"result.slot","nativeSrc":"7532:11:25","nodeType":"YulIdentifier","src":"7532:11:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6716,"isOffset":false,"isSlot":false,"src":"7571:3:25","valueSize":1},{"declaration":6720,"isOffset":false,"isSlot":true,"src":"7532:11:25","suffix":"slot","valueSize":1},{"declaration":6714,"isOffset":false,"isSlot":true,"src":"7509:9:25","suffix":"slot","valueSize":1}],"id":6722,"nodeType":"InlineAssembly","src":"7476:109:25"}]},"documentation":{"id":6710,"nodeType":"StructuredDocumentation","src":"7189:132:25","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":6724,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7335:13:25","nodeType":"FunctionDefinition","parameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6714,"mutability":"mutable","name":"self","nameLocation":"7382:4:25","nodeType":"VariableDeclaration","scope":6724,"src":"7358:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":6712,"nodeType":"UserDefinedTypeName","pathNode":{"id":6711,"name":"Checkpoint224","nameLocations":["7358:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6213,"src":"7358:13:25"},"referencedDeclaration":6213,"src":"7358:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":6713,"nodeType":"ArrayTypeName","src":"7358:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6213_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":6716,"mutability":"mutable","name":"pos","nameLocation":"7404:3:25","nodeType":"VariableDeclaration","scope":6724,"src":"7396:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6715,"name":"uint256","nodeType":"ElementaryTypeName","src":"7396:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7348:65:25"},"returnParameters":{"id":6721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6720,"mutability":"mutable","name":"result","nameLocation":"7458:6:25","nodeType":"VariableDeclaration","scope":6724,"src":"7436:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":6719,"nodeType":"UserDefinedTypeName","pathNode":{"id":6718,"name":"Checkpoint224","nameLocations":["7436:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6213,"src":"7436:13:25"},"referencedDeclaration":6213,"src":"7436:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6213_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"7435:30:25"},"scope":7767,"src":"7326:265:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace208","id":6729,"members":[{"constant":false,"id":6728,"mutability":"mutable","name":"_checkpoints","nameLocation":"7639:12:25","nodeType":"VariableDeclaration","scope":6729,"src":"7623:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":6726,"nodeType":"UserDefinedTypeName","pathNode":{"id":6725,"name":"Checkpoint208","nameLocations":["7623:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"7623:13:25"},"referencedDeclaration":6734,"src":"7623:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":6727,"nodeType":"ArrayTypeName","src":"7623:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"}],"name":"Trace208","nameLocation":"7604:8:25","nodeType":"StructDefinition","scope":7767,"src":"7597:61:25","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint208","id":6734,"members":[{"constant":false,"id":6731,"mutability":"mutable","name":"_key","nameLocation":"7702:4:25","nodeType":"VariableDeclaration","scope":6734,"src":"7695:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6730,"name":"uint48","nodeType":"ElementaryTypeName","src":"7695:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":6733,"mutability":"mutable","name":"_value","nameLocation":"7724:6:25","nodeType":"VariableDeclaration","scope":6734,"src":"7716:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6732,"name":"uint208","nodeType":"ElementaryTypeName","src":"7716:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"name":"Checkpoint208","nameLocation":"7671:13:25","nodeType":"StructDefinition","scope":7767,"src":"7664:73:25","visibility":"public"},{"body":{"id":6756,"nodeType":"Block","src":"8150:62:25","statements":[{"expression":{"arguments":[{"expression":{"id":6750,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"8175:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8180:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"8175:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":6752,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"8194:3:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":6753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"8199:5:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":6749,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[6605,7126,7647],"referencedDeclaration":7126,"src":"8167:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8167:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":6748,"id":6755,"nodeType":"Return","src":"8160:45:25"}]},"documentation":{"id":6735,"nodeType":"StructuredDocumentation","src":"7743:302:25","text":" @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n library."},"id":6757,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8059:4:25","nodeType":"FunctionDefinition","parameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6738,"mutability":"mutable","name":"self","nameLocation":"8081:4:25","nodeType":"VariableDeclaration","scope":6757,"src":"8064:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":6737,"nodeType":"UserDefinedTypeName","pathNode":{"id":6736,"name":"Trace208","nameLocations":["8064:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6729,"src":"8064:8:25"},"referencedDeclaration":6729,"src":"8064:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":6740,"mutability":"mutable","name":"key","nameLocation":"8094:3:25","nodeType":"VariableDeclaration","scope":6757,"src":"8087:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6739,"name":"uint48","nodeType":"ElementaryTypeName","src":"8087:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":6742,"mutability":"mutable","name":"value","nameLocation":"8107:5:25","nodeType":"VariableDeclaration","scope":6757,"src":"8099:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6741,"name":"uint208","nodeType":"ElementaryTypeName","src":"8099:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8063:50:25"},"returnParameters":{"id":6748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6757,"src":"8132:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6744,"name":"uint208","nodeType":"ElementaryTypeName","src":"8132:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":6747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6757,"src":"8141:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6746,"name":"uint208","nodeType":"ElementaryTypeName","src":"8141:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8131:18:25"},"scope":7767,"src":"8050:162:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6796,"nodeType":"Block","src":"8465:207:25","statements":[{"assignments":[6769],"declarations":[{"constant":false,"id":6769,"mutability":"mutable","name":"len","nameLocation":"8483:3:25","nodeType":"VariableDeclaration","scope":6796,"src":"8475:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6768,"name":"uint256","nodeType":"ElementaryTypeName","src":"8475:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6773,"initialValue":{"expression":{"expression":{"id":6770,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"8489:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8494:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"8489:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8507:6:25","memberName":"length","nodeType":"MemberAccess","src":"8489:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8475:38:25"},{"assignments":[6775],"declarations":[{"constant":false,"id":6775,"mutability":"mutable","name":"pos","nameLocation":"8531:3:25","nodeType":"VariableDeclaration","scope":6796,"src":"8523:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6774,"name":"uint256","nodeType":"ElementaryTypeName","src":"8523:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6783,"initialValue":{"arguments":[{"expression":{"id":6777,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"8556:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8561:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"8556:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":6779,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"8575:3:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":6780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6781,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"8583:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6776,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6709,7230,7751],"referencedDeclaration":7230,"src":"8537:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8537:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8523:64:25"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6784,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"8604:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6785,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"8611:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8604:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6789,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"8635:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8640:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"8635:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":6791,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"8654:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6788,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7245,"src":"8621:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6734_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":6793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8659:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"8621:44:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8604:61:25","trueExpression":{"hexValue":"30","id":6787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8617:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6767,"id":6795,"nodeType":"Return","src":"8597:68:25"}]},"documentation":{"id":6758,"nodeType":"StructuredDocumentation","src":"8218:154:25","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":6797,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8386:11:25","nodeType":"FunctionDefinition","parameters":{"id":6764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6761,"mutability":"mutable","name":"self","nameLocation":"8415:4:25","nodeType":"VariableDeclaration","scope":6797,"src":"8398:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":6760,"nodeType":"UserDefinedTypeName","pathNode":{"id":6759,"name":"Trace208","nameLocations":["8398:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6729,"src":"8398:8:25"},"referencedDeclaration":6729,"src":"8398:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":6763,"mutability":"mutable","name":"key","nameLocation":"8428:3:25","nodeType":"VariableDeclaration","scope":6797,"src":"8421:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6762,"name":"uint48","nodeType":"ElementaryTypeName","src":"8421:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8397:35:25"},"returnParameters":{"id":6767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6797,"src":"8456:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6765,"name":"uint208","nodeType":"ElementaryTypeName","src":"8456:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8455:9:25"},"scope":7767,"src":"8377:295:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6838,"nodeType":"Block","src":"8927:209:25","statements":[{"assignments":[6809],"declarations":[{"constant":false,"id":6809,"mutability":"mutable","name":"len","nameLocation":"8945:3:25","nodeType":"VariableDeclaration","scope":6838,"src":"8937:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6808,"name":"uint256","nodeType":"ElementaryTypeName","src":"8937:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6813,"initialValue":{"expression":{"expression":{"id":6810,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"8951:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8956:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"8951:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8969:6:25","memberName":"length","nodeType":"MemberAccess","src":"8951:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8937:38:25"},{"assignments":[6815],"declarations":[{"constant":false,"id":6815,"mutability":"mutable","name":"pos","nameLocation":"8993:3:25","nodeType":"VariableDeclaration","scope":6838,"src":"8985:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6814,"name":"uint256","nodeType":"ElementaryTypeName","src":"8985:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6823,"initialValue":{"arguments":[{"expression":{"id":6817,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"9018:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6818,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9023:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"9018:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":6819,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"9037:3:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":6820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9042:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6821,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"9045:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6816,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6657,7178,7699],"referencedDeclaration":7178,"src":"8999:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8985:64:25"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6824,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6815,"src":"9066:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9073:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9066:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6829,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"9095:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9100:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"9095:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6831,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6815,"src":"9114:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9120:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9114:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6828,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7245,"src":"9081:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6734_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9081:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":6835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9123:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"9081:48:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9066:63:25","trueExpression":{"hexValue":"30","id":6827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9077:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6807,"id":6837,"nodeType":"Return","src":"9059:70:25"}]},"documentation":{"id":6798,"nodeType":"StructuredDocumentation","src":"8678:156:25","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":6839,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8848:11:25","nodeType":"FunctionDefinition","parameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6801,"mutability":"mutable","name":"self","nameLocation":"8877:4:25","nodeType":"VariableDeclaration","scope":6839,"src":"8860:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":6800,"nodeType":"UserDefinedTypeName","pathNode":{"id":6799,"name":"Trace208","nameLocations":["8860:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6729,"src":"8860:8:25"},"referencedDeclaration":6729,"src":"8860:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":6803,"mutability":"mutable","name":"key","nameLocation":"8890:3:25","nodeType":"VariableDeclaration","scope":6839,"src":"8883:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6802,"name":"uint48","nodeType":"ElementaryTypeName","src":"8883:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8859:35:25"},"returnParameters":{"id":6807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6839,"src":"8918:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6805,"name":"uint208","nodeType":"ElementaryTypeName","src":"8918:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8917:9:25"},"scope":7767,"src":"8839:297:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6923,"nodeType":"Block","src":"9535:512:25","statements":[{"assignments":[6851],"declarations":[{"constant":false,"id":6851,"mutability":"mutable","name":"len","nameLocation":"9553:3:25","nodeType":"VariableDeclaration","scope":6923,"src":"9545:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6850,"name":"uint256","nodeType":"ElementaryTypeName","src":"9545:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6855,"initialValue":{"expression":{"expression":{"id":6852,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6843,"src":"9559:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9564:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"9559:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9577:6:25","memberName":"length","nodeType":"MemberAccess","src":"9559:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9545:38:25"},{"assignments":[6857],"declarations":[{"constant":false,"id":6857,"mutability":"mutable","name":"low","nameLocation":"9602:3:25","nodeType":"VariableDeclaration","scope":6923,"src":"9594:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6856,"name":"uint256","nodeType":"ElementaryTypeName","src":"9594:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6859,"initialValue":{"hexValue":"30","id":6858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9608:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9594:15:25"},{"assignments":[6861],"declarations":[{"constant":false,"id":6861,"mutability":"mutable","name":"high","nameLocation":"9627:4:25","nodeType":"VariableDeclaration","scope":6923,"src":"9619:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6860,"name":"uint256","nodeType":"ElementaryTypeName","src":"9619:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6863,"initialValue":{"id":6862,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"9634:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9619:18:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6864,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"9652:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":6865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9658:1:25","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9652:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6898,"nodeType":"IfStatement","src":"9648:234:25","trueBody":{"id":6897,"nodeType":"Block","src":"9661:221:25","statements":[{"assignments":[6868],"declarations":[{"constant":false,"id":6868,"mutability":"mutable","name":"mid","nameLocation":"9683:3:25","nodeType":"VariableDeclaration","scope":6897,"src":"9675:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6867,"name":"uint256","nodeType":"ElementaryTypeName","src":"9675:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6875,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6869,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"9689:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6872,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"9705:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6870,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"9695:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4335_$","typeString":"type(library Math)"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9700:4:25","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"9695:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9695:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9689:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9675:34:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6876,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"9727:3:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":6878,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6843,"src":"9747:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9752:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"9747:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":6880,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"9766:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6877,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7245,"src":"9733:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6734_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9733:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":6882,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9771:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6731,"src":"9733:42:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9727:48:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6895,"nodeType":"Block","src":"9826:46:25","statements":[{"expression":{"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6889,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"9844:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6890,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"9850:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9856:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9850:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9844:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6894,"nodeType":"ExpressionStatement","src":"9844:13:25"}]},"id":6896,"nodeType":"IfStatement","src":"9723:149:25","trueBody":{"id":6888,"nodeType":"Block","src":"9777:43:25","statements":[{"expression":{"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6884,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"9795:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6885,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"9802:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9795:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6887,"nodeType":"ExpressionStatement","src":"9795:10:25"}]}}]}},{"assignments":[6900],"declarations":[{"constant":false,"id":6900,"mutability":"mutable","name":"pos","nameLocation":"9900:3:25","nodeType":"VariableDeclaration","scope":6923,"src":"9892:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6899,"name":"uint256","nodeType":"ElementaryTypeName","src":"9892:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6908,"initialValue":{"arguments":[{"expression":{"id":6902,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6843,"src":"9925:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9930:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"9925:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":6904,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"9944:3:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":6905,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"9949:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6906,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"9954:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6901,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6657,7178,7699],"referencedDeclaration":7178,"src":"9906:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9906:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9892:67:25"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6909,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"9977:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9984:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9977:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6914,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6843,"src":"10006:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10011:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"10006:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6916,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"10025:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10031:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10025:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6913,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7245,"src":"9992:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6734_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9992:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":6920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10034:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"9992:48:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9977:63:25","trueExpression":{"hexValue":"30","id":6912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9988:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6849,"id":6922,"nodeType":"Return","src":"9970:70:25"}]},"documentation":{"id":6840,"nodeType":"StructuredDocumentation","src":"9142:294:25","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":6924,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"9450:17:25","nodeType":"FunctionDefinition","parameters":{"id":6846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6843,"mutability":"mutable","name":"self","nameLocation":"9485:4:25","nodeType":"VariableDeclaration","scope":6924,"src":"9468:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":6842,"nodeType":"UserDefinedTypeName","pathNode":{"id":6841,"name":"Trace208","nameLocations":["9468:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6729,"src":"9468:8:25"},"referencedDeclaration":6729,"src":"9468:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":6845,"mutability":"mutable","name":"key","nameLocation":"9498:3:25","nodeType":"VariableDeclaration","scope":6924,"src":"9491:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6844,"name":"uint48","nodeType":"ElementaryTypeName","src":"9491:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9467:35:25"},"returnParameters":{"id":6849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6924,"src":"9526:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6847,"name":"uint208","nodeType":"ElementaryTypeName","src":"9526:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9525:9:25"},"scope":7767,"src":"9441:606:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6953,"nodeType":"Block","src":"10238:135:25","statements":[{"assignments":[6934],"declarations":[{"constant":false,"id":6934,"mutability":"mutable","name":"pos","nameLocation":"10256:3:25","nodeType":"VariableDeclaration","scope":6953,"src":"10248:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6933,"name":"uint256","nodeType":"ElementaryTypeName","src":"10248:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6938,"initialValue":{"expression":{"expression":{"id":6935,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10262:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10267:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"10262:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10280:6:25","memberName":"length","nodeType":"MemberAccess","src":"10262:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10248:38:25"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6939,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"10303:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10310:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10303:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6944,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10332:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10337:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"10332:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6946,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"10351:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10357:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10351:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6943,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7245,"src":"10318:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6734_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10318:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":6950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10360:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"10318:48:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10303:63:25","trueExpression":{"hexValue":"30","id":6942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10314:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6932,"id":6952,"nodeType":"Return","src":"10296:70:25"}]},"documentation":{"id":6925,"nodeType":"StructuredDocumentation","src":"10053:109:25","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":6954,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"10176:6:25","nodeType":"FunctionDefinition","parameters":{"id":6929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6928,"mutability":"mutable","name":"self","nameLocation":"10200:4:25","nodeType":"VariableDeclaration","scope":6954,"src":"10183:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":6927,"nodeType":"UserDefinedTypeName","pathNode":{"id":6926,"name":"Trace208","nameLocations":["10183:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6729,"src":"10183:8:25"},"referencedDeclaration":6729,"src":"10183:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10182:23:25"},"returnParameters":{"id":6932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6954,"src":"10229:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6930,"name":"uint208","nodeType":"ElementaryTypeName","src":"10229:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10228:9:25"},"scope":7767,"src":"10167:206:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7002,"nodeType":"Block","src":"10666:274:25","statements":[{"assignments":[6968],"declarations":[{"constant":false,"id":6968,"mutability":"mutable","name":"pos","nameLocation":"10684:3:25","nodeType":"VariableDeclaration","scope":7002,"src":"10676:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6967,"name":"uint256","nodeType":"ElementaryTypeName","src":"10676:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6972,"initialValue":{"expression":{"expression":{"id":6969,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"10690:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10695:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"10690:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10708:6:25","memberName":"length","nodeType":"MemberAccess","src":"10690:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10676:38:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6973,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"10728:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10735:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10728:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7000,"nodeType":"Block","src":"10789:145:25","statements":[{"assignments":[6984],"declarations":[{"constant":false,"id":6984,"mutability":"mutable","name":"ckpt","nameLocation":"10824:4:25","nodeType":"VariableDeclaration","scope":7000,"src":"10803:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":6983,"nodeType":"UserDefinedTypeName","pathNode":{"id":6982,"name":"Checkpoint208","nameLocations":["10803:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"10803:13:25"},"referencedDeclaration":6734,"src":"10803:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":6992,"initialValue":{"arguments":[{"expression":{"id":6986,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"10845:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10850:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"10845:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6988,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"10864:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10870:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10864:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6985,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7245,"src":"10831:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6734_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10831:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10803:69:25"},{"expression":{"components":[{"hexValue":"74727565","id":6993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10894:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":6994,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"10900:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":6995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10905:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6731,"src":"10900:9:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":6996,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"10911:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":6997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10916:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"10911:11:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":6998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10893:30:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint48_$_t_uint208_$","typeString":"tuple(bool,uint48,uint208)"}},"functionReturnParameters":6966,"id":6999,"nodeType":"Return","src":"10886:37:25"}]},"id":7001,"nodeType":"IfStatement","src":"10724:210:25","trueBody":{"id":6981,"nodeType":"Block","src":"10738:45:25","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":6976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10760:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10767:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10770:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10759:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":6966,"id":6980,"nodeType":"Return","src":"10752:20:25"}]}}]},"documentation":{"id":6955,"nodeType":"StructuredDocumentation","src":"10379:168:25","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":7003,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"10561:16:25","nodeType":"FunctionDefinition","parameters":{"id":6959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6958,"mutability":"mutable","name":"self","nameLocation":"10595:4:25","nodeType":"VariableDeclaration","scope":7003,"src":"10578:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":6957,"nodeType":"UserDefinedTypeName","pathNode":{"id":6956,"name":"Trace208","nameLocations":["10578:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6729,"src":"10578:8:25"},"referencedDeclaration":6729,"src":"10578:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10577:23:25"},"returnParameters":{"id":6966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6961,"mutability":"mutable","name":"exists","nameLocation":"10629:6:25","nodeType":"VariableDeclaration","scope":7003,"src":"10624:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6960,"name":"bool","nodeType":"ElementaryTypeName","src":"10624:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6963,"mutability":"mutable","name":"_key","nameLocation":"10644:4:25","nodeType":"VariableDeclaration","scope":7003,"src":"10637:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6962,"name":"uint48","nodeType":"ElementaryTypeName","src":"10637:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":6965,"mutability":"mutable","name":"_value","nameLocation":"10658:6:25","nodeType":"VariableDeclaration","scope":7003,"src":"10650:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6964,"name":"uint208","nodeType":"ElementaryTypeName","src":"10650:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10623:42:25"},"scope":7767,"src":"10552:388:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7016,"nodeType":"Block","src":"11079:48:25","statements":[{"expression":{"expression":{"expression":{"id":7012,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"11096:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11101:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"11096:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11114:6:25","memberName":"length","nodeType":"MemberAccess","src":"11096:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7011,"id":7015,"nodeType":"Return","src":"11089:31:25"}]},"documentation":{"id":7004,"nodeType":"StructuredDocumentation","src":"10946:57:25","text":" @dev Returns the number of checkpoint."},"id":7017,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11017:6:25","nodeType":"FunctionDefinition","parameters":{"id":7008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7007,"mutability":"mutable","name":"self","nameLocation":"11041:4:25","nodeType":"VariableDeclaration","scope":7017,"src":"11024:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7006,"nodeType":"UserDefinedTypeName","pathNode":{"id":7005,"name":"Trace208","nameLocations":["11024:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6729,"src":"11024:8:25"},"referencedDeclaration":6729,"src":"11024:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"11023:23:25"},"returnParameters":{"id":7011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7017,"src":"11070:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7009,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11069:9:25"},"scope":7767,"src":"11008:119:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7034,"nodeType":"Block","src":"11291:46:25","statements":[{"expression":{"baseExpression":{"expression":{"id":7029,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"11308:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11313:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6728,"src":"11308:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7032,"indexExpression":{"id":7031,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"11326:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11308:22:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref"}},"functionReturnParameters":7028,"id":7033,"nodeType":"Return","src":"11301:29:25"}]},"documentation":{"id":7018,"nodeType":"StructuredDocumentation","src":"11133:61:25","text":" @dev Returns checkpoint at given position."},"id":7035,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11208:2:25","nodeType":"FunctionDefinition","parameters":{"id":7024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7021,"mutability":"mutable","name":"self","nameLocation":"11228:4:25","nodeType":"VariableDeclaration","scope":7035,"src":"11211:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7020,"nodeType":"UserDefinedTypeName","pathNode":{"id":7019,"name":"Trace208","nameLocations":["11211:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6729,"src":"11211:8:25"},"referencedDeclaration":6729,"src":"11211:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6729_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7023,"mutability":"mutable","name":"pos","nameLocation":"11241:3:25","nodeType":"VariableDeclaration","scope":7035,"src":"11234:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7022,"name":"uint32","nodeType":"ElementaryTypeName","src":"11234:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11210:35:25"},"returnParameters":{"id":7028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7035,"src":"11269:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":7026,"nodeType":"UserDefinedTypeName","pathNode":{"id":7025,"name":"Checkpoint208","nameLocations":["11269:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"11269:13:25"},"referencedDeclaration":6734,"src":"11269:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"11268:22:25"},"scope":7767,"src":"11199:138:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7125,"nodeType":"Block","src":"11622:761:25","statements":[{"assignments":[7052],"declarations":[{"constant":false,"id":7052,"mutability":"mutable","name":"pos","nameLocation":"11640:3:25","nodeType":"VariableDeclaration","scope":7125,"src":"11632:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7051,"name":"uint256","nodeType":"ElementaryTypeName","src":"11632:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7055,"initialValue":{"expression":{"id":7053,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"11646:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11651:6:25","memberName":"length","nodeType":"MemberAccess","src":"11646:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11632:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7056,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"11672:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11678:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11672:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7123,"nodeType":"Block","src":"12269:108:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":7114,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"12314:3:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":7115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"12327:5:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":7113,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"12293:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$6734_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12308:4:25","12319:6:25"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12293:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":7110,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"12283:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12288:4:25","memberName":"push","nodeType":"MemberAccess","src":"12283:9:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$6734_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:52:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7118,"nodeType":"ExpressionStatement","src":"12283:52:25"},{"expression":{"components":[{"hexValue":"30","id":7119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"12360:5:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":7121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12356:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint208_$","typeString":"tuple(int_const 0,uint208)"}},"functionReturnParameters":7050,"id":7122,"nodeType":"Return","src":"12349:17:25"}]},"id":7124,"nodeType":"IfStatement","src":"11668:709:25","trueBody":{"id":7109,"nodeType":"Block","src":"11681:582:25","statements":[{"assignments":[7061],"declarations":[{"constant":false,"id":7061,"mutability":"mutable","name":"last","nameLocation":"11768:4:25","nodeType":"VariableDeclaration","scope":7109,"src":"11747:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":7060,"nodeType":"UserDefinedTypeName","pathNode":{"id":7059,"name":"Checkpoint208","nameLocations":["11747:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"11747:13:25"},"referencedDeclaration":6734,"src":"11747:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":7068,"initialValue":{"arguments":[{"id":7063,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"11789:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7064,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"11795:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11801:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11795:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7062,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7245,"src":"11775:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6734_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11775:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11747:56:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7069,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"11877:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11882:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6731,"src":"11877:9:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7071,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"11889:3:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"11877:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7077,"nodeType":"IfStatement","src":"11873:91:25","trueBody":{"id":7076,"nodeType":"Block","src":"11894:70:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7073,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"11919:28:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11919:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7075,"nodeType":"RevertStatement","src":"11912:37:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7078,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"12027:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12032:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6731,"src":"12027:9:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7080,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"12040:3:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12027:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7102,"nodeType":"Block","src":"12127:85:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":7097,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"12176:3:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":7098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"12189:5:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":7096,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"12155:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$6734_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12170:4:25","12181:6:25"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12155:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":7093,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"12145:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12150:4:25","memberName":"push","nodeType":"MemberAccess","src":"12145:9:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$6734_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12145:52:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7101,"nodeType":"ExpressionStatement","src":"12145:52:25"}]},"id":7103,"nodeType":"IfStatement","src":"12023:189:25","trueBody":{"id":7092,"nodeType":"Block","src":"12045:76:25","statements":[{"expression":{"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":7083,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"12077:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7084,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"12083:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12089:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12083:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7082,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7245,"src":"12063:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6734_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12063:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12092:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"12063:35:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"12101:5:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"12063:43:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7091,"nodeType":"ExpressionStatement","src":"12063:43:25"}]}},{"expression":{"components":[{"expression":{"id":7104,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"12233:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12238:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"12233:11:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":7106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"12246:5:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":7107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12232:20:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":7050,"id":7108,"nodeType":"Return","src":"12225:27:25"}]}}]},"documentation":{"id":7036,"nodeType":"StructuredDocumentation","src":"11343:165:25","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":7126,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"11522:7:25","nodeType":"FunctionDefinition","parameters":{"id":7045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7040,"mutability":"mutable","name":"self","nameLocation":"11554:4:25","nodeType":"VariableDeclaration","scope":7126,"src":"11530:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7038,"nodeType":"UserDefinedTypeName","pathNode":{"id":7037,"name":"Checkpoint208","nameLocations":["11530:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"11530:13:25"},"referencedDeclaration":6734,"src":"11530:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7039,"nodeType":"ArrayTypeName","src":"11530:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":7042,"mutability":"mutable","name":"key","nameLocation":"11567:3:25","nodeType":"VariableDeclaration","scope":7126,"src":"11560:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7041,"name":"uint48","nodeType":"ElementaryTypeName","src":"11560:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7044,"mutability":"mutable","name":"value","nameLocation":"11580:5:25","nodeType":"VariableDeclaration","scope":7126,"src":"11572:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7043,"name":"uint208","nodeType":"ElementaryTypeName","src":"11572:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11529:57:25"},"returnParameters":{"id":7050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7126,"src":"11604:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7046,"name":"uint208","nodeType":"ElementaryTypeName","src":"11604:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":7049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7126,"src":"11613:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7048,"name":"uint208","nodeType":"ElementaryTypeName","src":"11613:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11603:18:25"},"scope":7767,"src":"11513:870:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7177,"nodeType":"Block","src":"12902:267:25","statements":[{"body":{"id":7173,"nodeType":"Block","src":"12931:211:25","statements":[{"assignments":[7146],"declarations":[{"constant":false,"id":7146,"mutability":"mutable","name":"mid","nameLocation":"12953:3:25","nodeType":"VariableDeclaration","scope":7173,"src":"12945:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7145,"name":"uint256","nodeType":"ElementaryTypeName","src":"12945:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7152,"initialValue":{"arguments":[{"id":7149,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"12972:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7150,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"12977:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7147,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"12959:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4335_$","typeString":"type(library Math)"}},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12964:7:25","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3509,"src":"12959:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12959:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12945:37:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7154,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"13014:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":7155,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"13020:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7153,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7245,"src":"13000:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6734_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13000:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13025:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6731,"src":"13000:29:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7158,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"13032:3:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13000:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7171,"nodeType":"Block","src":"13086:46:25","statements":[{"expression":{"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7165,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"13104:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7166,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"13110:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13116:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13110:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13104:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7170,"nodeType":"ExpressionStatement","src":"13104:13:25"}]},"id":7172,"nodeType":"IfStatement","src":"12996:136:25","trueBody":{"id":7164,"nodeType":"Block","src":"13037:43:25","statements":[{"expression":{"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7160,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"13055:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7161,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"13062:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13055:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7163,"nodeType":"ExpressionStatement","src":"13055:10:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7142,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"12919:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7143,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"12925:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12919:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7174,"nodeType":"WhileStatement","src":"12912:230:25"},{"expression":{"id":7175,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"13158:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7141,"id":7176,"nodeType":"Return","src":"13151:11:25"}]},"documentation":{"id":7127,"nodeType":"StructuredDocumentation","src":"12389:342:25","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7178,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"12745:18:25","nodeType":"FunctionDefinition","parameters":{"id":7138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7131,"mutability":"mutable","name":"self","nameLocation":"12797:4:25","nodeType":"VariableDeclaration","scope":7178,"src":"12773:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7129,"nodeType":"UserDefinedTypeName","pathNode":{"id":7128,"name":"Checkpoint208","nameLocations":["12773:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"12773:13:25"},"referencedDeclaration":6734,"src":"12773:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7130,"nodeType":"ArrayTypeName","src":"12773:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":7133,"mutability":"mutable","name":"key","nameLocation":"12818:3:25","nodeType":"VariableDeclaration","scope":7178,"src":"12811:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7132,"name":"uint48","nodeType":"ElementaryTypeName","src":"12811:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7135,"mutability":"mutable","name":"low","nameLocation":"12839:3:25","nodeType":"VariableDeclaration","scope":7178,"src":"12831:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7134,"name":"uint256","nodeType":"ElementaryTypeName","src":"12831:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7137,"mutability":"mutable","name":"high","nameLocation":"12860:4:25","nodeType":"VariableDeclaration","scope":7178,"src":"12852:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7136,"name":"uint256","nodeType":"ElementaryTypeName","src":"12852:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12763:107:25"},"returnParameters":{"id":7141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7178,"src":"12893:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7139,"name":"uint256","nodeType":"ElementaryTypeName","src":"12893:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12892:9:25"},"scope":7767,"src":"12736:433:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7229,"nodeType":"Block","src":"13689:267:25","statements":[{"body":{"id":7225,"nodeType":"Block","src":"13718:211:25","statements":[{"assignments":[7198],"declarations":[{"constant":false,"id":7198,"mutability":"mutable","name":"mid","nameLocation":"13740:3:25","nodeType":"VariableDeclaration","scope":7225,"src":"13732:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7197,"name":"uint256","nodeType":"ElementaryTypeName","src":"13732:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7204,"initialValue":{"arguments":[{"id":7201,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"13759:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7202,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"13764:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7199,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"13746:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4335_$","typeString":"type(library Math)"}},"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13751:7:25","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3509,"src":"13746:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13746:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13732:37:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7206,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"13801:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":7207,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7198,"src":"13807:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7205,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7245,"src":"13787:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6734_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13787:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13812:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6731,"src":"13787:29:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7210,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"13819:3:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13787:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7223,"nodeType":"Block","src":"13876:43:25","statements":[{"expression":{"id":7221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7219,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"13894:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7220,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7198,"src":"13901:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13894:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7222,"nodeType":"ExpressionStatement","src":"13894:10:25"}]},"id":7224,"nodeType":"IfStatement","src":"13783:136:25","trueBody":{"id":7218,"nodeType":"Block","src":"13824:46:25","statements":[{"expression":{"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7212,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"13842:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7213,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7198,"src":"13848:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13854:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13848:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13842:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7217,"nodeType":"ExpressionStatement","src":"13842:13:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7194,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"13706:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7195,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"13712:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13706:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7226,"nodeType":"WhileStatement","src":"13699:230:25"},{"expression":{"id":7227,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"13945:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7193,"id":7228,"nodeType":"Return","src":"13938:11:25"}]},"documentation":{"id":7179,"nodeType":"StructuredDocumentation","src":"13175:343:25","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7230,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"13532:18:25","nodeType":"FunctionDefinition","parameters":{"id":7190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7183,"mutability":"mutable","name":"self","nameLocation":"13584:4:25","nodeType":"VariableDeclaration","scope":7230,"src":"13560:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7181,"nodeType":"UserDefinedTypeName","pathNode":{"id":7180,"name":"Checkpoint208","nameLocations":["13560:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"13560:13:25"},"referencedDeclaration":6734,"src":"13560:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7182,"nodeType":"ArrayTypeName","src":"13560:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":7185,"mutability":"mutable","name":"key","nameLocation":"13605:3:25","nodeType":"VariableDeclaration","scope":7230,"src":"13598:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7184,"name":"uint48","nodeType":"ElementaryTypeName","src":"13598:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7187,"mutability":"mutable","name":"low","nameLocation":"13626:3:25","nodeType":"VariableDeclaration","scope":7230,"src":"13618:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7186,"name":"uint256","nodeType":"ElementaryTypeName","src":"13618:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7189,"mutability":"mutable","name":"high","nameLocation":"13647:4:25","nodeType":"VariableDeclaration","scope":7230,"src":"13639:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7188,"name":"uint256","nodeType":"ElementaryTypeName","src":"13639:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13550:107:25"},"returnParameters":{"id":7193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7230,"src":"13680:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7191,"name":"uint256","nodeType":"ElementaryTypeName","src":"13680:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13679:9:25"},"scope":7767,"src":"13523:433:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7244,"nodeType":"Block","src":"14239:125:25","statements":[{"AST":{"nativeSrc":"14258:100:25","nodeType":"YulBlock","src":"14258:100:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14279:1:25","nodeType":"YulLiteral","src":"14279:1:25","type":"","value":"0"},{"name":"self.slot","nativeSrc":"14282:9:25","nodeType":"YulIdentifier","src":"14282:9:25"}],"functionName":{"name":"mstore","nativeSrc":"14272:6:25","nodeType":"YulIdentifier","src":"14272:6:25"},"nativeSrc":"14272:20:25","nodeType":"YulFunctionCall","src":"14272:20:25"},"nativeSrc":"14272:20:25","nodeType":"YulExpressionStatement","src":"14272:20:25"},{"nativeSrc":"14305:43:25","nodeType":"YulAssignment","src":"14305:43:25","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14334:1:25","nodeType":"YulLiteral","src":"14334:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"14337:4:25","nodeType":"YulLiteral","src":"14337:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"14324:9:25","nodeType":"YulIdentifier","src":"14324:9:25"},"nativeSrc":"14324:18:25","nodeType":"YulFunctionCall","src":"14324:18:25"},{"name":"pos","nativeSrc":"14344:3:25","nodeType":"YulIdentifier","src":"14344:3:25"}],"functionName":{"name":"add","nativeSrc":"14320:3:25","nodeType":"YulIdentifier","src":"14320:3:25"},"nativeSrc":"14320:28:25","nodeType":"YulFunctionCall","src":"14320:28:25"},"variableNames":[{"name":"result.slot","nativeSrc":"14305:11:25","nodeType":"YulIdentifier","src":"14305:11:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7237,"isOffset":false,"isSlot":false,"src":"14344:3:25","valueSize":1},{"declaration":7241,"isOffset":false,"isSlot":true,"src":"14305:11:25","suffix":"slot","valueSize":1},{"declaration":7235,"isOffset":false,"isSlot":true,"src":"14282:9:25","suffix":"slot","valueSize":1}],"id":7243,"nodeType":"InlineAssembly","src":"14249:109:25"}]},"documentation":{"id":7231,"nodeType":"StructuredDocumentation","src":"13962:132:25","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":7245,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"14108:13:25","nodeType":"FunctionDefinition","parameters":{"id":7238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7235,"mutability":"mutable","name":"self","nameLocation":"14155:4:25","nodeType":"VariableDeclaration","scope":7245,"src":"14131:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7233,"nodeType":"UserDefinedTypeName","pathNode":{"id":7232,"name":"Checkpoint208","nameLocations":["14131:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"14131:13:25"},"referencedDeclaration":6734,"src":"14131:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7234,"nodeType":"ArrayTypeName","src":"14131:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6734_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":7237,"mutability":"mutable","name":"pos","nameLocation":"14177:3:25","nodeType":"VariableDeclaration","scope":7245,"src":"14169:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7236,"name":"uint256","nodeType":"ElementaryTypeName","src":"14169:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14121:65:25"},"returnParameters":{"id":7242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7241,"mutability":"mutable","name":"result","nameLocation":"14231:6:25","nodeType":"VariableDeclaration","scope":7245,"src":"14209:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":7240,"nodeType":"UserDefinedTypeName","pathNode":{"id":7239,"name":"Checkpoint208","nameLocations":["14209:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"14209:13:25"},"referencedDeclaration":6734,"src":"14209:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6734_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"14208:30:25"},"scope":7767,"src":"14099:265:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":7250,"members":[{"constant":false,"id":7249,"mutability":"mutable","name":"_checkpoints","nameLocation":"14412:12:25","nodeType":"VariableDeclaration","scope":7250,"src":"14396:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":7247,"nodeType":"UserDefinedTypeName","pathNode":{"id":7246,"name":"Checkpoint160","nameLocations":["14396:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":7255,"src":"14396:13:25"},"referencedDeclaration":7255,"src":"14396:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":7248,"nodeType":"ArrayTypeName","src":"14396:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"14377:8:25","nodeType":"StructDefinition","scope":7767,"src":"14370:61:25","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":7255,"members":[{"constant":false,"id":7252,"mutability":"mutable","name":"_key","nameLocation":"14475:4:25","nodeType":"VariableDeclaration","scope":7255,"src":"14468:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7251,"name":"uint96","nodeType":"ElementaryTypeName","src":"14468:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7254,"mutability":"mutable","name":"_value","nameLocation":"14497:6:25","nodeType":"VariableDeclaration","scope":7255,"src":"14489:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7253,"name":"uint160","nodeType":"ElementaryTypeName","src":"14489:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"14444:13:25","nodeType":"StructDefinition","scope":7767,"src":"14437:73:25","visibility":"public"},{"body":{"id":7277,"nodeType":"Block","src":"14923:62:25","statements":[{"expression":{"arguments":[{"expression":{"id":7271,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"14948:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14953:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"14948:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7273,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"14967:3:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":7274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"14972:5:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7270,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[6605,7126,7647],"referencedDeclaration":7647,"src":"14940:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14940:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":7269,"id":7276,"nodeType":"Return","src":"14933:45:25"}]},"documentation":{"id":7256,"nodeType":"StructuredDocumentation","src":"14516:302:25","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n library."},"id":7278,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"14832:4:25","nodeType":"FunctionDefinition","parameters":{"id":7264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7259,"mutability":"mutable","name":"self","nameLocation":"14854:4:25","nodeType":"VariableDeclaration","scope":7278,"src":"14837:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7258,"nodeType":"UserDefinedTypeName","pathNode":{"id":7257,"name":"Trace160","nameLocations":["14837:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":7250,"src":"14837:8:25"},"referencedDeclaration":7250,"src":"14837:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7261,"mutability":"mutable","name":"key","nameLocation":"14867:3:25","nodeType":"VariableDeclaration","scope":7278,"src":"14860:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7260,"name":"uint96","nodeType":"ElementaryTypeName","src":"14860:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7263,"mutability":"mutable","name":"value","nameLocation":"14880:5:25","nodeType":"VariableDeclaration","scope":7278,"src":"14872:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7262,"name":"uint160","nodeType":"ElementaryTypeName","src":"14872:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14836:50:25"},"returnParameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7278,"src":"14905:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7265,"name":"uint160","nodeType":"ElementaryTypeName","src":"14905:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":7268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7278,"src":"14914:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7267,"name":"uint160","nodeType":"ElementaryTypeName","src":"14914:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14904:18:25"},"scope":7767,"src":"14823:162:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7317,"nodeType":"Block","src":"15238:207:25","statements":[{"assignments":[7290],"declarations":[{"constant":false,"id":7290,"mutability":"mutable","name":"len","nameLocation":"15256:3:25","nodeType":"VariableDeclaration","scope":7317,"src":"15248:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7289,"name":"uint256","nodeType":"ElementaryTypeName","src":"15248:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7294,"initialValue":{"expression":{"expression":{"id":7291,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"15262:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15267:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"15262:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15280:6:25","memberName":"length","nodeType":"MemberAccess","src":"15262:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15248:38:25"},{"assignments":[7296],"declarations":[{"constant":false,"id":7296,"mutability":"mutable","name":"pos","nameLocation":"15304:3:25","nodeType":"VariableDeclaration","scope":7317,"src":"15296:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7295,"name":"uint256","nodeType":"ElementaryTypeName","src":"15296:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7304,"initialValue":{"arguments":[{"expression":{"id":7298,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"15329:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15334:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"15329:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7300,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7284,"src":"15348:3:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":7301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15353:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7302,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"15356:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7297,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6709,7230,7751],"referencedDeclaration":7751,"src":"15310:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15310:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15296:64:25"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7305,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"15377:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7306,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"15384:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15377:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7310,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"15408:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15413:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"15408:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7312,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"15427:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7309,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7766,"src":"15394:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7255_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15394:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15432:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7254,"src":"15394:44:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15377:61:25","trueExpression":{"hexValue":"30","id":7308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15390:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7288,"id":7316,"nodeType":"Return","src":"15370:68:25"}]},"documentation":{"id":7279,"nodeType":"StructuredDocumentation","src":"14991:154:25","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":7318,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"15159:11:25","nodeType":"FunctionDefinition","parameters":{"id":7285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7282,"mutability":"mutable","name":"self","nameLocation":"15188:4:25","nodeType":"VariableDeclaration","scope":7318,"src":"15171:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7281,"nodeType":"UserDefinedTypeName","pathNode":{"id":7280,"name":"Trace160","nameLocations":["15171:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":7250,"src":"15171:8:25"},"referencedDeclaration":7250,"src":"15171:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7284,"mutability":"mutable","name":"key","nameLocation":"15201:3:25","nodeType":"VariableDeclaration","scope":7318,"src":"15194:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7283,"name":"uint96","nodeType":"ElementaryTypeName","src":"15194:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15170:35:25"},"returnParameters":{"id":7288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7318,"src":"15229:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7286,"name":"uint160","nodeType":"ElementaryTypeName","src":"15229:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15228:9:25"},"scope":7767,"src":"15150:295:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7359,"nodeType":"Block","src":"15700:209:25","statements":[{"assignments":[7330],"declarations":[{"constant":false,"id":7330,"mutability":"mutable","name":"len","nameLocation":"15718:3:25","nodeType":"VariableDeclaration","scope":7359,"src":"15710:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7329,"name":"uint256","nodeType":"ElementaryTypeName","src":"15710:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7334,"initialValue":{"expression":{"expression":{"id":7331,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"15724:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15729:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"15724:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15742:6:25","memberName":"length","nodeType":"MemberAccess","src":"15724:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15710:38:25"},{"assignments":[7336],"declarations":[{"constant":false,"id":7336,"mutability":"mutable","name":"pos","nameLocation":"15766:3:25","nodeType":"VariableDeclaration","scope":7359,"src":"15758:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7335,"name":"uint256","nodeType":"ElementaryTypeName","src":"15758:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7344,"initialValue":{"arguments":[{"expression":{"id":7338,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"15791:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15796:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"15791:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7340,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"15810:3:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":7341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15815:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7342,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"15818:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7337,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6657,7178,7699],"referencedDeclaration":7699,"src":"15772:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15772:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15758:64:25"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7345,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"15839:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15846:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15839:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7350,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"15868:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15873:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"15868:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7352,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"15887:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15893:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15887:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7349,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7766,"src":"15854:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7255_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15854:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7356,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15896:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7254,"src":"15854:48:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15839:63:25","trueExpression":{"hexValue":"30","id":7348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15850:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7328,"id":7358,"nodeType":"Return","src":"15832:70:25"}]},"documentation":{"id":7319,"nodeType":"StructuredDocumentation","src":"15451:156:25","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":7360,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"15621:11:25","nodeType":"FunctionDefinition","parameters":{"id":7325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7322,"mutability":"mutable","name":"self","nameLocation":"15650:4:25","nodeType":"VariableDeclaration","scope":7360,"src":"15633:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7321,"nodeType":"UserDefinedTypeName","pathNode":{"id":7320,"name":"Trace160","nameLocations":["15633:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":7250,"src":"15633:8:25"},"referencedDeclaration":7250,"src":"15633:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7324,"mutability":"mutable","name":"key","nameLocation":"15663:3:25","nodeType":"VariableDeclaration","scope":7360,"src":"15656:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7323,"name":"uint96","nodeType":"ElementaryTypeName","src":"15656:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15632:35:25"},"returnParameters":{"id":7328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7360,"src":"15691:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7326,"name":"uint160","nodeType":"ElementaryTypeName","src":"15691:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15690:9:25"},"scope":7767,"src":"15612:297:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7444,"nodeType":"Block","src":"16308:512:25","statements":[{"assignments":[7372],"declarations":[{"constant":false,"id":7372,"mutability":"mutable","name":"len","nameLocation":"16326:3:25","nodeType":"VariableDeclaration","scope":7444,"src":"16318:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7371,"name":"uint256","nodeType":"ElementaryTypeName","src":"16318:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7376,"initialValue":{"expression":{"expression":{"id":7373,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"16332:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16337:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"16332:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16350:6:25","memberName":"length","nodeType":"MemberAccess","src":"16332:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16318:38:25"},{"assignments":[7378],"declarations":[{"constant":false,"id":7378,"mutability":"mutable","name":"low","nameLocation":"16375:3:25","nodeType":"VariableDeclaration","scope":7444,"src":"16367:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7377,"name":"uint256","nodeType":"ElementaryTypeName","src":"16367:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7380,"initialValue":{"hexValue":"30","id":7379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16381:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16367:15:25"},{"assignments":[7382],"declarations":[{"constant":false,"id":7382,"mutability":"mutable","name":"high","nameLocation":"16400:4:25","nodeType":"VariableDeclaration","scope":7444,"src":"16392:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7381,"name":"uint256","nodeType":"ElementaryTypeName","src":"16392:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7384,"initialValue":{"id":7383,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"16407:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16392:18:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7385,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"16425:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":7386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16431:1:25","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"16425:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7419,"nodeType":"IfStatement","src":"16421:234:25","trueBody":{"id":7418,"nodeType":"Block","src":"16434:221:25","statements":[{"assignments":[7389],"declarations":[{"constant":false,"id":7389,"mutability":"mutable","name":"mid","nameLocation":"16456:3:25","nodeType":"VariableDeclaration","scope":7418,"src":"16448:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7388,"name":"uint256","nodeType":"ElementaryTypeName","src":"16448:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7396,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7390,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"16462:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7393,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"16478:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7391,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"16468:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4335_$","typeString":"type(library Math)"}},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16473:4:25","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"16468:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16468:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16462:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16448:34:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7397,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"16500:3:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":7399,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"16520:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16525:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"16520:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7401,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"16539:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7398,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7766,"src":"16506:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7255_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16506:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16544:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7252,"src":"16506:42:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16500:48:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7416,"nodeType":"Block","src":"16599:46:25","statements":[{"expression":{"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7410,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7378,"src":"16617:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7411,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"16623:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16629:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16623:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16617:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7415,"nodeType":"ExpressionStatement","src":"16617:13:25"}]},"id":7417,"nodeType":"IfStatement","src":"16496:149:25","trueBody":{"id":7409,"nodeType":"Block","src":"16550:43:25","statements":[{"expression":{"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7405,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"16568:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7406,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"16575:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16568:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7408,"nodeType":"ExpressionStatement","src":"16568:10:25"}]}}]}},{"assignments":[7421],"declarations":[{"constant":false,"id":7421,"mutability":"mutable","name":"pos","nameLocation":"16673:3:25","nodeType":"VariableDeclaration","scope":7444,"src":"16665:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7420,"name":"uint256","nodeType":"ElementaryTypeName","src":"16665:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7429,"initialValue":{"arguments":[{"expression":{"id":7423,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"16698:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16703:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"16698:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7425,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"16717:3:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":7426,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7378,"src":"16722:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7427,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"16727:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7422,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6657,7178,7699],"referencedDeclaration":7699,"src":"16679:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16679:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16665:67:25"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7430,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"16750:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16757:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16750:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7435,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"16779:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16784:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"16779:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7437,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"16798:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16804:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16798:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7434,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7766,"src":"16765:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7255_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16765:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16807:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7254,"src":"16765:48:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16750:63:25","trueExpression":{"hexValue":"30","id":7433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16761:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7370,"id":7443,"nodeType":"Return","src":"16743:70:25"}]},"documentation":{"id":7361,"nodeType":"StructuredDocumentation","src":"15915:294:25","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":7445,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"16223:17:25","nodeType":"FunctionDefinition","parameters":{"id":7367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7364,"mutability":"mutable","name":"self","nameLocation":"16258:4:25","nodeType":"VariableDeclaration","scope":7445,"src":"16241:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7363,"nodeType":"UserDefinedTypeName","pathNode":{"id":7362,"name":"Trace160","nameLocations":["16241:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":7250,"src":"16241:8:25"},"referencedDeclaration":7250,"src":"16241:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7366,"mutability":"mutable","name":"key","nameLocation":"16271:3:25","nodeType":"VariableDeclaration","scope":7445,"src":"16264:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7365,"name":"uint96","nodeType":"ElementaryTypeName","src":"16264:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"16240:35:25"},"returnParameters":{"id":7370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7445,"src":"16299:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7368,"name":"uint160","nodeType":"ElementaryTypeName","src":"16299:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16298:9:25"},"scope":7767,"src":"16214:606:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7474,"nodeType":"Block","src":"17011:135:25","statements":[{"assignments":[7455],"declarations":[{"constant":false,"id":7455,"mutability":"mutable","name":"pos","nameLocation":"17029:3:25","nodeType":"VariableDeclaration","scope":7474,"src":"17021:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7454,"name":"uint256","nodeType":"ElementaryTypeName","src":"17021:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7459,"initialValue":{"expression":{"expression":{"id":7456,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"17035:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17040:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"17035:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17053:6:25","memberName":"length","nodeType":"MemberAccess","src":"17035:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17021:38:25"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7460,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"17076:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17083:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17076:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7465,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"17105:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17110:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"17105:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7467,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"17124:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17130:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17124:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7464,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7766,"src":"17091:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7255_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17091:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17133:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7254,"src":"17091:48:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17076:63:25","trueExpression":{"hexValue":"30","id":7463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17087:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7453,"id":7473,"nodeType":"Return","src":"17069:70:25"}]},"documentation":{"id":7446,"nodeType":"StructuredDocumentation","src":"16826:109:25","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":7475,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"16949:6:25","nodeType":"FunctionDefinition","parameters":{"id":7450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7449,"mutability":"mutable","name":"self","nameLocation":"16973:4:25","nodeType":"VariableDeclaration","scope":7475,"src":"16956:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7448,"nodeType":"UserDefinedTypeName","pathNode":{"id":7447,"name":"Trace160","nameLocations":["16956:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":7250,"src":"16956:8:25"},"referencedDeclaration":7250,"src":"16956:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"16955:23:25"},"returnParameters":{"id":7453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7475,"src":"17002:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7451,"name":"uint160","nodeType":"ElementaryTypeName","src":"17002:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17001:9:25"},"scope":7767,"src":"16940:206:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7523,"nodeType":"Block","src":"17439:274:25","statements":[{"assignments":[7489],"declarations":[{"constant":false,"id":7489,"mutability":"mutable","name":"pos","nameLocation":"17457:3:25","nodeType":"VariableDeclaration","scope":7523,"src":"17449:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7488,"name":"uint256","nodeType":"ElementaryTypeName","src":"17449:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7493,"initialValue":{"expression":{"expression":{"id":7490,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"17463:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17468:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"17463:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17481:6:25","memberName":"length","nodeType":"MemberAccess","src":"17463:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17449:38:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7494,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"17501:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17508:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17501:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7521,"nodeType":"Block","src":"17562:145:25","statements":[{"assignments":[7505],"declarations":[{"constant":false,"id":7505,"mutability":"mutable","name":"ckpt","nameLocation":"17597:4:25","nodeType":"VariableDeclaration","scope":7521,"src":"17576:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":7504,"nodeType":"UserDefinedTypeName","pathNode":{"id":7503,"name":"Checkpoint160","nameLocations":["17576:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":7255,"src":"17576:13:25"},"referencedDeclaration":7255,"src":"17576:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":7513,"initialValue":{"arguments":[{"expression":{"id":7507,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"17618:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17623:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"17618:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7509,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"17637:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17643:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17637:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7506,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7766,"src":"17604:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7255_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17604:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17576:69:25"},{"expression":{"components":[{"hexValue":"74727565","id":7514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17667:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":7515,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"17673:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":7516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17678:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7252,"src":"17673:9:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":7517,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"17684:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":7518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17689:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7254,"src":"17684:11:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":7519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17666:30:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":7487,"id":7520,"nodeType":"Return","src":"17659:37:25"}]},"id":7522,"nodeType":"IfStatement","src":"17497:210:25","trueBody":{"id":7502,"nodeType":"Block","src":"17511:45:25","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17533:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17540:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17543:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17532:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":7487,"id":7501,"nodeType":"Return","src":"17525:20:25"}]}}]},"documentation":{"id":7476,"nodeType":"StructuredDocumentation","src":"17152:168:25","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":7524,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"17334:16:25","nodeType":"FunctionDefinition","parameters":{"id":7480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7479,"mutability":"mutable","name":"self","nameLocation":"17368:4:25","nodeType":"VariableDeclaration","scope":7524,"src":"17351:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7478,"nodeType":"UserDefinedTypeName","pathNode":{"id":7477,"name":"Trace160","nameLocations":["17351:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":7250,"src":"17351:8:25"},"referencedDeclaration":7250,"src":"17351:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17350:23:25"},"returnParameters":{"id":7487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7482,"mutability":"mutable","name":"exists","nameLocation":"17402:6:25","nodeType":"VariableDeclaration","scope":7524,"src":"17397:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7481,"name":"bool","nodeType":"ElementaryTypeName","src":"17397:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7484,"mutability":"mutable","name":"_key","nameLocation":"17417:4:25","nodeType":"VariableDeclaration","scope":7524,"src":"17410:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7483,"name":"uint96","nodeType":"ElementaryTypeName","src":"17410:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7486,"mutability":"mutable","name":"_value","nameLocation":"17431:6:25","nodeType":"VariableDeclaration","scope":7524,"src":"17423:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7485,"name":"uint160","nodeType":"ElementaryTypeName","src":"17423:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17396:42:25"},"scope":7767,"src":"17325:388:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7537,"nodeType":"Block","src":"17852:48:25","statements":[{"expression":{"expression":{"expression":{"id":7533,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"17869:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17874:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"17869:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17887:6:25","memberName":"length","nodeType":"MemberAccess","src":"17869:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7532,"id":7536,"nodeType":"Return","src":"17862:31:25"}]},"documentation":{"id":7525,"nodeType":"StructuredDocumentation","src":"17719:57:25","text":" @dev Returns the number of checkpoint."},"id":7538,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"17790:6:25","nodeType":"FunctionDefinition","parameters":{"id":7529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7528,"mutability":"mutable","name":"self","nameLocation":"17814:4:25","nodeType":"VariableDeclaration","scope":7538,"src":"17797:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7527,"nodeType":"UserDefinedTypeName","pathNode":{"id":7526,"name":"Trace160","nameLocations":["17797:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":7250,"src":"17797:8:25"},"referencedDeclaration":7250,"src":"17797:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17796:23:25"},"returnParameters":{"id":7532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7538,"src":"17843:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7530,"name":"uint256","nodeType":"ElementaryTypeName","src":"17843:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17842:9:25"},"scope":7767,"src":"17781:119:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7555,"nodeType":"Block","src":"18064:46:25","statements":[{"expression":{"baseExpression":{"expression":{"id":7550,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"18081:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18086:12:25","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"18081:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7553,"indexExpression":{"id":7552,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"18099:3:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18081:22:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref"}},"functionReturnParameters":7549,"id":7554,"nodeType":"Return","src":"18074:29:25"}]},"documentation":{"id":7539,"nodeType":"StructuredDocumentation","src":"17906:61:25","text":" @dev Returns checkpoint at given position."},"id":7556,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"17981:2:25","nodeType":"FunctionDefinition","parameters":{"id":7545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7542,"mutability":"mutable","name":"self","nameLocation":"18001:4:25","nodeType":"VariableDeclaration","scope":7556,"src":"17984:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7541,"nodeType":"UserDefinedTypeName","pathNode":{"id":7540,"name":"Trace160","nameLocations":["17984:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":7250,"src":"17984:8:25"},"referencedDeclaration":7250,"src":"17984:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7250_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7544,"mutability":"mutable","name":"pos","nameLocation":"18014:3:25","nodeType":"VariableDeclaration","scope":7556,"src":"18007:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7543,"name":"uint32","nodeType":"ElementaryTypeName","src":"18007:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"17983:35:25"},"returnParameters":{"id":7549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7556,"src":"18042:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":7547,"nodeType":"UserDefinedTypeName","pathNode":{"id":7546,"name":"Checkpoint160","nameLocations":["18042:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":7255,"src":"18042:13:25"},"referencedDeclaration":7255,"src":"18042:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"18041:22:25"},"scope":7767,"src":"17972:138:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7646,"nodeType":"Block","src":"18395:761:25","statements":[{"assignments":[7573],"declarations":[{"constant":false,"id":7573,"mutability":"mutable","name":"pos","nameLocation":"18413:3:25","nodeType":"VariableDeclaration","scope":7646,"src":"18405:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7572,"name":"uint256","nodeType":"ElementaryTypeName","src":"18405:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7576,"initialValue":{"expression":{"id":7574,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"18419:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18424:6:25","memberName":"length","nodeType":"MemberAccess","src":"18419:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18405:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7577,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"18445:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18451:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18445:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7644,"nodeType":"Block","src":"19042:108:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":7635,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"19087:3:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":7636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"19100:5:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7634,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"19066:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$7255_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19081:4:25","19092:6:25"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19066:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$7255_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":7631,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"19056:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19061:4:25","memberName":"push","nodeType":"MemberAccess","src":"19056:9:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$7255_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19056:52:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7639,"nodeType":"ExpressionStatement","src":"19056:52:25"},{"expression":{"components":[{"hexValue":"30","id":7640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19130:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"19133:5:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":7642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19129:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":7571,"id":7643,"nodeType":"Return","src":"19122:17:25"}]},"id":7645,"nodeType":"IfStatement","src":"18441:709:25","trueBody":{"id":7630,"nodeType":"Block","src":"18454:582:25","statements":[{"assignments":[7582],"declarations":[{"constant":false,"id":7582,"mutability":"mutable","name":"last","nameLocation":"18541:4:25","nodeType":"VariableDeclaration","scope":7630,"src":"18520:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":7581,"nodeType":"UserDefinedTypeName","pathNode":{"id":7580,"name":"Checkpoint160","nameLocations":["18520:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":7255,"src":"18520:13:25"},"referencedDeclaration":7255,"src":"18520:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":7589,"initialValue":{"arguments":[{"id":7584,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"18562:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7585,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"18568:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18574:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18568:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7583,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7766,"src":"18548:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7255_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18548:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"18520:56:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7590,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"18650:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":7591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18655:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7252,"src":"18650:9:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7592,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"18662:3:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18650:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7598,"nodeType":"IfStatement","src":"18646:91:25","trueBody":{"id":7597,"nodeType":"Block","src":"18667:70:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7594,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"18692:28:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18692:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7596,"nodeType":"RevertStatement","src":"18685:37:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7599,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"18800:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":7600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18805:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7252,"src":"18800:9:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7601,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"18813:3:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18800:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7623,"nodeType":"Block","src":"18900:85:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":7618,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"18949:3:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":7619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"18962:5:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7617,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"18928:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$7255_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["18943:4:25","18954:6:25"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"18928:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$7255_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":7614,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"18918:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18923:4:25","memberName":"push","nodeType":"MemberAccess","src":"18918:9:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$7255_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18918:52:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7622,"nodeType":"ExpressionStatement","src":"18918:52:25"}]},"id":7624,"nodeType":"IfStatement","src":"18796:189:25","trueBody":{"id":7613,"nodeType":"Block","src":"18818:76:25","statements":[{"expression":{"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":7604,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"18850:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7605,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"18856:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18862:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18856:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7603,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7766,"src":"18836:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7255_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18836:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18865:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7254,"src":"18836:35:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"18874:5:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"18836:43:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7612,"nodeType":"ExpressionStatement","src":"18836:43:25"}]}},{"expression":{"components":[{"expression":{"id":7625,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"19006:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":7626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19011:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7254,"src":"19006:11:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":7627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"19019:5:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":7628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19005:20:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":7571,"id":7629,"nodeType":"Return","src":"18998:27:25"}]}}]},"documentation":{"id":7557,"nodeType":"StructuredDocumentation","src":"18116:165:25","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":7647,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"18295:7:25","nodeType":"FunctionDefinition","parameters":{"id":7566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7561,"mutability":"mutable","name":"self","nameLocation":"18327:4:25","nodeType":"VariableDeclaration","scope":7647,"src":"18303:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":7559,"nodeType":"UserDefinedTypeName","pathNode":{"id":7558,"name":"Checkpoint160","nameLocations":["18303:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":7255,"src":"18303:13:25"},"referencedDeclaration":7255,"src":"18303:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":7560,"nodeType":"ArrayTypeName","src":"18303:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":7563,"mutability":"mutable","name":"key","nameLocation":"18340:3:25","nodeType":"VariableDeclaration","scope":7647,"src":"18333:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7562,"name":"uint96","nodeType":"ElementaryTypeName","src":"18333:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7565,"mutability":"mutable","name":"value","nameLocation":"18353:5:25","nodeType":"VariableDeclaration","scope":7647,"src":"18345:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7564,"name":"uint160","nodeType":"ElementaryTypeName","src":"18345:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18302:57:25"},"returnParameters":{"id":7571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7647,"src":"18377:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7567,"name":"uint160","nodeType":"ElementaryTypeName","src":"18377:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":7570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7647,"src":"18386:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7569,"name":"uint160","nodeType":"ElementaryTypeName","src":"18386:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18376:18:25"},"scope":7767,"src":"18286:870:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7698,"nodeType":"Block","src":"19675:267:25","statements":[{"body":{"id":7694,"nodeType":"Block","src":"19704:211:25","statements":[{"assignments":[7667],"declarations":[{"constant":false,"id":7667,"mutability":"mutable","name":"mid","nameLocation":"19726:3:25","nodeType":"VariableDeclaration","scope":7694,"src":"19718:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7666,"name":"uint256","nodeType":"ElementaryTypeName","src":"19718:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7673,"initialValue":{"arguments":[{"id":7670,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7656,"src":"19745:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7671,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"19750:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7668,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"19732:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4335_$","typeString":"type(library Math)"}},"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19737:7:25","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3509,"src":"19732:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19732:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19718:37:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7675,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7652,"src":"19787:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":7676,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"19793:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7674,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7766,"src":"19773:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7255_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19773:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19798:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7252,"src":"19773:29:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7679,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"19805:3:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19773:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7692,"nodeType":"Block","src":"19859:46:25","statements":[{"expression":{"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7686,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7656,"src":"19877:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7687,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"19883:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19889:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19883:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19877:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7691,"nodeType":"ExpressionStatement","src":"19877:13:25"}]},"id":7693,"nodeType":"IfStatement","src":"19769:136:25","trueBody":{"id":7685,"nodeType":"Block","src":"19810:43:25","statements":[{"expression":{"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7681,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"19828:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7682,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"19835:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19828:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7684,"nodeType":"ExpressionStatement","src":"19828:10:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7663,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7656,"src":"19692:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7664,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"19698:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19692:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7695,"nodeType":"WhileStatement","src":"19685:230:25"},{"expression":{"id":7696,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"19931:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7662,"id":7697,"nodeType":"Return","src":"19924:11:25"}]},"documentation":{"id":7648,"nodeType":"StructuredDocumentation","src":"19162:342:25","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7699,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"19518:18:25","nodeType":"FunctionDefinition","parameters":{"id":7659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7652,"mutability":"mutable","name":"self","nameLocation":"19570:4:25","nodeType":"VariableDeclaration","scope":7699,"src":"19546:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":7650,"nodeType":"UserDefinedTypeName","pathNode":{"id":7649,"name":"Checkpoint160","nameLocations":["19546:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":7255,"src":"19546:13:25"},"referencedDeclaration":7255,"src":"19546:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":7651,"nodeType":"ArrayTypeName","src":"19546:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":7654,"mutability":"mutable","name":"key","nameLocation":"19591:3:25","nodeType":"VariableDeclaration","scope":7699,"src":"19584:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7653,"name":"uint96","nodeType":"ElementaryTypeName","src":"19584:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7656,"mutability":"mutable","name":"low","nameLocation":"19612:3:25","nodeType":"VariableDeclaration","scope":7699,"src":"19604:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7655,"name":"uint256","nodeType":"ElementaryTypeName","src":"19604:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7658,"mutability":"mutable","name":"high","nameLocation":"19633:4:25","nodeType":"VariableDeclaration","scope":7699,"src":"19625:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7657,"name":"uint256","nodeType":"ElementaryTypeName","src":"19625:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19536:107:25"},"returnParameters":{"id":7662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7699,"src":"19666:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7660,"name":"uint256","nodeType":"ElementaryTypeName","src":"19666:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19665:9:25"},"scope":7767,"src":"19509:433:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7750,"nodeType":"Block","src":"20462:267:25","statements":[{"body":{"id":7746,"nodeType":"Block","src":"20491:211:25","statements":[{"assignments":[7719],"declarations":[{"constant":false,"id":7719,"mutability":"mutable","name":"mid","nameLocation":"20513:3:25","nodeType":"VariableDeclaration","scope":7746,"src":"20505:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7718,"name":"uint256","nodeType":"ElementaryTypeName","src":"20505:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7725,"initialValue":{"arguments":[{"id":7722,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7708,"src":"20532:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7723,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"20537:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7720,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"20519:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4335_$","typeString":"type(library Math)"}},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20524:7:25","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3509,"src":"20519:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20505:37:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7727,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"20574:4:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":7728,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"20580:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7726,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6724,7245,7766],"referencedDeclaration":7766,"src":"20560:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7255_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20560:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20585:4:25","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7252,"src":"20560:29:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7731,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"20592:3:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20560:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7744,"nodeType":"Block","src":"20649:43:25","statements":[{"expression":{"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7740,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"20667:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7741,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"20674:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20667:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7743,"nodeType":"ExpressionStatement","src":"20667:10:25"}]},"id":7745,"nodeType":"IfStatement","src":"20556:136:25","trueBody":{"id":7739,"nodeType":"Block","src":"20597:46:25","statements":[{"expression":{"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7733,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7708,"src":"20615:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7734,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"20621:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20627:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20621:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20615:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7738,"nodeType":"ExpressionStatement","src":"20615:13:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7715,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7708,"src":"20479:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7716,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"20485:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20479:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7747,"nodeType":"WhileStatement","src":"20472:230:25"},{"expression":{"id":7748,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"20718:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7714,"id":7749,"nodeType":"Return","src":"20711:11:25"}]},"documentation":{"id":7700,"nodeType":"StructuredDocumentation","src":"19948:343:25","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7751,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"20305:18:25","nodeType":"FunctionDefinition","parameters":{"id":7711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7704,"mutability":"mutable","name":"self","nameLocation":"20357:4:25","nodeType":"VariableDeclaration","scope":7751,"src":"20333:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":7702,"nodeType":"UserDefinedTypeName","pathNode":{"id":7701,"name":"Checkpoint160","nameLocations":["20333:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":7255,"src":"20333:13:25"},"referencedDeclaration":7255,"src":"20333:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":7703,"nodeType":"ArrayTypeName","src":"20333:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":7706,"mutability":"mutable","name":"key","nameLocation":"20378:3:25","nodeType":"VariableDeclaration","scope":7751,"src":"20371:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7705,"name":"uint96","nodeType":"ElementaryTypeName","src":"20371:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7708,"mutability":"mutable","name":"low","nameLocation":"20399:3:25","nodeType":"VariableDeclaration","scope":7751,"src":"20391:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7707,"name":"uint256","nodeType":"ElementaryTypeName","src":"20391:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7710,"mutability":"mutable","name":"high","nameLocation":"20420:4:25","nodeType":"VariableDeclaration","scope":7751,"src":"20412:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7709,"name":"uint256","nodeType":"ElementaryTypeName","src":"20412:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20323:107:25"},"returnParameters":{"id":7714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7751,"src":"20453:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7712,"name":"uint256","nodeType":"ElementaryTypeName","src":"20453:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20452:9:25"},"scope":7767,"src":"20296:433:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7765,"nodeType":"Block","src":"21012:125:25","statements":[{"AST":{"nativeSrc":"21031:100:25","nodeType":"YulBlock","src":"21031:100:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21052:1:25","nodeType":"YulLiteral","src":"21052:1:25","type":"","value":"0"},{"name":"self.slot","nativeSrc":"21055:9:25","nodeType":"YulIdentifier","src":"21055:9:25"}],"functionName":{"name":"mstore","nativeSrc":"21045:6:25","nodeType":"YulIdentifier","src":"21045:6:25"},"nativeSrc":"21045:20:25","nodeType":"YulFunctionCall","src":"21045:20:25"},"nativeSrc":"21045:20:25","nodeType":"YulExpressionStatement","src":"21045:20:25"},{"nativeSrc":"21078:43:25","nodeType":"YulAssignment","src":"21078:43:25","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"21107:1:25","nodeType":"YulLiteral","src":"21107:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"21110:4:25","nodeType":"YulLiteral","src":"21110:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"21097:9:25","nodeType":"YulIdentifier","src":"21097:9:25"},"nativeSrc":"21097:18:25","nodeType":"YulFunctionCall","src":"21097:18:25"},{"name":"pos","nativeSrc":"21117:3:25","nodeType":"YulIdentifier","src":"21117:3:25"}],"functionName":{"name":"add","nativeSrc":"21093:3:25","nodeType":"YulIdentifier","src":"21093:3:25"},"nativeSrc":"21093:28:25","nodeType":"YulFunctionCall","src":"21093:28:25"},"variableNames":[{"name":"result.slot","nativeSrc":"21078:11:25","nodeType":"YulIdentifier","src":"21078:11:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7758,"isOffset":false,"isSlot":false,"src":"21117:3:25","valueSize":1},{"declaration":7762,"isOffset":false,"isSlot":true,"src":"21078:11:25","suffix":"slot","valueSize":1},{"declaration":7756,"isOffset":false,"isSlot":true,"src":"21055:9:25","suffix":"slot","valueSize":1}],"id":7764,"nodeType":"InlineAssembly","src":"21022:109:25"}]},"documentation":{"id":7752,"nodeType":"StructuredDocumentation","src":"20735:132:25","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":7766,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"20881:13:25","nodeType":"FunctionDefinition","parameters":{"id":7759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7756,"mutability":"mutable","name":"self","nameLocation":"20928:4:25","nodeType":"VariableDeclaration","scope":7766,"src":"20904:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":7754,"nodeType":"UserDefinedTypeName","pathNode":{"id":7753,"name":"Checkpoint160","nameLocations":["20904:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":7255,"src":"20904:13:25"},"referencedDeclaration":7255,"src":"20904:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":7755,"nodeType":"ArrayTypeName","src":"20904:15:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7255_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":7758,"mutability":"mutable","name":"pos","nameLocation":"20950:3:25","nodeType":"VariableDeclaration","scope":7766,"src":"20942:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7757,"name":"uint256","nodeType":"ElementaryTypeName","src":"20942:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20894:65:25"},"returnParameters":{"id":7763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7762,"mutability":"mutable","name":"result","nameLocation":"21004:6:25","nodeType":"VariableDeclaration","scope":7766,"src":"20982:28:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":7761,"nodeType":"UserDefinedTypeName","pathNode":{"id":7760,"name":"Checkpoint160","nameLocations":["20982:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":7255,"src":"20982:13:25"},"referencedDeclaration":7255,"src":"20982:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7255_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"20981:30:25"},"scope":7767,"src":"20872:265:25","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":7768,"src":"668:20471:25","usedErrors":[6203],"usedEvents":[]}],"src":"201:20939:25"},"id":25},"@openzeppelin/contracts/utils/types/Time.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","exportedSymbols":{"Math":[4335],"SafeCast":[6090],"Time":[8042]},"id":8043,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7769,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":7771,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8043,"sourceUnit":4336,"src":"130:38:26","symbolAliases":[{"foreign":{"id":7770,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"138:4:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":7773,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8043,"sourceUnit":6091,"src":"169:46:26","symbolAliases":[{"foreign":{"id":7772,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"177:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Time","contractDependencies":[],"contractKind":"library","documentation":{"id":7774,"nodeType":"StructuredDocumentation","src":"217:422:26","text":" @dev This library provides helpers for manipulating time-related objects.\n It uses the following types:\n - `uint48` for timepoints\n - `uint32` for durations\n While the library doesn't provide specific types for timepoints and duration, it does provide:\n - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n - additional helper functions"},"fullyImplemented":true,"id":8042,"linearizedBaseContracts":[8042],"name":"Time","nameLocation":"648:4:26","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7776,"libraryName":{"id":7775,"name":"Time","nameLocations":["665:4:26"],"nodeType":"IdentifierPath","referencedDeclaration":8042,"src":"665:4:26"},"nodeType":"UsingForDirective","src":"659:17:26"},{"body":{"id":7788,"nodeType":"Block","src":"802:58:26","statements":[{"expression":{"arguments":[{"expression":{"id":7784,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"837:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"837:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7782,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"819:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6090_$","typeString":"type(library SafeCast)"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"828:8:26","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5090,"src":"819:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7781,"id":7787,"nodeType":"Return","src":"812:41:26"}]},"documentation":{"id":7777,"nodeType":"StructuredDocumentation","src":"682:63:26","text":" @dev Get the block timestamp as a Timepoint."},"id":7789,"implemented":true,"kind":"function","modifiers":[],"name":"timestamp","nameLocation":"759:9:26","nodeType":"FunctionDefinition","parameters":{"id":7778,"nodeType":"ParameterList","parameters":[],"src":"768:2:26"},"returnParameters":{"id":7781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7789,"src":"794:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7779,"name":"uint48","nodeType":"ElementaryTypeName","src":"794:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"793:8:26"},"scope":8042,"src":"750:110:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7801,"nodeType":"Block","src":"985:55:26","statements":[{"expression":{"arguments":[{"expression":{"id":7797,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1020:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:6:26","memberName":"number","nodeType":"MemberAccess","src":"1020:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7795,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"1002:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6090_$","typeString":"type(library SafeCast)"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:8:26","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5090,"src":"1002:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7794,"id":7800,"nodeType":"Return","src":"995:38:26"}]},"documentation":{"id":7790,"nodeType":"StructuredDocumentation","src":"866:60:26","text":" @dev Get the block number as a Timepoint."},"id":7802,"implemented":true,"kind":"function","modifiers":[],"name":"blockNumber","nameLocation":"940:11:26","nodeType":"FunctionDefinition","parameters":{"id":7791,"nodeType":"ParameterList","parameters":[],"src":"951:2:26"},"returnParameters":{"id":7794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7802,"src":"977:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7792,"name":"uint48","nodeType":"ElementaryTypeName","src":"977:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"976:8:26"},"scope":8042,"src":"931:109:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"Time.Delay","id":7804,"name":"Delay","nameLocation":"2377:5:26","nodeType":"UserDefinedValueTypeDefinition","src":"2372:22:26","underlyingType":{"id":7803,"name":"uint112","nodeType":"ElementaryTypeName","src":"2386:7:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}},{"body":{"id":7818,"nodeType":"Block","src":"2572:44:26","statements":[{"expression":{"arguments":[{"id":7815,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"2600:8:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":7813,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"2589:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$7804_$","typeString":"type(Time.Delay)"}},"id":7814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2595:4:26","memberName":"wrap","nodeType":"MemberAccess","src":"2589:10:26","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$7804_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},"functionReturnParameters":7812,"id":7817,"nodeType":"Return","src":"2582:27:26"}]},"documentation":{"id":7805,"nodeType":"StructuredDocumentation","src":"2400:103:26","text":" @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature"},"id":7819,"implemented":true,"kind":"function","modifiers":[],"name":"toDelay","nameLocation":"2517:7:26","nodeType":"FunctionDefinition","parameters":{"id":7808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7807,"mutability":"mutable","name":"duration","nameLocation":"2532:8:26","nodeType":"VariableDeclaration","scope":7819,"src":"2525:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7806,"name":"uint32","nodeType":"ElementaryTypeName","src":"2525:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2524:17:26"},"returnParameters":{"id":7812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7819,"src":"2565:5:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"},"typeName":{"id":7810,"nodeType":"UserDefinedTypeName","pathNode":{"id":7809,"name":"Delay","nameLocations":["2565:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":7804,"src":"2565:5:26"},"referencedDeclaration":7804,"src":"2565:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"2564:7:26"},"scope":8042,"src":"2508:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7857,"nodeType":"Block","src":"2964:180:26","statements":[{"assignments":[7835,7837,7839],"declarations":[{"constant":false,"id":7835,"mutability":"mutable","name":"valueBefore","nameLocation":"2982:11:26","nodeType":"VariableDeclaration","scope":7857,"src":"2975:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7834,"name":"uint32","nodeType":"ElementaryTypeName","src":"2975:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7837,"mutability":"mutable","name":"valueAfter","nameLocation":"3002:10:26","nodeType":"VariableDeclaration","scope":7857,"src":"2995:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7836,"name":"uint32","nodeType":"ElementaryTypeName","src":"2995:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7839,"mutability":"mutable","name":"effect","nameLocation":"3021:6:26","nodeType":"VariableDeclaration","scope":7857,"src":"3014:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7838,"name":"uint48","nodeType":"ElementaryTypeName","src":"3014:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":7843,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7840,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7823,"src":"3031:4:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3036:6:26","memberName":"unpack","nodeType":"MemberAccess","referencedDeclaration":8003,"src":"3031:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$7804_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$7804_$","typeString":"function (Time.Delay) pure returns (uint32,uint32,uint48)"}},"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3031:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"2974:70:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7844,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"3061:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7845,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"3071:9:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3061:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":7851,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7835,"src":"3105:11:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7852,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7837,"src":"3118:10:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7853,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"3130:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":7854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3104:33:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3061:76:26","trueExpression":{"components":[{"id":7847,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7837,"src":"3084:10:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":7848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3096:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3099:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3083:18:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(uint32,int_const 0,int_const 0)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":7833,"id":7856,"nodeType":"Return","src":"3054:83:26"}]},"documentation":{"id":7820,"nodeType":"StructuredDocumentation","src":"2622:241:26","text":" @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered."},"id":7858,"implemented":true,"kind":"function","modifiers":[],"name":"_getFullAt","nameLocation":"2877:10:26","nodeType":"FunctionDefinition","parameters":{"id":7826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7823,"mutability":"mutable","name":"self","nameLocation":"2894:4:26","nodeType":"VariableDeclaration","scope":7858,"src":"2888:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"},"typeName":{"id":7822,"nodeType":"UserDefinedTypeName","pathNode":{"id":7821,"name":"Delay","nameLocations":["2888:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":7804,"src":"2888:5:26"},"referencedDeclaration":7804,"src":"2888:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":7825,"mutability":"mutable","name":"timepoint","nameLocation":"2907:9:26","nodeType":"VariableDeclaration","scope":7858,"src":"2900:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7824,"name":"uint48","nodeType":"ElementaryTypeName","src":"2900:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2887:30:26"},"returnParameters":{"id":7833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7858,"src":"2940:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7827,"name":"uint32","nodeType":"ElementaryTypeName","src":"2940:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7858,"src":"2948:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7829,"name":"uint32","nodeType":"ElementaryTypeName","src":"2948:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7858,"src":"2956:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7831,"name":"uint48","nodeType":"ElementaryTypeName","src":"2956:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2939:24:26"},"scope":8042,"src":"2868:276:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7877,"nodeType":"Block","src":"3438:53:26","statements":[{"expression":{"arguments":[{"id":7872,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"3466:4:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},{"arguments":[],"expression":{"argumentTypes":[],"id":7873,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"3472:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3472:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":7871,"name":"_getFullAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7858,"src":"3455:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$7804_$_t_uint48_$returns$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"function (Time.Delay,uint48) pure returns (uint32,uint32,uint48)"}},"id":7875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":7870,"id":7876,"nodeType":"Return","src":"3448:36:26"}]},"documentation":{"id":7859,"nodeType":"StructuredDocumentation","src":"3150:207:26","text":" @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n effect timepoint is 0, then the pending value should not be considered."},"id":7878,"implemented":true,"kind":"function","modifiers":[],"name":"getFull","nameLocation":"3371:7:26","nodeType":"FunctionDefinition","parameters":{"id":7863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7862,"mutability":"mutable","name":"self","nameLocation":"3385:4:26","nodeType":"VariableDeclaration","scope":7878,"src":"3379:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"},"typeName":{"id":7861,"nodeType":"UserDefinedTypeName","pathNode":{"id":7860,"name":"Delay","nameLocations":["3379:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":7804,"src":"3379:5:26"},"referencedDeclaration":7804,"src":"3379:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3378:12:26"},"returnParameters":{"id":7870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7878,"src":"3414:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7864,"name":"uint32","nodeType":"ElementaryTypeName","src":"3414:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7878,"src":"3422:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7866,"name":"uint32","nodeType":"ElementaryTypeName","src":"3422:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7878,"src":"3430:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7868,"name":"uint48","nodeType":"ElementaryTypeName","src":"3430:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3413:24:26"},"scope":8042,"src":"3362:129:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7895,"nodeType":"Block","src":"3604:74:26","statements":[{"assignments":[7888,null,null],"declarations":[{"constant":false,"id":7888,"mutability":"mutable","name":"delay","nameLocation":"3622:5:26","nodeType":"VariableDeclaration","scope":7895,"src":"3615:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7887,"name":"uint32","nodeType":"ElementaryTypeName","src":"3615:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null,null],"id":7892,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7889,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"3635:4:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3640:7:26","memberName":"getFull","nodeType":"MemberAccess","referencedDeclaration":7878,"src":"3635:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$7804_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$7804_$","typeString":"function (Time.Delay) view returns (uint32,uint32,uint48)"}},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3635:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"3614:35:26"},{"expression":{"id":7893,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"3666:5:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7886,"id":7894,"nodeType":"Return","src":"3659:12:26"}]},"documentation":{"id":7879,"nodeType":"StructuredDocumentation","src":"3497:46:26","text":" @dev Get the current value."},"id":7896,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3557:3:26","nodeType":"FunctionDefinition","parameters":{"id":7883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7882,"mutability":"mutable","name":"self","nameLocation":"3567:4:26","nodeType":"VariableDeclaration","scope":7896,"src":"3561:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"},"typeName":{"id":7881,"nodeType":"UserDefinedTypeName","pathNode":{"id":7880,"name":"Delay","nameLocations":["3561:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":7804,"src":"3561:5:26"},"referencedDeclaration":7804,"src":"3561:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3560:12:26"},"returnParameters":{"id":7886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7896,"src":"3596:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7884,"name":"uint32","nodeType":"ElementaryTypeName","src":"3596:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3595:8:26"},"scope":8042,"src":"3548:130:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7951,"nodeType":"Block","src":"4128:234:26","statements":[{"assignments":[7913],"declarations":[{"constant":false,"id":7913,"mutability":"mutable","name":"value","nameLocation":"4145:5:26","nodeType":"VariableDeclaration","scope":7951,"src":"4138:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7912,"name":"uint32","nodeType":"ElementaryTypeName","src":"4138:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":7917,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7914,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"4153:4:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},"id":7915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4158:3:26","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":7896,"src":"4153:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$7804_$returns$_t_uint32_$attached_to$_t_userDefinedValueType$_Delay_$7804_$","typeString":"function (Time.Delay) view returns (uint32)"}},"id":7916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4153:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4138:25:26"},{"assignments":[7919],"declarations":[{"constant":false,"id":7919,"mutability":"mutable","name":"setback","nameLocation":"4180:7:26","nodeType":"VariableDeclaration","scope":7951,"src":"4173:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7918,"name":"uint32","nodeType":"ElementaryTypeName","src":"4173:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":7935,"initialValue":{"arguments":[{"arguments":[{"id":7924,"name":"minSetback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7904,"src":"4206:10:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"4218:5:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7926,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7902,"src":"4226:8:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4218:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":7931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4256:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4218:39:26","trueExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"4237:5:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7929,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7902,"src":"4245:8:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4237:16:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":7922,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"4197:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4335_$","typeString":"type(library Math)"}},"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4202:3:26","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":3468,"src":"4197:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4197:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4190:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7920,"name":"uint32","nodeType":"ElementaryTypeName","src":"4190:6:26","typeDescriptions":{}}},"id":7934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4190:69:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4173:86:26"},{"expression":{"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7936,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"4269:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7937,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"4278:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7939,"name":"setback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"4292:7:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4278:21:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4269:30:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":7942,"nodeType":"ExpressionStatement","src":"4269:30:26"},{"expression":{"components":[{"arguments":[{"id":7944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"4322:5:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7945,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7902,"src":"4329:8:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7946,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"4339:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":7943,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8041,"src":"4317:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint48_$returns$_t_userDefinedValueType$_Delay_$7804_$","typeString":"function (uint32,uint32,uint48) pure returns (Time.Delay)"}},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4317:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},{"id":7948,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"4348:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":7949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4316:39:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Delay_$7804_$_t_uint48_$","typeString":"tuple(Time.Delay,uint48)"}},"functionReturnParameters":7911,"id":7950,"nodeType":"Return","src":"4309:46:26"}]},"documentation":{"id":7897,"nodeType":"StructuredDocumentation","src":"3684:283:26","text":" @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n new delay becomes effective."},"id":7952,"implemented":true,"kind":"function","modifiers":[],"name":"withUpdate","nameLocation":"3981:10:26","nodeType":"FunctionDefinition","parameters":{"id":7905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7900,"mutability":"mutable","name":"self","nameLocation":"4007:4:26","nodeType":"VariableDeclaration","scope":7952,"src":"4001:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"},"typeName":{"id":7899,"nodeType":"UserDefinedTypeName","pathNode":{"id":7898,"name":"Delay","nameLocations":["4001:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":7804,"src":"4001:5:26"},"referencedDeclaration":7804,"src":"4001:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":7902,"mutability":"mutable","name":"newValue","nameLocation":"4028:8:26","nodeType":"VariableDeclaration","scope":7952,"src":"4021:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7901,"name":"uint32","nodeType":"ElementaryTypeName","src":"4021:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7904,"mutability":"mutable","name":"minSetback","nameLocation":"4053:10:26","nodeType":"VariableDeclaration","scope":7952,"src":"4046:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7903,"name":"uint32","nodeType":"ElementaryTypeName","src":"4046:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3991:78:26"},"returnParameters":{"id":7911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7908,"mutability":"mutable","name":"updatedDelay","nameLocation":"4099:12:26","nodeType":"VariableDeclaration","scope":7952,"src":"4093:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"},"typeName":{"id":7907,"nodeType":"UserDefinedTypeName","pathNode":{"id":7906,"name":"Delay","nameLocations":["4093:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":7804,"src":"4093:5:26"},"referencedDeclaration":7804,"src":"4093:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":7910,"mutability":"mutable","name":"effect","nameLocation":"4120:6:26","nodeType":"VariableDeclaration","scope":7952,"src":"4113:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7909,"name":"uint48","nodeType":"ElementaryTypeName","src":"4113:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4092:35:26"},"scope":8042,"src":"3972:390:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8002,"nodeType":"Block","src":"4595:212:26","statements":[{"assignments":[7966],"declarations":[{"constant":false,"id":7966,"mutability":"mutable","name":"raw","nameLocation":"4613:3:26","nodeType":"VariableDeclaration","scope":8002,"src":"4605:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7965,"name":"uint112","nodeType":"ElementaryTypeName","src":"4605:7:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"id":7971,"initialValue":{"arguments":[{"id":7969,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"4632:4:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}],"expression":{"id":7967,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"4619:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$7804_$","typeString":"type(Time.Delay)"}},"id":7968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4625:6:26","memberName":"unwrap","nodeType":"MemberAccess","src":"4619:12:26","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Delay_$7804_$returns$_t_uint112_$","typeString":"function (Time.Delay) pure returns (uint112)"}},"id":7970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4619:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"4605:32:26"},{"expression":{"id":7977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7972,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7961,"src":"4648:10:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7975,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7966,"src":"4668:3:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":7974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4661:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7973,"name":"uint32","nodeType":"ElementaryTypeName","src":"4661:6:26","typeDescriptions":{}}},"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4648:24:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":7978,"nodeType":"ExpressionStatement","src":"4648:24:26"},{"expression":{"id":7986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7979,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7959,"src":"4682:11:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":7984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7982,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7966,"src":"4703:3:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":7983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4710:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4703:9:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":7981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4696:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7980,"name":"uint32","nodeType":"ElementaryTypeName","src":"4696:6:26","typeDescriptions":{}}},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4696:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4682:31:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":7987,"nodeType":"ExpressionStatement","src":"4682:31:26"},{"expression":{"id":7995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7988,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"4723:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7991,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7966,"src":"4739:3:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":7992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4746:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4739:9:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":7990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4732:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7989,"name":"uint48","nodeType":"ElementaryTypeName","src":"4732:6:26","typeDescriptions":{}}},"id":7994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4732:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4723:26:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":7996,"nodeType":"ExpressionStatement","src":"4723:26:26"},{"expression":{"components":[{"id":7997,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7959,"src":"4768:11:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7998,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7961,"src":"4781:10:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7999,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"4793:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":8000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4767:33:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":7964,"id":8001,"nodeType":"Return","src":"4760:40:26"}]},"documentation":{"id":7953,"nodeType":"StructuredDocumentation","src":"4368:117:26","text":" @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint)."},"id":8003,"implemented":true,"kind":"function","modifiers":[],"name":"unpack","nameLocation":"4499:6:26","nodeType":"FunctionDefinition","parameters":{"id":7957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7956,"mutability":"mutable","name":"self","nameLocation":"4512:4:26","nodeType":"VariableDeclaration","scope":8003,"src":"4506:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"},"typeName":{"id":7955,"nodeType":"UserDefinedTypeName","pathNode":{"id":7954,"name":"Delay","nameLocations":["4506:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":7804,"src":"4506:5:26"},"referencedDeclaration":7804,"src":"4506:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4505:12:26"},"returnParameters":{"id":7964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7959,"mutability":"mutable","name":"valueBefore","nameLocation":"4548:11:26","nodeType":"VariableDeclaration","scope":8003,"src":"4541:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7958,"name":"uint32","nodeType":"ElementaryTypeName","src":"4541:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7961,"mutability":"mutable","name":"valueAfter","nameLocation":"4568:10:26","nodeType":"VariableDeclaration","scope":8003,"src":"4561:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7960,"name":"uint32","nodeType":"ElementaryTypeName","src":"4561:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7963,"mutability":"mutable","name":"effect","nameLocation":"4587:6:26","nodeType":"VariableDeclaration","scope":8003,"src":"4580:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7962,"name":"uint48","nodeType":"ElementaryTypeName","src":"4580:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4540:54:26"},"scope":8042,"src":"4490:317:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8040,"nodeType":"Block","src":"4980:112:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8020,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"5017:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":8019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5009:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8018,"name":"uint112","nodeType":"ElementaryTypeName","src":"5009:7:26","typeDescriptions":{}}},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5009:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":8022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5028:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5009:21:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":8024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5008:23:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8027,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8006,"src":"5043:11:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":8026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5035:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8025,"name":"uint112","nodeType":"ElementaryTypeName","src":"5035:7:26","typeDescriptions":{}}},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5035:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":8029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5059:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5035:26:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":8031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5034:28:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:54:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":8035,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8008,"src":"5073:10:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":8034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5065:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8033,"name":"uint112","nodeType":"ElementaryTypeName","src":"5065:7:26","typeDescriptions":{}}},"id":8036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5065:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:76:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":8016,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"4997:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$7804_$","typeString":"type(Time.Delay)"}},"id":8017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5003:4:26","memberName":"wrap","nodeType":"MemberAccess","src":"4997:10:26","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$7804_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":8038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4997:88:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},"functionReturnParameters":8015,"id":8039,"nodeType":"Return","src":"4990:95:26"}]},"documentation":{"id":8004,"nodeType":"StructuredDocumentation","src":"4813:64:26","text":" @dev pack the components into a Delay object."},"id":8041,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"4891:4:26","nodeType":"FunctionDefinition","parameters":{"id":8011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8006,"mutability":"mutable","name":"valueBefore","nameLocation":"4903:11:26","nodeType":"VariableDeclaration","scope":8041,"src":"4896:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8005,"name":"uint32","nodeType":"ElementaryTypeName","src":"4896:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8008,"mutability":"mutable","name":"valueAfter","nameLocation":"4923:10:26","nodeType":"VariableDeclaration","scope":8041,"src":"4916:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8007,"name":"uint32","nodeType":"ElementaryTypeName","src":"4916:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8010,"mutability":"mutable","name":"effect","nameLocation":"4942:6:26","nodeType":"VariableDeclaration","scope":8041,"src":"4935:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8009,"name":"uint48","nodeType":"ElementaryTypeName","src":"4935:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4895:54:26"},"returnParameters":{"id":8015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8041,"src":"4973:5:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"},"typeName":{"id":8013,"nodeType":"UserDefinedTypeName","pathNode":{"id":8012,"name":"Delay","nameLocations":["4973:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":7804,"src":"4973:5:26"},"referencedDeclaration":7804,"src":"4973:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7804","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4972:7:26"},"scope":8042,"src":"4882:210:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8043,"src":"640:4454:26","usedErrors":[],"usedEvents":[]}],"src":"104:4991:26"},"id":26},"contracts/GovernanceToken.sol":{"ast":{"absolutePath":"contracts/GovernanceToken.sol","exportedSymbols":{"Checkpoints":[7767],"Context":[1982],"ECDSA":[2980],"EIP712":[3207],"ERC20":[1480],"ERC20Burnable":[1604],"ERC20Permit":[1758],"ERC20Votes":[1890],"GoverenceToken":[8161],"IERC20":[1558],"IERC20Errors":[870],"IERC20Metadata":[1916],"IERC20Permit":[1952],"Nonces":[2050],"Ownable":[147],"Votes":[777]},"id":8162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8044,"literals":["solidity",">=","0.8",".18"],"nodeType":"PragmaDirective","src":"81:26:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8045,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8162,"sourceUnit":1481,"src":"109:55:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":8046,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8162,"sourceUnit":1605,"src":"165:74:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8047,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8162,"sourceUnit":148,"src":"240:52:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":8048,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8162,"sourceUnit":1759,"src":"293:72:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":8049,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8162,"sourceUnit":1891,"src":"366:71:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8050,"name":"ERC20","nameLocations":["466:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":1480,"src":"466:5:27"},"id":8051,"nodeType":"InheritanceSpecifier","src":"466:5:27"},{"baseName":{"id":8052,"name":"ERC20Burnable","nameLocations":["473:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":1604,"src":"473:13:27"},"id":8053,"nodeType":"InheritanceSpecifier","src":"473:13:27"},{"baseName":{"id":8054,"name":"Ownable","nameLocations":["488:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"488:7:27"},"id":8055,"nodeType":"InheritanceSpecifier","src":"488:7:27"},{"baseName":{"id":8056,"name":"ERC20Permit","nameLocations":["497:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":1758,"src":"497:11:27"},"id":8057,"nodeType":"InheritanceSpecifier","src":"497:11:27"},{"baseName":{"id":8058,"name":"ERC20Votes","nameLocations":["510:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":1890,"src":"510:10:27"},"id":8059,"nodeType":"InheritanceSpecifier","src":"510:10:27"}],"canonicalName":"GoverenceToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8161,"internalFunctionIDs":{"754":1,"768":2},"linearizedBaseContracts":[8161,1890,777,813,230,828,1758,2050,3207,802,1952,147,1604,1480,870,1916,1558,1982],"name":"GoverenceToken","nameLocation":"448:14:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":8085,"nodeType":"Block","src":"671:63:27","statements":[{"expression":{"arguments":[{"expression":{"id":8075,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"687:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"691:6:27","memberName":"sender","nodeType":"MemberAccess","src":"687:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130303030303030","id":8077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"699:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000_by_1","typeString":"int_const 10000000"},"value":"10000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"710:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8079,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"716:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"716:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"710:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"699:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8074,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"681:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"681:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8084,"nodeType":"ExpressionStatement","src":"681:46:27"}]},"id":8086,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"476f766572656e6365546f6b656e","id":8064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"575:16:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_de7bac6f6d5083b3f7d97d084e145db186f417853d6b556ad292bcd209388257","typeString":"literal_string \"GoverenceToken\""},"value":"GoverenceToken"},{"hexValue":"4754","id":8065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"593:4:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b275d0555485319643a6e39fae791932db6d1bb57b5529b0f8111f703023fe74","typeString":"literal_string \"GT\""},"value":"GT"}],"id":8066,"kind":"baseConstructorSpecifier","modifierName":{"id":8063,"name":"ERC20","nameLocations":["569:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":1480,"src":"569:5:27"},"nodeType":"ModifierInvocation","src":"569:29:27"},{"arguments":[{"id":8068,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"615:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8069,"kind":"baseConstructorSpecifier","modifierName":{"id":8067,"name":"Ownable","nameLocations":["607:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"607:7:27"},"nodeType":"ModifierInvocation","src":"607:21:27"},{"arguments":[{"hexValue":"476f766572656e6365546f6b656e","id":8071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"649:16:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_de7bac6f6d5083b3f7d97d084e145db186f417853d6b556ad292bcd209388257","typeString":"literal_string \"GoverenceToken\""},"value":"GoverenceToken"}],"id":8072,"kind":"baseConstructorSpecifier","modifierName":{"id":8070,"name":"ERC20Permit","nameLocations":["637:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":1758,"src":"637:11:27"},"nodeType":"ModifierInvocation","src":"637:29:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8061,"mutability":"mutable","name":"initialOwner","nameLocation":"547:12:27","nodeType":"VariableDeclaration","scope":8086,"src":"539:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8060,"name":"address","nodeType":"ElementaryTypeName","src":"539:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"538:22:27"},"returnParameters":{"id":8073,"nodeType":"ParameterList","parameters":[],"src":"671:0:27"},"scope":8161,"src":"527:207:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8100,"nodeType":"Block","src":"799:34:27","statements":[{"expression":{"arguments":[{"id":8096,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"815:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8097,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"819:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8095,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"809:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"809:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8099,"nodeType":"ExpressionStatement","src":"809:17:27"}]},"functionSelector":"40c10f19","id":8101,"implemented":true,"kind":"function","modifiers":[{"id":8093,"kind":"modifierInvocation","modifierName":{"id":8092,"name":"onlyOwner","nameLocations":["789:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"789:9:27"},"nodeType":"ModifierInvocation","src":"789:9:27"}],"name":"mint","nameLocation":"749:4:27","nodeType":"FunctionDefinition","parameters":{"id":8091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8088,"mutability":"mutable","name":"to","nameLocation":"762:2:27","nodeType":"VariableDeclaration","scope":8101,"src":"754:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8087,"name":"address","nodeType":"ElementaryTypeName","src":"754:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8090,"mutability":"mutable","name":"amount","nameLocation":"774:6:27","nodeType":"VariableDeclaration","scope":8101,"src":"766:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8089,"name":"uint256","nodeType":"ElementaryTypeName","src":"766:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"753:28:27"},"returnParameters":{"id":8094,"nodeType":"ParameterList","parameters":[],"src":"799:0:27"},"scope":8161,"src":"740:93:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[299],"body":{"id":8113,"nodeType":"Block","src":"894:47:27","statements":[{"expression":{"arguments":[{"expression":{"id":8109,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"918:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"924:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"918:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"911:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8107,"name":"uint48","nodeType":"ElementaryTypeName","src":"911:6:27","typeDescriptions":{}}},"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"911:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8106,"id":8112,"nodeType":"Return","src":"904:30:27"}]},"functionSelector":"91ddadf4","id":8114,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"848:5:27","nodeType":"FunctionDefinition","overrides":{"id":8103,"nodeType":"OverrideSpecifier","overrides":[],"src":"868:8:27"},"parameters":{"id":8102,"nodeType":"ParameterList","parameters":[],"src":"853:2:27"},"returnParameters":{"id":8106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8114,"src":"886:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8104,"name":"uint48","nodeType":"ElementaryTypeName","src":"886:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"885:8:27"},"scope":8161,"src":"839:102:27","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[319],"body":{"id":8122,"nodeType":"Block","src":"1067:40:27","statements":[{"expression":{"hexValue":"6d6f64653d74696d657374616d70","id":8120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1084:16:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5b078ad22f37ec6a1ef7bb7557a33caf5438015a34794acb2076082df8e563f","typeString":"literal_string \"mode=timestamp\""},"value":"mode=timestamp"},"functionReturnParameters":8119,"id":8121,"nodeType":"Return","src":"1077:23:27"}]},"functionSelector":"4bf5d7e9","id":8123,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"1009:10:27","nodeType":"FunctionDefinition","overrides":{"id":8116,"nodeType":"OverrideSpecifier","overrides":[],"src":"1034:8:27"},"parameters":{"id":8115,"nodeType":"ParameterList","parameters":[],"src":"1019:2:27"},"returnParameters":{"id":8119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8123,"src":"1052:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8117,"name":"string","nodeType":"ElementaryTypeName","src":"1052:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1051:15:27"},"scope":8161,"src":"1000:107:27","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[1287,1845],"body":{"id":8143,"nodeType":"Block","src":"1296:47:27","statements":[{"expression":{"arguments":[{"id":8138,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8125,"src":"1320:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8139,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8127,"src":"1326:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"1330:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8135,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1306:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GoverenceToken_$8161_$","typeString":"type(contract super GoverenceToken)"}},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1312:7:27","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1845,"src":"1306:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1306:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8142,"nodeType":"ExpressionStatement","src":"1306:30:27"}]},"id":8144,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1190:7:27","nodeType":"FunctionDefinition","overrides":{"id":8133,"nodeType":"OverrideSpecifier","overrides":[{"id":8131,"name":"ERC20","nameLocations":["1273:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":1480,"src":"1273:5:27"},{"id":8132,"name":"ERC20Votes","nameLocations":["1280:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":1890,"src":"1280:10:27"}],"src":"1264:27:27"},"parameters":{"id":8130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8125,"mutability":"mutable","name":"from","nameLocation":"1206:4:27","nodeType":"VariableDeclaration","scope":8144,"src":"1198:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8124,"name":"address","nodeType":"ElementaryTypeName","src":"1198:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8127,"mutability":"mutable","name":"to","nameLocation":"1220:2:27","nodeType":"VariableDeclaration","scope":8144,"src":"1212:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8126,"name":"address","nodeType":"ElementaryTypeName","src":"1212:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8129,"mutability":"mutable","name":"value","nameLocation":"1232:5:27","nodeType":"VariableDeclaration","scope":8144,"src":"1224:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1197:41:27"},"returnParameters":{"id":8134,"nodeType":"ParameterList","parameters":[],"src":"1296:0:27"},"scope":8161,"src":"1181:162:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1747,2009],"body":{"id":8159,"nodeType":"Block","src":"1476:43:27","statements":[{"expression":{"arguments":[{"id":8156,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"1506:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8154,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1493:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GoverenceToken_$8161_$","typeString":"type(contract super GoverenceToken)"}},"id":8155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1499:6:27","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1747,"src":"1493:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1493:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8153,"id":8158,"nodeType":"Return","src":"1486:26:27"}]},"functionSelector":"7ecebe00","id":8160,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1358:6:27","nodeType":"FunctionDefinition","overrides":{"id":8150,"nodeType":"OverrideSpecifier","overrides":[{"id":8148,"name":"ERC20Permit","nameLocations":["1425:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":1758,"src":"1425:11:27"},{"id":8149,"name":"Nonces","nameLocations":["1438:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":2050,"src":"1438:6:27"}],"src":"1416:29:27"},"parameters":{"id":8147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8146,"mutability":"mutable","name":"owner","nameLocation":"1373:5:27","nodeType":"VariableDeclaration","scope":8160,"src":"1365:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8145,"name":"address","nodeType":"ElementaryTypeName","src":"1365:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1364:15:27"},"returnParameters":{"id":8153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8160,"src":"1463:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1463:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1462:9:27"},"scope":8161,"src":"1349:170:27","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":8162,"src":"439:1082:27","usedErrors":[13,18,155,281,288,840,845,850,859,864,869,1635,1642,1778,1992,2064,2066,2643,2648,2653,4345,6203],"usedEvents":[24,164,173,782,1492,1501]}],"src":"81:1441:27"},"id":27}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\",\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/Votes.sol":{"Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \\\"representative\\\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see {ERC721Votes}. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement {_getVotingUnits} (for example, make it return {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the previous example, it would be included in {ERC721-_update}).\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/Votes.sol\":\"Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xb8f69828d41b3594afd7a8c6393565901c205d8b5baf5bd2e42dbac637172979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c790253821191ac46b2050d87df820d4209871f90c616381e2c2c00ff3eaac34\",\"dweb:/ipfs/QmcPETTyuZBzDRL39JNXj3SBMdx3Y9o4fPQLSZ27py5Jim\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1. NOTE: This contract does not provide interface compatibility with Compound's COMP token. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xb8f69828d41b3594afd7a8c6393565901c205d8b5baf5bd2e42dbac637172979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c790253821191ac46b2050d87df820d4209871f90c616381e2c2c00ff3eaac34\",\"dweb:/ipfs/QmcPETTyuZBzDRL39JNXj3SBMdx3Y9o4fPQLSZ27py5Jim\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x2a650f6e593cfe5ff2e514a17ea7f593ee70cefa1888066bc983a6308acff4b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a3477b9665a4b6d19f86bf2cfbfa8c08ba41193f15e68c0d75c0cab7e1fc753\",\"dweb:/ipfs/QmbcurrTatN1PBmkCWdrED8zhAqx5ah9Qp6uR8YwkKWA8V\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d2aedc0cb0fa896656ea0fe50229c9af49c2a90d8c22c903759c3543a7d46ba64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x2A 0xED 0xC0 0xCB 0xF 0xA8 SWAP7 PUSH6 0x6EA0FE50229C SWAP11 DELEGATECALL SWAP13 0x2A SWAP1 0xD8 0xC2 0x2C SWAP1 CALLDATACOPY MSIZE 0xC3 SLOAD GASPRICE PUSH30 0x46BA64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"764:33927:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d2aedc0cb0fa896656ea0fe50229c9af49c2a90d8c22c903759c3543a7d46ba64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x2A 0xED 0xC0 0xCB 0xF 0xA8 SWAP7 PUSH6 0x6EA0FE50229C SWAP11 DELEGATECALL SWAP13 0x2A SWAP1 0xD8 0xC2 0x2C SWAP1 CALLDATACOPY MSIZE 0xC3 SLOAD GASPRICE PUSH30 0x46BA64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"764:33927:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"Checkpoints":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad8e569f0219aede161eae172442433c5ffd3d324df540222b5d9bf1c595eccc64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD DUP15 JUMP SWAP16 MUL NOT 0xAE 0xDE AND 0x1E 0xAE OR 0x24 TIMESTAMP NUMBER EXTCODECOPY PUSH0 REVERT RETURNDATASIZE ORIGIN 0x4D CREATE2 BLOCKHASH 0x22 0x2B TSTORE SWAP12 CALL 0xC5 SWAP6 0xEC 0xCC PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"668:20471:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad8e569f0219aede161eae172442433c5ffd3d324df540222b5d9bf1c595eccc64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD DUP15 JUMP SWAP16 MUL NOT 0xAE 0xDE AND 0x1E 0xAE OR 0x24 TIMESTAMP NUMBER EXTCODECOPY PUSH0 REVERT RETURNDATASIZE ORIGIN 0x4D CREATE2 BLOCKHASH 0x22 0x2B TSTORE SWAP12 CALL 0xC5 SWAP6 0xEC 0xCC PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"668:20471:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library defines the `Trace*` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new checkpoint for the current transaction block using the {push} function.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/types/Time.sol":{"Time":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220744d9bb72144385edfc7dde59f38ad15d8191ee27bd4410502d0398962e6ebf264736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x4D9BB72144385EDFC7DDE59F38AD15D8191EE27BD4 COINBASE SDIV MUL 0xD0 CODECOPY DUP10 PUSH3 0xE6EBF2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"640:4454:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220744d9bb72144385edfc7dde59f38ad15d8191ee27bd4410502d0398962e6ebf264736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x4D9BB72144385EDFC7DDE59F38AD15D8191EE27BD4 COINBASE SDIV MUL 0xD0 CODECOPY DUP10 PUSH3 0xE6EBF2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"640:4454:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/types/Time.sol\":\"Time\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}"}},"contracts/GovernanceToken.sol":{"GoverenceToken":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1017":{"entryPoint":null,"id":1017,"parameterSlots":2,"returnSlots":0},"@_1653":{"entryPoint":null,"id":1653,"parameterSlots":1,"returnSlots":0},"@_3077":{"entryPoint":null,"id":3077,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8086":{"entryPoint":null,"id":8086,"parameterSlots":1,"returnSlots":0},"@_add_754":{"entryPoint":2447,"id":754,"parameterSlots":2,"returnSlots":1},"@_buildDomainSeparator_3124":{"entryPoint":980,"id":3124,"parameterSlots":0,"returnSlots":1},"@_insert_7126":{"entryPoint":3666,"id":7126,"parameterSlots":3,"returnSlots":2},"@_maxSupply_1791":{"entryPoint":2149,"id":1791,"parameterSlots":0,"returnSlots":1},"@_mint_1320":{"entryPoint":1082,"id":1320,"parameterSlots":2,"returnSlots":0},"@_moveDelegateVotes_668":{"entryPoint":2793,"id":668,"parameterSlots":3,"returnSlots":0},"@_push_740":{"entryPoint":2584,"id":740,"parameterSlots":3,"returnSlots":2},"@_subtract_768":{"entryPoint":2664,"id":768,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":694,"id":146,"parameterSlots":1,"returnSlots":0},"@_transferVotingUnits_590":{"entryPoint":2185,"id":590,"parameterSlots":3,"returnSlots":0},"@_unsafeAccess_7245":{"entryPoint":3645,"id":7245,"parameterSlots":2,"returnSlots":1},"@_update_1287":{"entryPoint":1579,"id":1287,"parameterSlots":3,"returnSlots":0},"@_update_1845":{"entryPoint":1366,"id":1845,"parameterSlots":3,"returnSlots":0},"@_update_8144":{"entryPoint":1342,"id":8144,"parameterSlots":3,"returnSlots":0},"@clock_8114":{"entryPoint":3484,"id":8114,"parameterSlots":0,"returnSlots":1},"@decimals_1044":{"entryPoint":1073,"id":1044,"parameterSlots":0,"returnSlots":1},"@delegates_426":{"entryPoint":2688,"id":426,"parameterSlots":1,"returnSlots":1},"@getStringSlot_2354":{"entryPoint":1332,"id":2354,"parameterSlots":1,"returnSlots":1},"@latest_6954":{"entryPoint":3492,"id":6954,"parameterSlots":1,"returnSlots":1},"@push_6757":{"entryPoint":3608,"id":6757,"parameterSlots":3,"returnSlots":2},"@toShortStringWithFallback_2208":{"entryPoint":892,"id":2208,"parameterSlots":2,"returnSlots":1},"@toShortString_2110":{"entryPoint":1223,"id":2110,"parameterSlots":1,"returnSlots":1},"@toUint208_4530":{"entryPoint":2471,"id":4530,"parameterSlots":1,"returnSlots":1},"@totalSupply_1053":{"entryPoint":2139,"id":1053,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":4671,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":4694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5609,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6221,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack":{"entryPoint":7056,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6426,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6238,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6793,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":6255,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":7073,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6491,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6854,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6689,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":6538,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":4902,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6527,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4744,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6348,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint208":{"entryPoint":6921,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6734,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":5715,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":6055,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":5806,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6136,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint208":{"entryPoint":7118,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7203,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":5223,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":4625,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6211,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_208_by_1":{"entryPoint":7006,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4593,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint208":{"entryPoint":6883,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5038,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6042,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":5184,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":6577,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_208_by_1_to_t_uint8":{"entryPoint":7016,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":5058,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":5378,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6365,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":4923,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4849,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":5348,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":5048,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":5316,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5655,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4802,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4755,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":5098,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":6554,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4588,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6409,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":4939,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":5702,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":5303,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":5156,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":4952,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":5108,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4645,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":5151,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:15846:28","nodeType":"YulBlock","src":"0:15846:28","statements":[{"body":{"nativeSrc":"47:35:28","nodeType":"YulBlock","src":"47:35:28","statements":[{"nativeSrc":"57:19:28","nodeType":"YulAssignment","src":"57:19:28","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:28","nodeType":"YulLiteral","src":"73:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:28","nodeType":"YulIdentifier","src":"67:5:28"},"nativeSrc":"67:9:28","nodeType":"YulFunctionCall","src":"67:9:28"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:28","nodeType":"YulIdentifier","src":"57:6:28"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:28","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:28","nodeType":"YulTypedName","src":"40:6:28","type":""}],"src":"7:75:28"},{"body":{"nativeSrc":"177:28:28","nodeType":"YulBlock","src":"177:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:28","nodeType":"YulLiteral","src":"194:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:28","nodeType":"YulLiteral","src":"197:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:28","nodeType":"YulIdentifier","src":"187:6:28"},"nativeSrc":"187:12:28","nodeType":"YulFunctionCall","src":"187:12:28"},"nativeSrc":"187:12:28","nodeType":"YulExpressionStatement","src":"187:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:28","nodeType":"YulFunctionDefinition","src":"88:117:28"},{"body":{"nativeSrc":"300:28:28","nodeType":"YulBlock","src":"300:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:28","nodeType":"YulLiteral","src":"317:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:28","nodeType":"YulLiteral","src":"320:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:28","nodeType":"YulIdentifier","src":"310:6:28"},"nativeSrc":"310:12:28","nodeType":"YulFunctionCall","src":"310:12:28"},"nativeSrc":"310:12:28","nodeType":"YulExpressionStatement","src":"310:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:28","nodeType":"YulFunctionDefinition","src":"211:117:28"},{"body":{"nativeSrc":"379:81:28","nodeType":"YulBlock","src":"379:81:28","statements":[{"nativeSrc":"389:65:28","nodeType":"YulAssignment","src":"389:65:28","value":{"arguments":[{"name":"value","nativeSrc":"404:5:28","nodeType":"YulIdentifier","src":"404:5:28"},{"kind":"number","nativeSrc":"411:42:28","nodeType":"YulLiteral","src":"411:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:28","nodeType":"YulIdentifier","src":"400:3:28"},"nativeSrc":"400:54:28","nodeType":"YulFunctionCall","src":"400:54:28"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:28","nodeType":"YulIdentifier","src":"389:7:28"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:28","nodeType":"YulTypedName","src":"361:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:28","nodeType":"YulTypedName","src":"371:7:28","type":""}],"src":"334:126:28"},{"body":{"nativeSrc":"511:51:28","nodeType":"YulBlock","src":"511:51:28","statements":[{"nativeSrc":"521:35:28","nodeType":"YulAssignment","src":"521:35:28","value":{"arguments":[{"name":"value","nativeSrc":"550:5:28","nodeType":"YulIdentifier","src":"550:5:28"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:28","nodeType":"YulIdentifier","src":"532:17:28"},"nativeSrc":"532:24:28","nodeType":"YulFunctionCall","src":"532:24:28"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:28","nodeType":"YulIdentifier","src":"521:7:28"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:28","nodeType":"YulTypedName","src":"493:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:28","nodeType":"YulTypedName","src":"503:7:28","type":""}],"src":"466:96:28"},{"body":{"nativeSrc":"611:79:28","nodeType":"YulBlock","src":"611:79:28","statements":[{"body":{"nativeSrc":"668:16:28","nodeType":"YulBlock","src":"668:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:28","nodeType":"YulLiteral","src":"677:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:28","nodeType":"YulLiteral","src":"680:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:28","nodeType":"YulIdentifier","src":"670:6:28"},"nativeSrc":"670:12:28","nodeType":"YulFunctionCall","src":"670:12:28"},"nativeSrc":"670:12:28","nodeType":"YulExpressionStatement","src":"670:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:28","nodeType":"YulIdentifier","src":"634:5:28"},{"arguments":[{"name":"value","nativeSrc":"659:5:28","nodeType":"YulIdentifier","src":"659:5:28"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:28","nodeType":"YulIdentifier","src":"641:17:28"},"nativeSrc":"641:24:28","nodeType":"YulFunctionCall","src":"641:24:28"}],"functionName":{"name":"eq","nativeSrc":"631:2:28","nodeType":"YulIdentifier","src":"631:2:28"},"nativeSrc":"631:35:28","nodeType":"YulFunctionCall","src":"631:35:28"}],"functionName":{"name":"iszero","nativeSrc":"624:6:28","nodeType":"YulIdentifier","src":"624:6:28"},"nativeSrc":"624:43:28","nodeType":"YulFunctionCall","src":"624:43:28"},"nativeSrc":"621:63:28","nodeType":"YulIf","src":"621:63:28"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:28","nodeType":"YulTypedName","src":"604:5:28","type":""}],"src":"568:122:28"},{"body":{"nativeSrc":"759:80:28","nodeType":"YulBlock","src":"759:80:28","statements":[{"nativeSrc":"769:22:28","nodeType":"YulAssignment","src":"769:22:28","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:28","nodeType":"YulIdentifier","src":"784:6:28"}],"functionName":{"name":"mload","nativeSrc":"778:5:28","nodeType":"YulIdentifier","src":"778:5:28"},"nativeSrc":"778:13:28","nodeType":"YulFunctionCall","src":"778:13:28"},"variableNames":[{"name":"value","nativeSrc":"769:5:28","nodeType":"YulIdentifier","src":"769:5:28"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:28","nodeType":"YulIdentifier","src":"827:5:28"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:28","nodeType":"YulIdentifier","src":"800:26:28"},"nativeSrc":"800:33:28","nodeType":"YulFunctionCall","src":"800:33:28"},"nativeSrc":"800:33:28","nodeType":"YulExpressionStatement","src":"800:33:28"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:28","nodeType":"YulTypedName","src":"737:6:28","type":""},{"name":"end","nativeSrc":"745:3:28","nodeType":"YulTypedName","src":"745:3:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:28","nodeType":"YulTypedName","src":"753:5:28","type":""}],"src":"696:143:28"},{"body":{"nativeSrc":"922:274:28","nodeType":"YulBlock","src":"922:274:28","statements":[{"body":{"nativeSrc":"968:83:28","nodeType":"YulBlock","src":"968:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:28","nodeType":"YulIdentifier","src":"970:77:28"},"nativeSrc":"970:79:28","nodeType":"YulFunctionCall","src":"970:79:28"},"nativeSrc":"970:79:28","nodeType":"YulExpressionStatement","src":"970:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:28","nodeType":"YulIdentifier","src":"943:7:28"},{"name":"headStart","nativeSrc":"952:9:28","nodeType":"YulIdentifier","src":"952:9:28"}],"functionName":{"name":"sub","nativeSrc":"939:3:28","nodeType":"YulIdentifier","src":"939:3:28"},"nativeSrc":"939:23:28","nodeType":"YulFunctionCall","src":"939:23:28"},{"kind":"number","nativeSrc":"964:2:28","nodeType":"YulLiteral","src":"964:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:28","nodeType":"YulIdentifier","src":"935:3:28"},"nativeSrc":"935:32:28","nodeType":"YulFunctionCall","src":"935:32:28"},"nativeSrc":"932:119:28","nodeType":"YulIf","src":"932:119:28"},{"nativeSrc":"1061:128:28","nodeType":"YulBlock","src":"1061:128:28","statements":[{"nativeSrc":"1076:15:28","nodeType":"YulVariableDeclaration","src":"1076:15:28","value":{"kind":"number","nativeSrc":"1090:1:28","nodeType":"YulLiteral","src":"1090:1:28","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:28","nodeType":"YulTypedName","src":"1080:6:28","type":""}]},{"nativeSrc":"1105:74:28","nodeType":"YulAssignment","src":"1105:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:28","nodeType":"YulIdentifier","src":"1151:9:28"},{"name":"offset","nativeSrc":"1162:6:28","nodeType":"YulIdentifier","src":"1162:6:28"}],"functionName":{"name":"add","nativeSrc":"1147:3:28","nodeType":"YulIdentifier","src":"1147:3:28"},"nativeSrc":"1147:22:28","nodeType":"YulFunctionCall","src":"1147:22:28"},{"name":"dataEnd","nativeSrc":"1171:7:28","nodeType":"YulIdentifier","src":"1171:7:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:28","nodeType":"YulIdentifier","src":"1115:31:28"},"nativeSrc":"1115:64:28","nodeType":"YulFunctionCall","src":"1115:64:28"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:28","nodeType":"YulIdentifier","src":"1105:6:28"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:28","nodeType":"YulTypedName","src":"892:9:28","type":""},{"name":"dataEnd","nativeSrc":"903:7:28","nodeType":"YulTypedName","src":"903:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:28","nodeType":"YulTypedName","src":"915:6:28","type":""}],"src":"845:351:28"},{"body":{"nativeSrc":"1261:40:28","nodeType":"YulBlock","src":"1261:40:28","statements":[{"nativeSrc":"1272:22:28","nodeType":"YulAssignment","src":"1272:22:28","value":{"arguments":[{"name":"value","nativeSrc":"1288:5:28","nodeType":"YulIdentifier","src":"1288:5:28"}],"functionName":{"name":"mload","nativeSrc":"1282:5:28","nodeType":"YulIdentifier","src":"1282:5:28"},"nativeSrc":"1282:12:28","nodeType":"YulFunctionCall","src":"1282:12:28"},"variableNames":[{"name":"length","nativeSrc":"1272:6:28","nodeType":"YulIdentifier","src":"1272:6:28"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1202:99:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1244:5:28","nodeType":"YulTypedName","src":"1244:5:28","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1254:6:28","nodeType":"YulTypedName","src":"1254:6:28","type":""}],"src":"1202:99:28"},{"body":{"nativeSrc":"1335:152:28","nodeType":"YulBlock","src":"1335:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1352:1:28","nodeType":"YulLiteral","src":"1352:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1355:77:28","nodeType":"YulLiteral","src":"1355:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1345:6:28","nodeType":"YulIdentifier","src":"1345:6:28"},"nativeSrc":"1345:88:28","nodeType":"YulFunctionCall","src":"1345:88:28"},"nativeSrc":"1345:88:28","nodeType":"YulExpressionStatement","src":"1345:88:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1449:1:28","nodeType":"YulLiteral","src":"1449:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"1452:4:28","nodeType":"YulLiteral","src":"1452:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1442:6:28","nodeType":"YulIdentifier","src":"1442:6:28"},"nativeSrc":"1442:15:28","nodeType":"YulFunctionCall","src":"1442:15:28"},"nativeSrc":"1442:15:28","nodeType":"YulExpressionStatement","src":"1442:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1473:1:28","nodeType":"YulLiteral","src":"1473:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1476:4:28","nodeType":"YulLiteral","src":"1476:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1466:6:28","nodeType":"YulIdentifier","src":"1466:6:28"},"nativeSrc":"1466:15:28","nodeType":"YulFunctionCall","src":"1466:15:28"},"nativeSrc":"1466:15:28","nodeType":"YulExpressionStatement","src":"1466:15:28"}]},"name":"panic_error_0x41","nativeSrc":"1307:180:28","nodeType":"YulFunctionDefinition","src":"1307:180:28"},{"body":{"nativeSrc":"1521:152:28","nodeType":"YulBlock","src":"1521:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:28","nodeType":"YulLiteral","src":"1538:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:77:28","nodeType":"YulLiteral","src":"1541:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1531:6:28","nodeType":"YulIdentifier","src":"1531:6:28"},"nativeSrc":"1531:88:28","nodeType":"YulFunctionCall","src":"1531:88:28"},"nativeSrc":"1531:88:28","nodeType":"YulExpressionStatement","src":"1531:88:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1635:1:28","nodeType":"YulLiteral","src":"1635:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"1638:4:28","nodeType":"YulLiteral","src":"1638:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1628:6:28","nodeType":"YulIdentifier","src":"1628:6:28"},"nativeSrc":"1628:15:28","nodeType":"YulFunctionCall","src":"1628:15:28"},"nativeSrc":"1628:15:28","nodeType":"YulExpressionStatement","src":"1628:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:28","nodeType":"YulLiteral","src":"1659:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:4:28","nodeType":"YulLiteral","src":"1662:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1652:6:28","nodeType":"YulIdentifier","src":"1652:6:28"},"nativeSrc":"1652:15:28","nodeType":"YulFunctionCall","src":"1652:15:28"},"nativeSrc":"1652:15:28","nodeType":"YulExpressionStatement","src":"1652:15:28"}]},"name":"panic_error_0x22","nativeSrc":"1493:180:28","nodeType":"YulFunctionDefinition","src":"1493:180:28"},{"body":{"nativeSrc":"1730:269:28","nodeType":"YulBlock","src":"1730:269:28","statements":[{"nativeSrc":"1740:22:28","nodeType":"YulAssignment","src":"1740:22:28","value":{"arguments":[{"name":"data","nativeSrc":"1754:4:28","nodeType":"YulIdentifier","src":"1754:4:28"},{"kind":"number","nativeSrc":"1760:1:28","nodeType":"YulLiteral","src":"1760:1:28","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1750:3:28","nodeType":"YulIdentifier","src":"1750:3:28"},"nativeSrc":"1750:12:28","nodeType":"YulFunctionCall","src":"1750:12:28"},"variableNames":[{"name":"length","nativeSrc":"1740:6:28","nodeType":"YulIdentifier","src":"1740:6:28"}]},{"nativeSrc":"1771:38:28","nodeType":"YulVariableDeclaration","src":"1771:38:28","value":{"arguments":[{"name":"data","nativeSrc":"1801:4:28","nodeType":"YulIdentifier","src":"1801:4:28"},{"kind":"number","nativeSrc":"1807:1:28","nodeType":"YulLiteral","src":"1807:1:28","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1797:3:28","nodeType":"YulIdentifier","src":"1797:3:28"},"nativeSrc":"1797:12:28","nodeType":"YulFunctionCall","src":"1797:12:28"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1775:18:28","nodeType":"YulTypedName","src":"1775:18:28","type":""}]},{"body":{"nativeSrc":"1848:51:28","nodeType":"YulBlock","src":"1848:51:28","statements":[{"nativeSrc":"1862:27:28","nodeType":"YulAssignment","src":"1862:27:28","value":{"arguments":[{"name":"length","nativeSrc":"1876:6:28","nodeType":"YulIdentifier","src":"1876:6:28"},{"kind":"number","nativeSrc":"1884:4:28","nodeType":"YulLiteral","src":"1884:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1872:3:28","nodeType":"YulIdentifier","src":"1872:3:28"},"nativeSrc":"1872:17:28","nodeType":"YulFunctionCall","src":"1872:17:28"},"variableNames":[{"name":"length","nativeSrc":"1862:6:28","nodeType":"YulIdentifier","src":"1862:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1828:18:28","nodeType":"YulIdentifier","src":"1828:18:28"}],"functionName":{"name":"iszero","nativeSrc":"1821:6:28","nodeType":"YulIdentifier","src":"1821:6:28"},"nativeSrc":"1821:26:28","nodeType":"YulFunctionCall","src":"1821:26:28"},"nativeSrc":"1818:81:28","nodeType":"YulIf","src":"1818:81:28"},{"body":{"nativeSrc":"1951:42:28","nodeType":"YulBlock","src":"1951:42:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"1965:16:28","nodeType":"YulIdentifier","src":"1965:16:28"},"nativeSrc":"1965:18:28","nodeType":"YulFunctionCall","src":"1965:18:28"},"nativeSrc":"1965:18:28","nodeType":"YulExpressionStatement","src":"1965:18:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1915:18:28","nodeType":"YulIdentifier","src":"1915:18:28"},{"arguments":[{"name":"length","nativeSrc":"1938:6:28","nodeType":"YulIdentifier","src":"1938:6:28"},{"kind":"number","nativeSrc":"1946:2:28","nodeType":"YulLiteral","src":"1946:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1935:2:28","nodeType":"YulIdentifier","src":"1935:2:28"},"nativeSrc":"1935:14:28","nodeType":"YulFunctionCall","src":"1935:14:28"}],"functionName":{"name":"eq","nativeSrc":"1912:2:28","nodeType":"YulIdentifier","src":"1912:2:28"},"nativeSrc":"1912:38:28","nodeType":"YulFunctionCall","src":"1912:38:28"},"nativeSrc":"1909:84:28","nodeType":"YulIf","src":"1909:84:28"}]},"name":"extract_byte_array_length","nativeSrc":"1679:320:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1714:4:28","nodeType":"YulTypedName","src":"1714:4:28","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1723:6:28","nodeType":"YulTypedName","src":"1723:6:28","type":""}],"src":"1679:320:28"},{"body":{"nativeSrc":"2059:87:28","nodeType":"YulBlock","src":"2059:87:28","statements":[{"nativeSrc":"2069:11:28","nodeType":"YulAssignment","src":"2069:11:28","value":{"name":"ptr","nativeSrc":"2077:3:28","nodeType":"YulIdentifier","src":"2077:3:28"},"variableNames":[{"name":"data","nativeSrc":"2069:4:28","nodeType":"YulIdentifier","src":"2069:4:28"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2097:1:28","nodeType":"YulLiteral","src":"2097:1:28","type":"","value":"0"},{"name":"ptr","nativeSrc":"2100:3:28","nodeType":"YulIdentifier","src":"2100:3:28"}],"functionName":{"name":"mstore","nativeSrc":"2090:6:28","nodeType":"YulIdentifier","src":"2090:6:28"},"nativeSrc":"2090:14:28","nodeType":"YulFunctionCall","src":"2090:14:28"},"nativeSrc":"2090:14:28","nodeType":"YulExpressionStatement","src":"2090:14:28"},{"nativeSrc":"2113:26:28","nodeType":"YulAssignment","src":"2113:26:28","value":{"arguments":[{"kind":"number","nativeSrc":"2131:1:28","nodeType":"YulLiteral","src":"2131:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2134:4:28","nodeType":"YulLiteral","src":"2134:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2121:9:28","nodeType":"YulIdentifier","src":"2121:9:28"},"nativeSrc":"2121:18:28","nodeType":"YulFunctionCall","src":"2121:18:28"},"variableNames":[{"name":"data","nativeSrc":"2113:4:28","nodeType":"YulIdentifier","src":"2113:4:28"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2005:141:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2046:3:28","nodeType":"YulTypedName","src":"2046:3:28","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2054:4:28","nodeType":"YulTypedName","src":"2054:4:28","type":""}],"src":"2005:141:28"},{"body":{"nativeSrc":"2196:49:28","nodeType":"YulBlock","src":"2196:49:28","statements":[{"nativeSrc":"2206:33:28","nodeType":"YulAssignment","src":"2206:33:28","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2224:5:28","nodeType":"YulIdentifier","src":"2224:5:28"},{"kind":"number","nativeSrc":"2231:2:28","nodeType":"YulLiteral","src":"2231:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2220:3:28","nodeType":"YulIdentifier","src":"2220:3:28"},"nativeSrc":"2220:14:28","nodeType":"YulFunctionCall","src":"2220:14:28"},{"kind":"number","nativeSrc":"2236:2:28","nodeType":"YulLiteral","src":"2236:2:28","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2216:3:28","nodeType":"YulIdentifier","src":"2216:3:28"},"nativeSrc":"2216:23:28","nodeType":"YulFunctionCall","src":"2216:23:28"},"variableNames":[{"name":"result","nativeSrc":"2206:6:28","nodeType":"YulIdentifier","src":"2206:6:28"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2152:93:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2179:5:28","nodeType":"YulTypedName","src":"2179:5:28","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2189:6:28","nodeType":"YulTypedName","src":"2189:6:28","type":""}],"src":"2152:93:28"},{"body":{"nativeSrc":"2304:54:28","nodeType":"YulBlock","src":"2304:54:28","statements":[{"nativeSrc":"2314:37:28","nodeType":"YulAssignment","src":"2314:37:28","value":{"arguments":[{"name":"bits","nativeSrc":"2339:4:28","nodeType":"YulIdentifier","src":"2339:4:28"},{"name":"value","nativeSrc":"2345:5:28","nodeType":"YulIdentifier","src":"2345:5:28"}],"functionName":{"name":"shl","nativeSrc":"2335:3:28","nodeType":"YulIdentifier","src":"2335:3:28"},"nativeSrc":"2335:16:28","nodeType":"YulFunctionCall","src":"2335:16:28"},"variableNames":[{"name":"newValue","nativeSrc":"2314:8:28","nodeType":"YulIdentifier","src":"2314:8:28"}]}]},"name":"shift_left_dynamic","nativeSrc":"2251:107:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2279:4:28","nodeType":"YulTypedName","src":"2279:4:28","type":""},{"name":"value","nativeSrc":"2285:5:28","nodeType":"YulTypedName","src":"2285:5:28","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2295:8:28","nodeType":"YulTypedName","src":"2295:8:28","type":""}],"src":"2251:107:28"},{"body":{"nativeSrc":"2440:317:28","nodeType":"YulBlock","src":"2440:317:28","statements":[{"nativeSrc":"2450:35:28","nodeType":"YulVariableDeclaration","src":"2450:35:28","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2471:10:28","nodeType":"YulIdentifier","src":"2471:10:28"},{"kind":"number","nativeSrc":"2483:1:28","nodeType":"YulLiteral","src":"2483:1:28","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2467:3:28","nodeType":"YulIdentifier","src":"2467:3:28"},"nativeSrc":"2467:18:28","nodeType":"YulFunctionCall","src":"2467:18:28"},"variables":[{"name":"shiftBits","nativeSrc":"2454:9:28","nodeType":"YulTypedName","src":"2454:9:28","type":""}]},{"nativeSrc":"2494:109:28","nodeType":"YulVariableDeclaration","src":"2494:109:28","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2525:9:28","nodeType":"YulIdentifier","src":"2525:9:28"},{"kind":"number","nativeSrc":"2536:66:28","nodeType":"YulLiteral","src":"2536:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2506:18:28","nodeType":"YulIdentifier","src":"2506:18:28"},"nativeSrc":"2506:97:28","nodeType":"YulFunctionCall","src":"2506:97:28"},"variables":[{"name":"mask","nativeSrc":"2498:4:28","nodeType":"YulTypedName","src":"2498:4:28","type":""}]},{"nativeSrc":"2612:51:28","nodeType":"YulAssignment","src":"2612:51:28","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2643:9:28","nodeType":"YulIdentifier","src":"2643:9:28"},{"name":"toInsert","nativeSrc":"2654:8:28","nodeType":"YulIdentifier","src":"2654:8:28"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2624:18:28","nodeType":"YulIdentifier","src":"2624:18:28"},"nativeSrc":"2624:39:28","nodeType":"YulFunctionCall","src":"2624:39:28"},"variableNames":[{"name":"toInsert","nativeSrc":"2612:8:28","nodeType":"YulIdentifier","src":"2612:8:28"}]},{"nativeSrc":"2672:30:28","nodeType":"YulAssignment","src":"2672:30:28","value":{"arguments":[{"name":"value","nativeSrc":"2685:5:28","nodeType":"YulIdentifier","src":"2685:5:28"},{"arguments":[{"name":"mask","nativeSrc":"2696:4:28","nodeType":"YulIdentifier","src":"2696:4:28"}],"functionName":{"name":"not","nativeSrc":"2692:3:28","nodeType":"YulIdentifier","src":"2692:3:28"},"nativeSrc":"2692:9:28","nodeType":"YulFunctionCall","src":"2692:9:28"}],"functionName":{"name":"and","nativeSrc":"2681:3:28","nodeType":"YulIdentifier","src":"2681:3:28"},"nativeSrc":"2681:21:28","nodeType":"YulFunctionCall","src":"2681:21:28"},"variableNames":[{"name":"value","nativeSrc":"2672:5:28","nodeType":"YulIdentifier","src":"2672:5:28"}]},{"nativeSrc":"2711:40:28","nodeType":"YulAssignment","src":"2711:40:28","value":{"arguments":[{"name":"value","nativeSrc":"2724:5:28","nodeType":"YulIdentifier","src":"2724:5:28"},{"arguments":[{"name":"toInsert","nativeSrc":"2735:8:28","nodeType":"YulIdentifier","src":"2735:8:28"},{"name":"mask","nativeSrc":"2745:4:28","nodeType":"YulIdentifier","src":"2745:4:28"}],"functionName":{"name":"and","nativeSrc":"2731:3:28","nodeType":"YulIdentifier","src":"2731:3:28"},"nativeSrc":"2731:19:28","nodeType":"YulFunctionCall","src":"2731:19:28"}],"functionName":{"name":"or","nativeSrc":"2721:2:28","nodeType":"YulIdentifier","src":"2721:2:28"},"nativeSrc":"2721:30:28","nodeType":"YulFunctionCall","src":"2721:30:28"},"variableNames":[{"name":"result","nativeSrc":"2711:6:28","nodeType":"YulIdentifier","src":"2711:6:28"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2364:393:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2401:5:28","nodeType":"YulTypedName","src":"2401:5:28","type":""},{"name":"shiftBytes","nativeSrc":"2408:10:28","nodeType":"YulTypedName","src":"2408:10:28","type":""},{"name":"toInsert","nativeSrc":"2420:8:28","nodeType":"YulTypedName","src":"2420:8:28","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2433:6:28","nodeType":"YulTypedName","src":"2433:6:28","type":""}],"src":"2364:393:28"},{"body":{"nativeSrc":"2808:32:28","nodeType":"YulBlock","src":"2808:32:28","statements":[{"nativeSrc":"2818:16:28","nodeType":"YulAssignment","src":"2818:16:28","value":{"name":"value","nativeSrc":"2829:5:28","nodeType":"YulIdentifier","src":"2829:5:28"},"variableNames":[{"name":"cleaned","nativeSrc":"2818:7:28","nodeType":"YulIdentifier","src":"2818:7:28"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2763:77:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2790:5:28","nodeType":"YulTypedName","src":"2790:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2800:7:28","nodeType":"YulTypedName","src":"2800:7:28","type":""}],"src":"2763:77:28"},{"body":{"nativeSrc":"2878:28:28","nodeType":"YulBlock","src":"2878:28:28","statements":[{"nativeSrc":"2888:12:28","nodeType":"YulAssignment","src":"2888:12:28","value":{"name":"value","nativeSrc":"2895:5:28","nodeType":"YulIdentifier","src":"2895:5:28"},"variableNames":[{"name":"ret","nativeSrc":"2888:3:28","nodeType":"YulIdentifier","src":"2888:3:28"}]}]},"name":"identity","nativeSrc":"2846:60:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2864:5:28","nodeType":"YulTypedName","src":"2864:5:28","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2874:3:28","nodeType":"YulTypedName","src":"2874:3:28","type":""}],"src":"2846:60:28"},{"body":{"nativeSrc":"2972:82:28","nodeType":"YulBlock","src":"2972:82:28","statements":[{"nativeSrc":"2982:66:28","nodeType":"YulAssignment","src":"2982:66:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3040:5:28","nodeType":"YulIdentifier","src":"3040:5:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3022:17:28","nodeType":"YulIdentifier","src":"3022:17:28"},"nativeSrc":"3022:24:28","nodeType":"YulFunctionCall","src":"3022:24:28"}],"functionName":{"name":"identity","nativeSrc":"3013:8:28","nodeType":"YulIdentifier","src":"3013:8:28"},"nativeSrc":"3013:34:28","nodeType":"YulFunctionCall","src":"3013:34:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2995:17:28","nodeType":"YulIdentifier","src":"2995:17:28"},"nativeSrc":"2995:53:28","nodeType":"YulFunctionCall","src":"2995:53:28"},"variableNames":[{"name":"converted","nativeSrc":"2982:9:28","nodeType":"YulIdentifier","src":"2982:9:28"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2912:142:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2952:5:28","nodeType":"YulTypedName","src":"2952:5:28","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2962:9:28","nodeType":"YulTypedName","src":"2962:9:28","type":""}],"src":"2912:142:28"},{"body":{"nativeSrc":"3107:28:28","nodeType":"YulBlock","src":"3107:28:28","statements":[{"nativeSrc":"3117:12:28","nodeType":"YulAssignment","src":"3117:12:28","value":{"name":"value","nativeSrc":"3124:5:28","nodeType":"YulIdentifier","src":"3124:5:28"},"variableNames":[{"name":"ret","nativeSrc":"3117:3:28","nodeType":"YulIdentifier","src":"3117:3:28"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3060:75:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3093:5:28","nodeType":"YulTypedName","src":"3093:5:28","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3103:3:28","nodeType":"YulTypedName","src":"3103:3:28","type":""}],"src":"3060:75:28"},{"body":{"nativeSrc":"3217:193:28","nodeType":"YulBlock","src":"3217:193:28","statements":[{"nativeSrc":"3227:63:28","nodeType":"YulVariableDeclaration","src":"3227:63:28","value":{"arguments":[{"name":"value_0","nativeSrc":"3282:7:28","nodeType":"YulIdentifier","src":"3282:7:28"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3251:30:28","nodeType":"YulIdentifier","src":"3251:30:28"},"nativeSrc":"3251:39:28","nodeType":"YulFunctionCall","src":"3251:39:28"},"variables":[{"name":"convertedValue_0","nativeSrc":"3231:16:28","nodeType":"YulTypedName","src":"3231:16:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3306:4:28","nodeType":"YulIdentifier","src":"3306:4:28"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3346:4:28","nodeType":"YulIdentifier","src":"3346:4:28"}],"functionName":{"name":"sload","nativeSrc":"3340:5:28","nodeType":"YulIdentifier","src":"3340:5:28"},"nativeSrc":"3340:11:28","nodeType":"YulFunctionCall","src":"3340:11:28"},{"name":"offset","nativeSrc":"3353:6:28","nodeType":"YulIdentifier","src":"3353:6:28"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3385:16:28","nodeType":"YulIdentifier","src":"3385:16:28"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3361:23:28","nodeType":"YulIdentifier","src":"3361:23:28"},"nativeSrc":"3361:41:28","nodeType":"YulFunctionCall","src":"3361:41:28"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3312:27:28","nodeType":"YulIdentifier","src":"3312:27:28"},"nativeSrc":"3312:91:28","nodeType":"YulFunctionCall","src":"3312:91:28"}],"functionName":{"name":"sstore","nativeSrc":"3299:6:28","nodeType":"YulIdentifier","src":"3299:6:28"},"nativeSrc":"3299:105:28","nodeType":"YulFunctionCall","src":"3299:105:28"},"nativeSrc":"3299:105:28","nodeType":"YulExpressionStatement","src":"3299:105:28"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3141:269:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3194:4:28","nodeType":"YulTypedName","src":"3194:4:28","type":""},{"name":"offset","nativeSrc":"3200:6:28","nodeType":"YulTypedName","src":"3200:6:28","type":""},{"name":"value_0","nativeSrc":"3208:7:28","nodeType":"YulTypedName","src":"3208:7:28","type":""}],"src":"3141:269:28"},{"body":{"nativeSrc":"3465:24:28","nodeType":"YulBlock","src":"3465:24:28","statements":[{"nativeSrc":"3475:8:28","nodeType":"YulAssignment","src":"3475:8:28","value":{"kind":"number","nativeSrc":"3482:1:28","nodeType":"YulLiteral","src":"3482:1:28","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3475:3:28","nodeType":"YulIdentifier","src":"3475:3:28"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3416:73:28","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3461:3:28","nodeType":"YulTypedName","src":"3461:3:28","type":""}],"src":"3416:73:28"},{"body":{"nativeSrc":"3548:136:28","nodeType":"YulBlock","src":"3548:136:28","statements":[{"nativeSrc":"3558:46:28","nodeType":"YulVariableDeclaration","src":"3558:46:28","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3572:30:28","nodeType":"YulIdentifier","src":"3572:30:28"},"nativeSrc":"3572:32:28","nodeType":"YulFunctionCall","src":"3572:32:28"},"variables":[{"name":"zero_0","nativeSrc":"3562:6:28","nodeType":"YulTypedName","src":"3562:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3657:4:28","nodeType":"YulIdentifier","src":"3657:4:28"},{"name":"offset","nativeSrc":"3663:6:28","nodeType":"YulIdentifier","src":"3663:6:28"},{"name":"zero_0","nativeSrc":"3671:6:28","nodeType":"YulIdentifier","src":"3671:6:28"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3613:43:28","nodeType":"YulIdentifier","src":"3613:43:28"},"nativeSrc":"3613:65:28","nodeType":"YulFunctionCall","src":"3613:65:28"},"nativeSrc":"3613:65:28","nodeType":"YulExpressionStatement","src":"3613:65:28"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3495:189:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3534:4:28","nodeType":"YulTypedName","src":"3534:4:28","type":""},{"name":"offset","nativeSrc":"3540:6:28","nodeType":"YulTypedName","src":"3540:6:28","type":""}],"src":"3495:189:28"},{"body":{"nativeSrc":"3740:136:28","nodeType":"YulBlock","src":"3740:136:28","statements":[{"body":{"nativeSrc":"3807:63:28","nodeType":"YulBlock","src":"3807:63:28","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"3851:5:28","nodeType":"YulIdentifier","src":"3851:5:28"},{"kind":"number","nativeSrc":"3858:1:28","nodeType":"YulLiteral","src":"3858:1:28","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3821:29:28","nodeType":"YulIdentifier","src":"3821:29:28"},"nativeSrc":"3821:39:28","nodeType":"YulFunctionCall","src":"3821:39:28"},"nativeSrc":"3821:39:28","nodeType":"YulExpressionStatement","src":"3821:39:28"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3760:5:28","nodeType":"YulIdentifier","src":"3760:5:28"},{"name":"end","nativeSrc":"3767:3:28","nodeType":"YulIdentifier","src":"3767:3:28"}],"functionName":{"name":"lt","nativeSrc":"3757:2:28","nodeType":"YulIdentifier","src":"3757:2:28"},"nativeSrc":"3757:14:28","nodeType":"YulFunctionCall","src":"3757:14:28"},"nativeSrc":"3750:120:28","nodeType":"YulForLoop","post":{"nativeSrc":"3772:26:28","nodeType":"YulBlock","src":"3772:26:28","statements":[{"nativeSrc":"3774:22:28","nodeType":"YulAssignment","src":"3774:22:28","value":{"arguments":[{"name":"start","nativeSrc":"3787:5:28","nodeType":"YulIdentifier","src":"3787:5:28"},{"kind":"number","nativeSrc":"3794:1:28","nodeType":"YulLiteral","src":"3794:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3783:3:28","nodeType":"YulIdentifier","src":"3783:3:28"},"nativeSrc":"3783:13:28","nodeType":"YulFunctionCall","src":"3783:13:28"},"variableNames":[{"name":"start","nativeSrc":"3774:5:28","nodeType":"YulIdentifier","src":"3774:5:28"}]}]},"pre":{"nativeSrc":"3754:2:28","nodeType":"YulBlock","src":"3754:2:28","statements":[]},"src":"3750:120:28"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3690:186:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3728:5:28","nodeType":"YulTypedName","src":"3728:5:28","type":""},{"name":"end","nativeSrc":"3735:3:28","nodeType":"YulTypedName","src":"3735:3:28","type":""}],"src":"3690:186:28"},{"body":{"nativeSrc":"3961:464:28","nodeType":"YulBlock","src":"3961:464:28","statements":[{"body":{"nativeSrc":"3987:431:28","nodeType":"YulBlock","src":"3987:431:28","statements":[{"nativeSrc":"4001:54:28","nodeType":"YulVariableDeclaration","src":"4001:54:28","value":{"arguments":[{"name":"array","nativeSrc":"4049:5:28","nodeType":"YulIdentifier","src":"4049:5:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4017:31:28","nodeType":"YulIdentifier","src":"4017:31:28"},"nativeSrc":"4017:38:28","nodeType":"YulFunctionCall","src":"4017:38:28"},"variables":[{"name":"dataArea","nativeSrc":"4005:8:28","nodeType":"YulTypedName","src":"4005:8:28","type":""}]},{"nativeSrc":"4068:63:28","nodeType":"YulVariableDeclaration","src":"4068:63:28","value":{"arguments":[{"name":"dataArea","nativeSrc":"4091:8:28","nodeType":"YulIdentifier","src":"4091:8:28"},{"arguments":[{"name":"startIndex","nativeSrc":"4119:10:28","nodeType":"YulIdentifier","src":"4119:10:28"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4101:17:28","nodeType":"YulIdentifier","src":"4101:17:28"},"nativeSrc":"4101:29:28","nodeType":"YulFunctionCall","src":"4101:29:28"}],"functionName":{"name":"add","nativeSrc":"4087:3:28","nodeType":"YulIdentifier","src":"4087:3:28"},"nativeSrc":"4087:44:28","nodeType":"YulFunctionCall","src":"4087:44:28"},"variables":[{"name":"deleteStart","nativeSrc":"4072:11:28","nodeType":"YulTypedName","src":"4072:11:28","type":""}]},{"body":{"nativeSrc":"4288:27:28","nodeType":"YulBlock","src":"4288:27:28","statements":[{"nativeSrc":"4290:23:28","nodeType":"YulAssignment","src":"4290:23:28","value":{"name":"dataArea","nativeSrc":"4305:8:28","nodeType":"YulIdentifier","src":"4305:8:28"},"variableNames":[{"name":"deleteStart","nativeSrc":"4290:11:28","nodeType":"YulIdentifier","src":"4290:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4272:10:28","nodeType":"YulIdentifier","src":"4272:10:28"},{"kind":"number","nativeSrc":"4284:2:28","nodeType":"YulLiteral","src":"4284:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4269:2:28","nodeType":"YulIdentifier","src":"4269:2:28"},"nativeSrc":"4269:18:28","nodeType":"YulFunctionCall","src":"4269:18:28"},"nativeSrc":"4266:49:28","nodeType":"YulIf","src":"4266:49:28"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4357:11:28","nodeType":"YulIdentifier","src":"4357:11:28"},{"arguments":[{"name":"dataArea","nativeSrc":"4374:8:28","nodeType":"YulIdentifier","src":"4374:8:28"},{"arguments":[{"name":"len","nativeSrc":"4402:3:28","nodeType":"YulIdentifier","src":"4402:3:28"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4384:17:28","nodeType":"YulIdentifier","src":"4384:17:28"},"nativeSrc":"4384:22:28","nodeType":"YulFunctionCall","src":"4384:22:28"}],"functionName":{"name":"add","nativeSrc":"4370:3:28","nodeType":"YulIdentifier","src":"4370:3:28"},"nativeSrc":"4370:37:28","nodeType":"YulFunctionCall","src":"4370:37:28"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4328:28:28","nodeType":"YulIdentifier","src":"4328:28:28"},"nativeSrc":"4328:80:28","nodeType":"YulFunctionCall","src":"4328:80:28"},"nativeSrc":"4328:80:28","nodeType":"YulExpressionStatement","src":"4328:80:28"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"3978:3:28","nodeType":"YulIdentifier","src":"3978:3:28"},{"kind":"number","nativeSrc":"3983:2:28","nodeType":"YulLiteral","src":"3983:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3975:2:28","nodeType":"YulIdentifier","src":"3975:2:28"},"nativeSrc":"3975:11:28","nodeType":"YulFunctionCall","src":"3975:11:28"},"nativeSrc":"3972:446:28","nodeType":"YulIf","src":"3972:446:28"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"3882:543:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"3937:5:28","nodeType":"YulTypedName","src":"3937:5:28","type":""},{"name":"len","nativeSrc":"3944:3:28","nodeType":"YulTypedName","src":"3944:3:28","type":""},{"name":"startIndex","nativeSrc":"3949:10:28","nodeType":"YulTypedName","src":"3949:10:28","type":""}],"src":"3882:543:28"},{"body":{"nativeSrc":"4494:54:28","nodeType":"YulBlock","src":"4494:54:28","statements":[{"nativeSrc":"4504:37:28","nodeType":"YulAssignment","src":"4504:37:28","value":{"arguments":[{"name":"bits","nativeSrc":"4529:4:28","nodeType":"YulIdentifier","src":"4529:4:28"},{"name":"value","nativeSrc":"4535:5:28","nodeType":"YulIdentifier","src":"4535:5:28"}],"functionName":{"name":"shr","nativeSrc":"4525:3:28","nodeType":"YulIdentifier","src":"4525:3:28"},"nativeSrc":"4525:16:28","nodeType":"YulFunctionCall","src":"4525:16:28"},"variableNames":[{"name":"newValue","nativeSrc":"4504:8:28","nodeType":"YulIdentifier","src":"4504:8:28"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4431:117:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4469:4:28","nodeType":"YulTypedName","src":"4469:4:28","type":""},{"name":"value","nativeSrc":"4475:5:28","nodeType":"YulTypedName","src":"4475:5:28","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4485:8:28","nodeType":"YulTypedName","src":"4485:8:28","type":""}],"src":"4431:117:28"},{"body":{"nativeSrc":"4605:118:28","nodeType":"YulBlock","src":"4605:118:28","statements":[{"nativeSrc":"4615:68:28","nodeType":"YulVariableDeclaration","src":"4615:68:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4664:1:28","nodeType":"YulLiteral","src":"4664:1:28","type":"","value":"8"},{"name":"bytes","nativeSrc":"4667:5:28","nodeType":"YulIdentifier","src":"4667:5:28"}],"functionName":{"name":"mul","nativeSrc":"4660:3:28","nodeType":"YulIdentifier","src":"4660:3:28"},"nativeSrc":"4660:13:28","nodeType":"YulFunctionCall","src":"4660:13:28"},{"arguments":[{"kind":"number","nativeSrc":"4679:1:28","nodeType":"YulLiteral","src":"4679:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4675:3:28","nodeType":"YulIdentifier","src":"4675:3:28"},"nativeSrc":"4675:6:28","nodeType":"YulFunctionCall","src":"4675:6:28"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4631:28:28","nodeType":"YulIdentifier","src":"4631:28:28"},"nativeSrc":"4631:51:28","nodeType":"YulFunctionCall","src":"4631:51:28"}],"functionName":{"name":"not","nativeSrc":"4627:3:28","nodeType":"YulIdentifier","src":"4627:3:28"},"nativeSrc":"4627:56:28","nodeType":"YulFunctionCall","src":"4627:56:28"},"variables":[{"name":"mask","nativeSrc":"4619:4:28","nodeType":"YulTypedName","src":"4619:4:28","type":""}]},{"nativeSrc":"4692:25:28","nodeType":"YulAssignment","src":"4692:25:28","value":{"arguments":[{"name":"data","nativeSrc":"4706:4:28","nodeType":"YulIdentifier","src":"4706:4:28"},{"name":"mask","nativeSrc":"4712:4:28","nodeType":"YulIdentifier","src":"4712:4:28"}],"functionName":{"name":"and","nativeSrc":"4702:3:28","nodeType":"YulIdentifier","src":"4702:3:28"},"nativeSrc":"4702:15:28","nodeType":"YulFunctionCall","src":"4702:15:28"},"variableNames":[{"name":"result","nativeSrc":"4692:6:28","nodeType":"YulIdentifier","src":"4692:6:28"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4554:169:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4582:4:28","nodeType":"YulTypedName","src":"4582:4:28","type":""},{"name":"bytes","nativeSrc":"4588:5:28","nodeType":"YulTypedName","src":"4588:5:28","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4598:6:28","nodeType":"YulTypedName","src":"4598:6:28","type":""}],"src":"4554:169:28"},{"body":{"nativeSrc":"4809:214:28","nodeType":"YulBlock","src":"4809:214:28","statements":[{"nativeSrc":"4942:37:28","nodeType":"YulAssignment","src":"4942:37:28","value":{"arguments":[{"name":"data","nativeSrc":"4969:4:28","nodeType":"YulIdentifier","src":"4969:4:28"},{"name":"len","nativeSrc":"4975:3:28","nodeType":"YulIdentifier","src":"4975:3:28"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4950:18:28","nodeType":"YulIdentifier","src":"4950:18:28"},"nativeSrc":"4950:29:28","nodeType":"YulFunctionCall","src":"4950:29:28"},"variableNames":[{"name":"data","nativeSrc":"4942:4:28","nodeType":"YulIdentifier","src":"4942:4:28"}]},{"nativeSrc":"4988:29:28","nodeType":"YulAssignment","src":"4988:29:28","value":{"arguments":[{"name":"data","nativeSrc":"4999:4:28","nodeType":"YulIdentifier","src":"4999:4:28"},{"arguments":[{"kind":"number","nativeSrc":"5009:1:28","nodeType":"YulLiteral","src":"5009:1:28","type":"","value":"2"},{"name":"len","nativeSrc":"5012:3:28","nodeType":"YulIdentifier","src":"5012:3:28"}],"functionName":{"name":"mul","nativeSrc":"5005:3:28","nodeType":"YulIdentifier","src":"5005:3:28"},"nativeSrc":"5005:11:28","nodeType":"YulFunctionCall","src":"5005:11:28"}],"functionName":{"name":"or","nativeSrc":"4996:2:28","nodeType":"YulIdentifier","src":"4996:2:28"},"nativeSrc":"4996:21:28","nodeType":"YulFunctionCall","src":"4996:21:28"},"variableNames":[{"name":"used","nativeSrc":"4988:4:28","nodeType":"YulIdentifier","src":"4988:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4728:295:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4790:4:28","nodeType":"YulTypedName","src":"4790:4:28","type":""},{"name":"len","nativeSrc":"4796:3:28","nodeType":"YulTypedName","src":"4796:3:28","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4804:4:28","nodeType":"YulTypedName","src":"4804:4:28","type":""}],"src":"4728:295:28"},{"body":{"nativeSrc":"5120:1303:28","nodeType":"YulBlock","src":"5120:1303:28","statements":[{"nativeSrc":"5131:51:28","nodeType":"YulVariableDeclaration","src":"5131:51:28","value":{"arguments":[{"name":"src","nativeSrc":"5178:3:28","nodeType":"YulIdentifier","src":"5178:3:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5145:32:28","nodeType":"YulIdentifier","src":"5145:32:28"},"nativeSrc":"5145:37:28","nodeType":"YulFunctionCall","src":"5145:37:28"},"variables":[{"name":"newLen","nativeSrc":"5135:6:28","nodeType":"YulTypedName","src":"5135:6:28","type":""}]},{"body":{"nativeSrc":"5267:22:28","nodeType":"YulBlock","src":"5267:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5269:16:28","nodeType":"YulIdentifier","src":"5269:16:28"},"nativeSrc":"5269:18:28","nodeType":"YulFunctionCall","src":"5269:18:28"},"nativeSrc":"5269:18:28","nodeType":"YulExpressionStatement","src":"5269:18:28"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5239:6:28","nodeType":"YulIdentifier","src":"5239:6:28"},{"kind":"number","nativeSrc":"5247:18:28","nodeType":"YulLiteral","src":"5247:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5236:2:28","nodeType":"YulIdentifier","src":"5236:2:28"},"nativeSrc":"5236:30:28","nodeType":"YulFunctionCall","src":"5236:30:28"},"nativeSrc":"5233:56:28","nodeType":"YulIf","src":"5233:56:28"},{"nativeSrc":"5299:52:28","nodeType":"YulVariableDeclaration","src":"5299:52:28","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5345:4:28","nodeType":"YulIdentifier","src":"5345:4:28"}],"functionName":{"name":"sload","nativeSrc":"5339:5:28","nodeType":"YulIdentifier","src":"5339:5:28"},"nativeSrc":"5339:11:28","nodeType":"YulFunctionCall","src":"5339:11:28"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5313:25:28","nodeType":"YulIdentifier","src":"5313:25:28"},"nativeSrc":"5313:38:28","nodeType":"YulFunctionCall","src":"5313:38:28"},"variables":[{"name":"oldLen","nativeSrc":"5303:6:28","nodeType":"YulTypedName","src":"5303:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5444:4:28","nodeType":"YulIdentifier","src":"5444:4:28"},{"name":"oldLen","nativeSrc":"5450:6:28","nodeType":"YulIdentifier","src":"5450:6:28"},{"name":"newLen","nativeSrc":"5458:6:28","nodeType":"YulIdentifier","src":"5458:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5398:45:28","nodeType":"YulIdentifier","src":"5398:45:28"},"nativeSrc":"5398:67:28","nodeType":"YulFunctionCall","src":"5398:67:28"},"nativeSrc":"5398:67:28","nodeType":"YulExpressionStatement","src":"5398:67:28"},{"nativeSrc":"5475:18:28","nodeType":"YulVariableDeclaration","src":"5475:18:28","value":{"kind":"number","nativeSrc":"5492:1:28","nodeType":"YulLiteral","src":"5492:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5479:9:28","nodeType":"YulTypedName","src":"5479:9:28","type":""}]},{"nativeSrc":"5503:17:28","nodeType":"YulAssignment","src":"5503:17:28","value":{"kind":"number","nativeSrc":"5516:4:28","nodeType":"YulLiteral","src":"5516:4:28","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5503:9:28","nodeType":"YulIdentifier","src":"5503:9:28"}]},{"cases":[{"body":{"nativeSrc":"5567:611:28","nodeType":"YulBlock","src":"5567:611:28","statements":[{"nativeSrc":"5581:37:28","nodeType":"YulVariableDeclaration","src":"5581:37:28","value":{"arguments":[{"name":"newLen","nativeSrc":"5600:6:28","nodeType":"YulIdentifier","src":"5600:6:28"},{"arguments":[{"kind":"number","nativeSrc":"5612:4:28","nodeType":"YulLiteral","src":"5612:4:28","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5608:3:28","nodeType":"YulIdentifier","src":"5608:3:28"},"nativeSrc":"5608:9:28","nodeType":"YulFunctionCall","src":"5608:9:28"}],"functionName":{"name":"and","nativeSrc":"5596:3:28","nodeType":"YulIdentifier","src":"5596:3:28"},"nativeSrc":"5596:22:28","nodeType":"YulFunctionCall","src":"5596:22:28"},"variables":[{"name":"loopEnd","nativeSrc":"5585:7:28","nodeType":"YulTypedName","src":"5585:7:28","type":""}]},{"nativeSrc":"5632:51:28","nodeType":"YulVariableDeclaration","src":"5632:51:28","value":{"arguments":[{"name":"slot","nativeSrc":"5678:4:28","nodeType":"YulIdentifier","src":"5678:4:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5646:31:28","nodeType":"YulIdentifier","src":"5646:31:28"},"nativeSrc":"5646:37:28","nodeType":"YulFunctionCall","src":"5646:37:28"},"variables":[{"name":"dstPtr","nativeSrc":"5636:6:28","nodeType":"YulTypedName","src":"5636:6:28","type":""}]},{"nativeSrc":"5696:10:28","nodeType":"YulVariableDeclaration","src":"5696:10:28","value":{"kind":"number","nativeSrc":"5705:1:28","nodeType":"YulLiteral","src":"5705:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5700:1:28","nodeType":"YulTypedName","src":"5700:1:28","type":""}]},{"body":{"nativeSrc":"5764:163:28","nodeType":"YulBlock","src":"5764:163:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5789:6:28","nodeType":"YulIdentifier","src":"5789:6:28"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5807:3:28","nodeType":"YulIdentifier","src":"5807:3:28"},{"name":"srcOffset","nativeSrc":"5812:9:28","nodeType":"YulIdentifier","src":"5812:9:28"}],"functionName":{"name":"add","nativeSrc":"5803:3:28","nodeType":"YulIdentifier","src":"5803:3:28"},"nativeSrc":"5803:19:28","nodeType":"YulFunctionCall","src":"5803:19:28"}],"functionName":{"name":"mload","nativeSrc":"5797:5:28","nodeType":"YulIdentifier","src":"5797:5:28"},"nativeSrc":"5797:26:28","nodeType":"YulFunctionCall","src":"5797:26:28"}],"functionName":{"name":"sstore","nativeSrc":"5782:6:28","nodeType":"YulIdentifier","src":"5782:6:28"},"nativeSrc":"5782:42:28","nodeType":"YulFunctionCall","src":"5782:42:28"},"nativeSrc":"5782:42:28","nodeType":"YulExpressionStatement","src":"5782:42:28"},{"nativeSrc":"5841:24:28","nodeType":"YulAssignment","src":"5841:24:28","value":{"arguments":[{"name":"dstPtr","nativeSrc":"5855:6:28","nodeType":"YulIdentifier","src":"5855:6:28"},{"kind":"number","nativeSrc":"5863:1:28","nodeType":"YulLiteral","src":"5863:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5851:3:28","nodeType":"YulIdentifier","src":"5851:3:28"},"nativeSrc":"5851:14:28","nodeType":"YulFunctionCall","src":"5851:14:28"},"variableNames":[{"name":"dstPtr","nativeSrc":"5841:6:28","nodeType":"YulIdentifier","src":"5841:6:28"}]},{"nativeSrc":"5882:31:28","nodeType":"YulAssignment","src":"5882:31:28","value":{"arguments":[{"name":"srcOffset","nativeSrc":"5899:9:28","nodeType":"YulIdentifier","src":"5899:9:28"},{"kind":"number","nativeSrc":"5910:2:28","nodeType":"YulLiteral","src":"5910:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5895:3:28","nodeType":"YulIdentifier","src":"5895:3:28"},"nativeSrc":"5895:18:28","nodeType":"YulFunctionCall","src":"5895:18:28"},"variableNames":[{"name":"srcOffset","nativeSrc":"5882:9:28","nodeType":"YulIdentifier","src":"5882:9:28"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5730:1:28","nodeType":"YulIdentifier","src":"5730:1:28"},{"name":"loopEnd","nativeSrc":"5733:7:28","nodeType":"YulIdentifier","src":"5733:7:28"}],"functionName":{"name":"lt","nativeSrc":"5727:2:28","nodeType":"YulIdentifier","src":"5727:2:28"},"nativeSrc":"5727:14:28","nodeType":"YulFunctionCall","src":"5727:14:28"},"nativeSrc":"5719:208:28","nodeType":"YulForLoop","post":{"nativeSrc":"5742:21:28","nodeType":"YulBlock","src":"5742:21:28","statements":[{"nativeSrc":"5744:17:28","nodeType":"YulAssignment","src":"5744:17:28","value":{"arguments":[{"name":"i","nativeSrc":"5753:1:28","nodeType":"YulIdentifier","src":"5753:1:28"},{"kind":"number","nativeSrc":"5756:4:28","nodeType":"YulLiteral","src":"5756:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5749:3:28","nodeType":"YulIdentifier","src":"5749:3:28"},"nativeSrc":"5749:12:28","nodeType":"YulFunctionCall","src":"5749:12:28"},"variableNames":[{"name":"i","nativeSrc":"5744:1:28","nodeType":"YulIdentifier","src":"5744:1:28"}]}]},"pre":{"nativeSrc":"5723:3:28","nodeType":"YulBlock","src":"5723:3:28","statements":[]},"src":"5719:208:28"},{"body":{"nativeSrc":"5963:156:28","nodeType":"YulBlock","src":"5963:156:28","statements":[{"nativeSrc":"5981:43:28","nodeType":"YulVariableDeclaration","src":"5981:43:28","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6008:3:28","nodeType":"YulIdentifier","src":"6008:3:28"},{"name":"srcOffset","nativeSrc":"6013:9:28","nodeType":"YulIdentifier","src":"6013:9:28"}],"functionName":{"name":"add","nativeSrc":"6004:3:28","nodeType":"YulIdentifier","src":"6004:3:28"},"nativeSrc":"6004:19:28","nodeType":"YulFunctionCall","src":"6004:19:28"}],"functionName":{"name":"mload","nativeSrc":"5998:5:28","nodeType":"YulIdentifier","src":"5998:5:28"},"nativeSrc":"5998:26:28","nodeType":"YulFunctionCall","src":"5998:26:28"},"variables":[{"name":"lastValue","nativeSrc":"5985:9:28","nodeType":"YulTypedName","src":"5985:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6048:6:28","nodeType":"YulIdentifier","src":"6048:6:28"},{"arguments":[{"name":"lastValue","nativeSrc":"6075:9:28","nodeType":"YulIdentifier","src":"6075:9:28"},{"arguments":[{"name":"newLen","nativeSrc":"6090:6:28","nodeType":"YulIdentifier","src":"6090:6:28"},{"kind":"number","nativeSrc":"6098:4:28","nodeType":"YulLiteral","src":"6098:4:28","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6086:3:28","nodeType":"YulIdentifier","src":"6086:3:28"},"nativeSrc":"6086:17:28","nodeType":"YulFunctionCall","src":"6086:17:28"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6056:18:28","nodeType":"YulIdentifier","src":"6056:18:28"},"nativeSrc":"6056:48:28","nodeType":"YulFunctionCall","src":"6056:48:28"}],"functionName":{"name":"sstore","nativeSrc":"6041:6:28","nodeType":"YulIdentifier","src":"6041:6:28"},"nativeSrc":"6041:64:28","nodeType":"YulFunctionCall","src":"6041:64:28"},"nativeSrc":"6041:64:28","nodeType":"YulExpressionStatement","src":"6041:64:28"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"5946:7:28","nodeType":"YulIdentifier","src":"5946:7:28"},{"name":"newLen","nativeSrc":"5955:6:28","nodeType":"YulIdentifier","src":"5955:6:28"}],"functionName":{"name":"lt","nativeSrc":"5943:2:28","nodeType":"YulIdentifier","src":"5943:2:28"},"nativeSrc":"5943:19:28","nodeType":"YulFunctionCall","src":"5943:19:28"},"nativeSrc":"5940:179:28","nodeType":"YulIf","src":"5940:179:28"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6139:4:28","nodeType":"YulIdentifier","src":"6139:4:28"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6153:6:28","nodeType":"YulIdentifier","src":"6153:6:28"},{"kind":"number","nativeSrc":"6161:1:28","nodeType":"YulLiteral","src":"6161:1:28","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6149:3:28","nodeType":"YulIdentifier","src":"6149:3:28"},"nativeSrc":"6149:14:28","nodeType":"YulFunctionCall","src":"6149:14:28"},{"kind":"number","nativeSrc":"6165:1:28","nodeType":"YulLiteral","src":"6165:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6145:3:28","nodeType":"YulIdentifier","src":"6145:3:28"},"nativeSrc":"6145:22:28","nodeType":"YulFunctionCall","src":"6145:22:28"}],"functionName":{"name":"sstore","nativeSrc":"6132:6:28","nodeType":"YulIdentifier","src":"6132:6:28"},"nativeSrc":"6132:36:28","nodeType":"YulFunctionCall","src":"6132:36:28"},"nativeSrc":"6132:36:28","nodeType":"YulExpressionStatement","src":"6132:36:28"}]},"nativeSrc":"5560:618:28","nodeType":"YulCase","src":"5560:618:28","value":{"kind":"number","nativeSrc":"5565:1:28","nodeType":"YulLiteral","src":"5565:1:28","type":"","value":"1"}},{"body":{"nativeSrc":"6195:222:28","nodeType":"YulBlock","src":"6195:222:28","statements":[{"nativeSrc":"6209:14:28","nodeType":"YulVariableDeclaration","src":"6209:14:28","value":{"kind":"number","nativeSrc":"6222:1:28","nodeType":"YulLiteral","src":"6222:1:28","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6213:5:28","nodeType":"YulTypedName","src":"6213:5:28","type":""}]},{"body":{"nativeSrc":"6246:67:28","nodeType":"YulBlock","src":"6246:67:28","statements":[{"nativeSrc":"6264:35:28","nodeType":"YulAssignment","src":"6264:35:28","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6283:3:28","nodeType":"YulIdentifier","src":"6283:3:28"},{"name":"srcOffset","nativeSrc":"6288:9:28","nodeType":"YulIdentifier","src":"6288:9:28"}],"functionName":{"name":"add","nativeSrc":"6279:3:28","nodeType":"YulIdentifier","src":"6279:3:28"},"nativeSrc":"6279:19:28","nodeType":"YulFunctionCall","src":"6279:19:28"}],"functionName":{"name":"mload","nativeSrc":"6273:5:28","nodeType":"YulIdentifier","src":"6273:5:28"},"nativeSrc":"6273:26:28","nodeType":"YulFunctionCall","src":"6273:26:28"},"variableNames":[{"name":"value","nativeSrc":"6264:5:28","nodeType":"YulIdentifier","src":"6264:5:28"}]}]},"condition":{"name":"newLen","nativeSrc":"6239:6:28","nodeType":"YulIdentifier","src":"6239:6:28"},"nativeSrc":"6236:77:28","nodeType":"YulIf","src":"6236:77:28"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6333:4:28","nodeType":"YulIdentifier","src":"6333:4:28"},{"arguments":[{"name":"value","nativeSrc":"6392:5:28","nodeType":"YulIdentifier","src":"6392:5:28"},{"name":"newLen","nativeSrc":"6399:6:28","nodeType":"YulIdentifier","src":"6399:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6339:52:28","nodeType":"YulIdentifier","src":"6339:52:28"},"nativeSrc":"6339:67:28","nodeType":"YulFunctionCall","src":"6339:67:28"}],"functionName":{"name":"sstore","nativeSrc":"6326:6:28","nodeType":"YulIdentifier","src":"6326:6:28"},"nativeSrc":"6326:81:28","nodeType":"YulFunctionCall","src":"6326:81:28"},"nativeSrc":"6326:81:28","nodeType":"YulExpressionStatement","src":"6326:81:28"}]},"nativeSrc":"6187:230:28","nodeType":"YulCase","src":"6187:230:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5540:6:28","nodeType":"YulIdentifier","src":"5540:6:28"},{"kind":"number","nativeSrc":"5548:2:28","nodeType":"YulLiteral","src":"5548:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5537:2:28","nodeType":"YulIdentifier","src":"5537:2:28"},"nativeSrc":"5537:14:28","nodeType":"YulFunctionCall","src":"5537:14:28"},"nativeSrc":"5530:887:28","nodeType":"YulSwitch","src":"5530:887:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5028:1395:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5109:4:28","nodeType":"YulTypedName","src":"5109:4:28","type":""},{"name":"src","nativeSrc":"5115:3:28","nodeType":"YulTypedName","src":"5115:3:28","type":""}],"src":"5028:1395:28"},{"body":{"nativeSrc":"6494:53:28","nodeType":"YulBlock","src":"6494:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6511:3:28","nodeType":"YulIdentifier","src":"6511:3:28"},{"arguments":[{"name":"value","nativeSrc":"6534:5:28","nodeType":"YulIdentifier","src":"6534:5:28"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6516:17:28","nodeType":"YulIdentifier","src":"6516:17:28"},"nativeSrc":"6516:24:28","nodeType":"YulFunctionCall","src":"6516:24:28"}],"functionName":{"name":"mstore","nativeSrc":"6504:6:28","nodeType":"YulIdentifier","src":"6504:6:28"},"nativeSrc":"6504:37:28","nodeType":"YulFunctionCall","src":"6504:37:28"},"nativeSrc":"6504:37:28","nodeType":"YulExpressionStatement","src":"6504:37:28"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6429:118:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6482:5:28","nodeType":"YulTypedName","src":"6482:5:28","type":""},{"name":"pos","nativeSrc":"6489:3:28","nodeType":"YulTypedName","src":"6489:3:28","type":""}],"src":"6429:118:28"},{"body":{"nativeSrc":"6651:124:28","nodeType":"YulBlock","src":"6651:124:28","statements":[{"nativeSrc":"6661:26:28","nodeType":"YulAssignment","src":"6661:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6673:9:28","nodeType":"YulIdentifier","src":"6673:9:28"},{"kind":"number","nativeSrc":"6684:2:28","nodeType":"YulLiteral","src":"6684:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6669:3:28","nodeType":"YulIdentifier","src":"6669:3:28"},"nativeSrc":"6669:18:28","nodeType":"YulFunctionCall","src":"6669:18:28"},"variableNames":[{"name":"tail","nativeSrc":"6661:4:28","nodeType":"YulIdentifier","src":"6661:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6741:6:28","nodeType":"YulIdentifier","src":"6741:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"6754:9:28","nodeType":"YulIdentifier","src":"6754:9:28"},{"kind":"number","nativeSrc":"6765:1:28","nodeType":"YulLiteral","src":"6765:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6750:3:28","nodeType":"YulIdentifier","src":"6750:3:28"},"nativeSrc":"6750:17:28","nodeType":"YulFunctionCall","src":"6750:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6697:43:28","nodeType":"YulIdentifier","src":"6697:43:28"},"nativeSrc":"6697:71:28","nodeType":"YulFunctionCall","src":"6697:71:28"},"nativeSrc":"6697:71:28","nodeType":"YulExpressionStatement","src":"6697:71:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6553:222:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6623:9:28","nodeType":"YulTypedName","src":"6623:9:28","type":""},{"name":"value0","nativeSrc":"6635:6:28","nodeType":"YulTypedName","src":"6635:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6646:4:28","nodeType":"YulTypedName","src":"6646:4:28","type":""}],"src":"6553:222:28"},{"body":{"nativeSrc":"6809:152:28","nodeType":"YulBlock","src":"6809:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6826:1:28","nodeType":"YulLiteral","src":"6826:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"6829:77:28","nodeType":"YulLiteral","src":"6829:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6819:6:28","nodeType":"YulIdentifier","src":"6819:6:28"},"nativeSrc":"6819:88:28","nodeType":"YulFunctionCall","src":"6819:88:28"},"nativeSrc":"6819:88:28","nodeType":"YulExpressionStatement","src":"6819:88:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6923:1:28","nodeType":"YulLiteral","src":"6923:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"6926:4:28","nodeType":"YulLiteral","src":"6926:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6916:6:28","nodeType":"YulIdentifier","src":"6916:6:28"},"nativeSrc":"6916:15:28","nodeType":"YulFunctionCall","src":"6916:15:28"},"nativeSrc":"6916:15:28","nodeType":"YulExpressionStatement","src":"6916:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6947:1:28","nodeType":"YulLiteral","src":"6947:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"6950:4:28","nodeType":"YulLiteral","src":"6950:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6940:6:28","nodeType":"YulIdentifier","src":"6940:6:28"},"nativeSrc":"6940:15:28","nodeType":"YulFunctionCall","src":"6940:15:28"},"nativeSrc":"6940:15:28","nodeType":"YulExpressionStatement","src":"6940:15:28"}]},"name":"panic_error_0x11","nativeSrc":"6781:180:28","nodeType":"YulFunctionDefinition","src":"6781:180:28"},{"body":{"nativeSrc":"7018:51:28","nodeType":"YulBlock","src":"7018:51:28","statements":[{"nativeSrc":"7028:34:28","nodeType":"YulAssignment","src":"7028:34:28","value":{"arguments":[{"kind":"number","nativeSrc":"7053:1:28","nodeType":"YulLiteral","src":"7053:1:28","type":"","value":"1"},{"name":"value","nativeSrc":"7056:5:28","nodeType":"YulIdentifier","src":"7056:5:28"}],"functionName":{"name":"shr","nativeSrc":"7049:3:28","nodeType":"YulIdentifier","src":"7049:3:28"},"nativeSrc":"7049:13:28","nodeType":"YulFunctionCall","src":"7049:13:28"},"variableNames":[{"name":"newValue","nativeSrc":"7028:8:28","nodeType":"YulIdentifier","src":"7028:8:28"}]}]},"name":"shift_right_1_unsigned","nativeSrc":"6967:102:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6999:5:28","nodeType":"YulTypedName","src":"6999:5:28","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"7009:8:28","nodeType":"YulTypedName","src":"7009:8:28","type":""}],"src":"6967:102:28"},{"body":{"nativeSrc":"7148:775:28","nodeType":"YulBlock","src":"7148:775:28","statements":[{"nativeSrc":"7158:15:28","nodeType":"YulAssignment","src":"7158:15:28","value":{"name":"_power","nativeSrc":"7167:6:28","nodeType":"YulIdentifier","src":"7167:6:28"},"variableNames":[{"name":"power","nativeSrc":"7158:5:28","nodeType":"YulIdentifier","src":"7158:5:28"}]},{"nativeSrc":"7182:14:28","nodeType":"YulAssignment","src":"7182:14:28","value":{"name":"_base","nativeSrc":"7191:5:28","nodeType":"YulIdentifier","src":"7191:5:28"},"variableNames":[{"name":"base","nativeSrc":"7182:4:28","nodeType":"YulIdentifier","src":"7182:4:28"}]},{"body":{"nativeSrc":"7240:677:28","nodeType":"YulBlock","src":"7240:677:28","statements":[{"body":{"nativeSrc":"7328:22:28","nodeType":"YulBlock","src":"7328:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7330:16:28","nodeType":"YulIdentifier","src":"7330:16:28"},"nativeSrc":"7330:18:28","nodeType":"YulFunctionCall","src":"7330:18:28"},"nativeSrc":"7330:18:28","nodeType":"YulExpressionStatement","src":"7330:18:28"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"7306:4:28","nodeType":"YulIdentifier","src":"7306:4:28"},{"arguments":[{"name":"max","nativeSrc":"7316:3:28","nodeType":"YulIdentifier","src":"7316:3:28"},{"name":"base","nativeSrc":"7321:4:28","nodeType":"YulIdentifier","src":"7321:4:28"}],"functionName":{"name":"div","nativeSrc":"7312:3:28","nodeType":"YulIdentifier","src":"7312:3:28"},"nativeSrc":"7312:14:28","nodeType":"YulFunctionCall","src":"7312:14:28"}],"functionName":{"name":"gt","nativeSrc":"7303:2:28","nodeType":"YulIdentifier","src":"7303:2:28"},"nativeSrc":"7303:24:28","nodeType":"YulFunctionCall","src":"7303:24:28"},"nativeSrc":"7300:50:28","nodeType":"YulIf","src":"7300:50:28"},{"body":{"nativeSrc":"7395:419:28","nodeType":"YulBlock","src":"7395:419:28","statements":[{"nativeSrc":"7775:25:28","nodeType":"YulAssignment","src":"7775:25:28","value":{"arguments":[{"name":"power","nativeSrc":"7788:5:28","nodeType":"YulIdentifier","src":"7788:5:28"},{"name":"base","nativeSrc":"7795:4:28","nodeType":"YulIdentifier","src":"7795:4:28"}],"functionName":{"name":"mul","nativeSrc":"7784:3:28","nodeType":"YulIdentifier","src":"7784:3:28"},"nativeSrc":"7784:16:28","nodeType":"YulFunctionCall","src":"7784:16:28"},"variableNames":[{"name":"power","nativeSrc":"7775:5:28","nodeType":"YulIdentifier","src":"7775:5:28"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7370:8:28","nodeType":"YulIdentifier","src":"7370:8:28"},{"kind":"number","nativeSrc":"7380:1:28","nodeType":"YulLiteral","src":"7380:1:28","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"7366:3:28","nodeType":"YulIdentifier","src":"7366:3:28"},"nativeSrc":"7366:16:28","nodeType":"YulFunctionCall","src":"7366:16:28"},"nativeSrc":"7363:451:28","nodeType":"YulIf","src":"7363:451:28"},{"nativeSrc":"7827:23:28","nodeType":"YulAssignment","src":"7827:23:28","value":{"arguments":[{"name":"base","nativeSrc":"7839:4:28","nodeType":"YulIdentifier","src":"7839:4:28"},{"name":"base","nativeSrc":"7845:4:28","nodeType":"YulIdentifier","src":"7845:4:28"}],"functionName":{"name":"mul","nativeSrc":"7835:3:28","nodeType":"YulIdentifier","src":"7835:3:28"},"nativeSrc":"7835:15:28","nodeType":"YulFunctionCall","src":"7835:15:28"},"variableNames":[{"name":"base","nativeSrc":"7827:4:28","nodeType":"YulIdentifier","src":"7827:4:28"}]},{"nativeSrc":"7863:44:28","nodeType":"YulAssignment","src":"7863:44:28","value":{"arguments":[{"name":"exponent","nativeSrc":"7898:8:28","nodeType":"YulIdentifier","src":"7898:8:28"}],"functionName":{"name":"shift_right_1_unsigned","nativeSrc":"7875:22:28","nodeType":"YulIdentifier","src":"7875:22:28"},"nativeSrc":"7875:32:28","nodeType":"YulFunctionCall","src":"7875:32:28"},"variableNames":[{"name":"exponent","nativeSrc":"7863:8:28","nodeType":"YulIdentifier","src":"7863:8:28"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7216:8:28","nodeType":"YulIdentifier","src":"7216:8:28"},{"kind":"number","nativeSrc":"7226:1:28","nodeType":"YulLiteral","src":"7226:1:28","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"7213:2:28","nodeType":"YulIdentifier","src":"7213:2:28"},"nativeSrc":"7213:15:28","nodeType":"YulFunctionCall","src":"7213:15:28"},"nativeSrc":"7205:712:28","nodeType":"YulForLoop","post":{"nativeSrc":"7229:2:28","nodeType":"YulBlock","src":"7229:2:28","statements":[]},"pre":{"nativeSrc":"7209:3:28","nodeType":"YulBlock","src":"7209:3:28","statements":[]},"src":"7205:712:28"}]},"name":"checked_exp_helper","nativeSrc":"7075:848:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nativeSrc":"7103:6:28","nodeType":"YulTypedName","src":"7103:6:28","type":""},{"name":"_base","nativeSrc":"7111:5:28","nodeType":"YulTypedName","src":"7111:5:28","type":""},{"name":"exponent","nativeSrc":"7118:8:28","nodeType":"YulTypedName","src":"7118:8:28","type":""},{"name":"max","nativeSrc":"7128:3:28","nodeType":"YulTypedName","src":"7128:3:28","type":""}],"returnVariables":[{"name":"power","nativeSrc":"7136:5:28","nodeType":"YulTypedName","src":"7136:5:28","type":""},{"name":"base","nativeSrc":"7143:4:28","nodeType":"YulTypedName","src":"7143:4:28","type":""}],"src":"7075:848:28"},{"body":{"nativeSrc":"7989:1013:28","nodeType":"YulBlock","src":"7989:1013:28","statements":[{"body":{"nativeSrc":"8184:20:28","nodeType":"YulBlock","src":"8184:20:28","statements":[{"nativeSrc":"8186:10:28","nodeType":"YulAssignment","src":"8186:10:28","value":{"kind":"number","nativeSrc":"8195:1:28","nodeType":"YulLiteral","src":"8195:1:28","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"8186:5:28","nodeType":"YulIdentifier","src":"8186:5:28"}]},{"nativeSrc":"8197:5:28","nodeType":"YulLeave","src":"8197:5:28"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"8174:8:28","nodeType":"YulIdentifier","src":"8174:8:28"}],"functionName":{"name":"iszero","nativeSrc":"8167:6:28","nodeType":"YulIdentifier","src":"8167:6:28"},"nativeSrc":"8167:16:28","nodeType":"YulFunctionCall","src":"8167:16:28"},"nativeSrc":"8164:40:28","nodeType":"YulIf","src":"8164:40:28"},{"body":{"nativeSrc":"8229:20:28","nodeType":"YulBlock","src":"8229:20:28","statements":[{"nativeSrc":"8231:10:28","nodeType":"YulAssignment","src":"8231:10:28","value":{"kind":"number","nativeSrc":"8240:1:28","nodeType":"YulLiteral","src":"8240:1:28","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"8231:5:28","nodeType":"YulIdentifier","src":"8231:5:28"}]},{"nativeSrc":"8242:5:28","nodeType":"YulLeave","src":"8242:5:28"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"8223:4:28","nodeType":"YulIdentifier","src":"8223:4:28"}],"functionName":{"name":"iszero","nativeSrc":"8216:6:28","nodeType":"YulIdentifier","src":"8216:6:28"},"nativeSrc":"8216:12:28","nodeType":"YulFunctionCall","src":"8216:12:28"},"nativeSrc":"8213:36:28","nodeType":"YulIf","src":"8213:36:28"},{"cases":[{"body":{"nativeSrc":"8359:20:28","nodeType":"YulBlock","src":"8359:20:28","statements":[{"nativeSrc":"8361:10:28","nodeType":"YulAssignment","src":"8361:10:28","value":{"kind":"number","nativeSrc":"8370:1:28","nodeType":"YulLiteral","src":"8370:1:28","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"8361:5:28","nodeType":"YulIdentifier","src":"8361:5:28"}]},{"nativeSrc":"8372:5:28","nodeType":"YulLeave","src":"8372:5:28"}]},"nativeSrc":"8352:27:28","nodeType":"YulCase","src":"8352:27:28","value":{"kind":"number","nativeSrc":"8357:1:28","nodeType":"YulLiteral","src":"8357:1:28","type":"","value":"1"}},{"body":{"nativeSrc":"8403:176:28","nodeType":"YulBlock","src":"8403:176:28","statements":[{"body":{"nativeSrc":"8438:22:28","nodeType":"YulBlock","src":"8438:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8440:16:28","nodeType":"YulIdentifier","src":"8440:16:28"},"nativeSrc":"8440:18:28","nodeType":"YulFunctionCall","src":"8440:18:28"},"nativeSrc":"8440:18:28","nodeType":"YulExpressionStatement","src":"8440:18:28"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"8423:8:28","nodeType":"YulIdentifier","src":"8423:8:28"},{"kind":"number","nativeSrc":"8433:3:28","nodeType":"YulLiteral","src":"8433:3:28","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"8420:2:28","nodeType":"YulIdentifier","src":"8420:2:28"},"nativeSrc":"8420:17:28","nodeType":"YulFunctionCall","src":"8420:17:28"},"nativeSrc":"8417:43:28","nodeType":"YulIf","src":"8417:43:28"},{"nativeSrc":"8473:25:28","nodeType":"YulAssignment","src":"8473:25:28","value":{"arguments":[{"kind":"number","nativeSrc":"8486:1:28","nodeType":"YulLiteral","src":"8486:1:28","type":"","value":"2"},{"name":"exponent","nativeSrc":"8489:8:28","nodeType":"YulIdentifier","src":"8489:8:28"}],"functionName":{"name":"exp","nativeSrc":"8482:3:28","nodeType":"YulIdentifier","src":"8482:3:28"},"nativeSrc":"8482:16:28","nodeType":"YulFunctionCall","src":"8482:16:28"},"variableNames":[{"name":"power","nativeSrc":"8473:5:28","nodeType":"YulIdentifier","src":"8473:5:28"}]},{"body":{"nativeSrc":"8529:22:28","nodeType":"YulBlock","src":"8529:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8531:16:28","nodeType":"YulIdentifier","src":"8531:16:28"},"nativeSrc":"8531:18:28","nodeType":"YulFunctionCall","src":"8531:18:28"},"nativeSrc":"8531:18:28","nodeType":"YulExpressionStatement","src":"8531:18:28"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"8517:5:28","nodeType":"YulIdentifier","src":"8517:5:28"},{"name":"max","nativeSrc":"8524:3:28","nodeType":"YulIdentifier","src":"8524:3:28"}],"functionName":{"name":"gt","nativeSrc":"8514:2:28","nodeType":"YulIdentifier","src":"8514:2:28"},"nativeSrc":"8514:14:28","nodeType":"YulFunctionCall","src":"8514:14:28"},"nativeSrc":"8511:40:28","nodeType":"YulIf","src":"8511:40:28"},{"nativeSrc":"8564:5:28","nodeType":"YulLeave","src":"8564:5:28"}]},"nativeSrc":"8388:191:28","nodeType":"YulCase","src":"8388:191:28","value":{"kind":"number","nativeSrc":"8393:1:28","nodeType":"YulLiteral","src":"8393:1:28","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"8309:4:28","nodeType":"YulIdentifier","src":"8309:4:28"},"nativeSrc":"8302:277:28","nodeType":"YulSwitch","src":"8302:277:28"},{"body":{"nativeSrc":"8711:123:28","nodeType":"YulBlock","src":"8711:123:28","statements":[{"nativeSrc":"8725:28:28","nodeType":"YulAssignment","src":"8725:28:28","value":{"arguments":[{"name":"base","nativeSrc":"8738:4:28","nodeType":"YulIdentifier","src":"8738:4:28"},{"name":"exponent","nativeSrc":"8744:8:28","nodeType":"YulIdentifier","src":"8744:8:28"}],"functionName":{"name":"exp","nativeSrc":"8734:3:28","nodeType":"YulIdentifier","src":"8734:3:28"},"nativeSrc":"8734:19:28","nodeType":"YulFunctionCall","src":"8734:19:28"},"variableNames":[{"name":"power","nativeSrc":"8725:5:28","nodeType":"YulIdentifier","src":"8725:5:28"}]},{"body":{"nativeSrc":"8784:22:28","nodeType":"YulBlock","src":"8784:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8786:16:28","nodeType":"YulIdentifier","src":"8786:16:28"},"nativeSrc":"8786:18:28","nodeType":"YulFunctionCall","src":"8786:18:28"},"nativeSrc":"8786:18:28","nodeType":"YulExpressionStatement","src":"8786:18:28"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"8772:5:28","nodeType":"YulIdentifier","src":"8772:5:28"},{"name":"max","nativeSrc":"8779:3:28","nodeType":"YulIdentifier","src":"8779:3:28"}],"functionName":{"name":"gt","nativeSrc":"8769:2:28","nodeType":"YulIdentifier","src":"8769:2:28"},"nativeSrc":"8769:14:28","nodeType":"YulFunctionCall","src":"8769:14:28"},"nativeSrc":"8766:40:28","nodeType":"YulIf","src":"8766:40:28"},{"nativeSrc":"8819:5:28","nodeType":"YulLeave","src":"8819:5:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"8614:4:28","nodeType":"YulIdentifier","src":"8614:4:28"},{"kind":"number","nativeSrc":"8620:2:28","nodeType":"YulLiteral","src":"8620:2:28","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"8611:2:28","nodeType":"YulIdentifier","src":"8611:2:28"},"nativeSrc":"8611:12:28","nodeType":"YulFunctionCall","src":"8611:12:28"},{"arguments":[{"name":"exponent","nativeSrc":"8628:8:28","nodeType":"YulIdentifier","src":"8628:8:28"},{"kind":"number","nativeSrc":"8638:2:28","nodeType":"YulLiteral","src":"8638:2:28","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"8625:2:28","nodeType":"YulIdentifier","src":"8625:2:28"},"nativeSrc":"8625:16:28","nodeType":"YulFunctionCall","src":"8625:16:28"}],"functionName":{"name":"and","nativeSrc":"8607:3:28","nodeType":"YulIdentifier","src":"8607:3:28"},"nativeSrc":"8607:35:28","nodeType":"YulFunctionCall","src":"8607:35:28"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"8663:4:28","nodeType":"YulIdentifier","src":"8663:4:28"},{"kind":"number","nativeSrc":"8669:3:28","nodeType":"YulLiteral","src":"8669:3:28","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"8660:2:28","nodeType":"YulIdentifier","src":"8660:2:28"},"nativeSrc":"8660:13:28","nodeType":"YulFunctionCall","src":"8660:13:28"},{"arguments":[{"name":"exponent","nativeSrc":"8678:8:28","nodeType":"YulIdentifier","src":"8678:8:28"},{"kind":"number","nativeSrc":"8688:2:28","nodeType":"YulLiteral","src":"8688:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"8675:2:28","nodeType":"YulIdentifier","src":"8675:2:28"},"nativeSrc":"8675:16:28","nodeType":"YulFunctionCall","src":"8675:16:28"}],"functionName":{"name":"and","nativeSrc":"8656:3:28","nodeType":"YulIdentifier","src":"8656:3:28"},"nativeSrc":"8656:36:28","nodeType":"YulFunctionCall","src":"8656:36:28"}],"functionName":{"name":"or","nativeSrc":"8591:2:28","nodeType":"YulIdentifier","src":"8591:2:28"},"nativeSrc":"8591:111:28","nodeType":"YulFunctionCall","src":"8591:111:28"},"nativeSrc":"8588:246:28","nodeType":"YulIf","src":"8588:246:28"},{"nativeSrc":"8844:57:28","nodeType":"YulAssignment","src":"8844:57:28","value":{"arguments":[{"kind":"number","nativeSrc":"8878:1:28","nodeType":"YulLiteral","src":"8878:1:28","type":"","value":"1"},{"name":"base","nativeSrc":"8881:4:28","nodeType":"YulIdentifier","src":"8881:4:28"},{"name":"exponent","nativeSrc":"8887:8:28","nodeType":"YulIdentifier","src":"8887:8:28"},{"name":"max","nativeSrc":"8897:3:28","nodeType":"YulIdentifier","src":"8897:3:28"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"8859:18:28","nodeType":"YulIdentifier","src":"8859:18:28"},"nativeSrc":"8859:42:28","nodeType":"YulFunctionCall","src":"8859:42:28"},"variableNames":[{"name":"power","nativeSrc":"8844:5:28","nodeType":"YulIdentifier","src":"8844:5:28"},{"name":"base","nativeSrc":"8851:4:28","nodeType":"YulIdentifier","src":"8851:4:28"}]},{"body":{"nativeSrc":"8940:22:28","nodeType":"YulBlock","src":"8940:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8942:16:28","nodeType":"YulIdentifier","src":"8942:16:28"},"nativeSrc":"8942:18:28","nodeType":"YulFunctionCall","src":"8942:18:28"},"nativeSrc":"8942:18:28","nodeType":"YulExpressionStatement","src":"8942:18:28"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"8917:5:28","nodeType":"YulIdentifier","src":"8917:5:28"},{"arguments":[{"name":"max","nativeSrc":"8928:3:28","nodeType":"YulIdentifier","src":"8928:3:28"},{"name":"base","nativeSrc":"8933:4:28","nodeType":"YulIdentifier","src":"8933:4:28"}],"functionName":{"name":"div","nativeSrc":"8924:3:28","nodeType":"YulIdentifier","src":"8924:3:28"},"nativeSrc":"8924:14:28","nodeType":"YulFunctionCall","src":"8924:14:28"}],"functionName":{"name":"gt","nativeSrc":"8914:2:28","nodeType":"YulIdentifier","src":"8914:2:28"},"nativeSrc":"8914:25:28","nodeType":"YulFunctionCall","src":"8914:25:28"},"nativeSrc":"8911:51:28","nodeType":"YulIf","src":"8911:51:28"},{"nativeSrc":"8971:25:28","nodeType":"YulAssignment","src":"8971:25:28","value":{"arguments":[{"name":"power","nativeSrc":"8984:5:28","nodeType":"YulIdentifier","src":"8984:5:28"},{"name":"base","nativeSrc":"8991:4:28","nodeType":"YulIdentifier","src":"8991:4:28"}],"functionName":{"name":"mul","nativeSrc":"8980:3:28","nodeType":"YulIdentifier","src":"8980:3:28"},"nativeSrc":"8980:16:28","nodeType":"YulFunctionCall","src":"8980:16:28"},"variableNames":[{"name":"power","nativeSrc":"8971:5:28","nodeType":"YulIdentifier","src":"8971:5:28"}]}]},"name":"checked_exp_unsigned","nativeSrc":"7929:1073:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"7959:4:28","nodeType":"YulTypedName","src":"7959:4:28","type":""},{"name":"exponent","nativeSrc":"7965:8:28","nodeType":"YulTypedName","src":"7965:8:28","type":""},{"name":"max","nativeSrc":"7975:3:28","nodeType":"YulTypedName","src":"7975:3:28","type":""}],"returnVariables":[{"name":"power","nativeSrc":"7983:5:28","nodeType":"YulTypedName","src":"7983:5:28","type":""}],"src":"7929:1073:28"},{"body":{"nativeSrc":"9051:43:28","nodeType":"YulBlock","src":"9051:43:28","statements":[{"nativeSrc":"9061:27:28","nodeType":"YulAssignment","src":"9061:27:28","value":{"arguments":[{"name":"value","nativeSrc":"9076:5:28","nodeType":"YulIdentifier","src":"9076:5:28"},{"kind":"number","nativeSrc":"9083:4:28","nodeType":"YulLiteral","src":"9083:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"9072:3:28","nodeType":"YulIdentifier","src":"9072:3:28"},"nativeSrc":"9072:16:28","nodeType":"YulFunctionCall","src":"9072:16:28"},"variableNames":[{"name":"cleaned","nativeSrc":"9061:7:28","nodeType":"YulIdentifier","src":"9061:7:28"}]}]},"name":"cleanup_t_uint8","nativeSrc":"9008:86:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9033:5:28","nodeType":"YulTypedName","src":"9033:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9043:7:28","nodeType":"YulTypedName","src":"9043:7:28","type":""}],"src":"9008:86:28"},{"body":{"nativeSrc":"9164:217:28","nodeType":"YulBlock","src":"9164:217:28","statements":[{"nativeSrc":"9174:31:28","nodeType":"YulAssignment","src":"9174:31:28","value":{"arguments":[{"name":"base","nativeSrc":"9200:4:28","nodeType":"YulIdentifier","src":"9200:4:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9182:17:28","nodeType":"YulIdentifier","src":"9182:17:28"},"nativeSrc":"9182:23:28","nodeType":"YulFunctionCall","src":"9182:23:28"},"variableNames":[{"name":"base","nativeSrc":"9174:4:28","nodeType":"YulIdentifier","src":"9174:4:28"}]},{"nativeSrc":"9214:37:28","nodeType":"YulAssignment","src":"9214:37:28","value":{"arguments":[{"name":"exponent","nativeSrc":"9242:8:28","nodeType":"YulIdentifier","src":"9242:8:28"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"9226:15:28","nodeType":"YulIdentifier","src":"9226:15:28"},"nativeSrc":"9226:25:28","nodeType":"YulFunctionCall","src":"9226:25:28"},"variableNames":[{"name":"exponent","nativeSrc":"9214:8:28","nodeType":"YulIdentifier","src":"9214:8:28"}]},{"nativeSrc":"9261:113:28","nodeType":"YulAssignment","src":"9261:113:28","value":{"arguments":[{"name":"base","nativeSrc":"9291:4:28","nodeType":"YulIdentifier","src":"9291:4:28"},{"name":"exponent","nativeSrc":"9297:8:28","nodeType":"YulIdentifier","src":"9297:8:28"},{"kind":"number","nativeSrc":"9307:66:28","nodeType":"YulLiteral","src":"9307:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"9270:20:28","nodeType":"YulIdentifier","src":"9270:20:28"},"nativeSrc":"9270:104:28","nodeType":"YulFunctionCall","src":"9270:104:28"},"variableNames":[{"name":"power","nativeSrc":"9261:5:28","nodeType":"YulIdentifier","src":"9261:5:28"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"9100:281:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"9139:4:28","nodeType":"YulTypedName","src":"9139:4:28","type":""},{"name":"exponent","nativeSrc":"9145:8:28","nodeType":"YulTypedName","src":"9145:8:28","type":""}],"returnVariables":[{"name":"power","nativeSrc":"9158:5:28","nodeType":"YulTypedName","src":"9158:5:28","type":""}],"src":"9100:281:28"},{"body":{"nativeSrc":"9435:362:28","nodeType":"YulBlock","src":"9435:362:28","statements":[{"nativeSrc":"9445:25:28","nodeType":"YulAssignment","src":"9445:25:28","value":{"arguments":[{"name":"x","nativeSrc":"9468:1:28","nodeType":"YulIdentifier","src":"9468:1:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9450:17:28","nodeType":"YulIdentifier","src":"9450:17:28"},"nativeSrc":"9450:20:28","nodeType":"YulFunctionCall","src":"9450:20:28"},"variableNames":[{"name":"x","nativeSrc":"9445:1:28","nodeType":"YulIdentifier","src":"9445:1:28"}]},{"nativeSrc":"9479:25:28","nodeType":"YulAssignment","src":"9479:25:28","value":{"arguments":[{"name":"y","nativeSrc":"9502:1:28","nodeType":"YulIdentifier","src":"9502:1:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9484:17:28","nodeType":"YulIdentifier","src":"9484:17:28"},"nativeSrc":"9484:20:28","nodeType":"YulFunctionCall","src":"9484:20:28"},"variableNames":[{"name":"y","nativeSrc":"9479:1:28","nodeType":"YulIdentifier","src":"9479:1:28"}]},{"nativeSrc":"9513:28:28","nodeType":"YulVariableDeclaration","src":"9513:28:28","value":{"arguments":[{"name":"x","nativeSrc":"9536:1:28","nodeType":"YulIdentifier","src":"9536:1:28"},{"name":"y","nativeSrc":"9539:1:28","nodeType":"YulIdentifier","src":"9539:1:28"}],"functionName":{"name":"mul","nativeSrc":"9532:3:28","nodeType":"YulIdentifier","src":"9532:3:28"},"nativeSrc":"9532:9:28","nodeType":"YulFunctionCall","src":"9532:9:28"},"variables":[{"name":"product_raw","nativeSrc":"9517:11:28","nodeType":"YulTypedName","src":"9517:11:28","type":""}]},{"nativeSrc":"9550:41:28","nodeType":"YulAssignment","src":"9550:41:28","value":{"arguments":[{"name":"product_raw","nativeSrc":"9579:11:28","nodeType":"YulIdentifier","src":"9579:11:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9561:17:28","nodeType":"YulIdentifier","src":"9561:17:28"},"nativeSrc":"9561:30:28","nodeType":"YulFunctionCall","src":"9561:30:28"},"variableNames":[{"name":"product","nativeSrc":"9550:7:28","nodeType":"YulIdentifier","src":"9550:7:28"}]},{"body":{"nativeSrc":"9768:22:28","nodeType":"YulBlock","src":"9768:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9770:16:28","nodeType":"YulIdentifier","src":"9770:16:28"},"nativeSrc":"9770:18:28","nodeType":"YulFunctionCall","src":"9770:18:28"},"nativeSrc":"9770:18:28","nodeType":"YulExpressionStatement","src":"9770:18:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"9701:1:28","nodeType":"YulIdentifier","src":"9701:1:28"}],"functionName":{"name":"iszero","nativeSrc":"9694:6:28","nodeType":"YulIdentifier","src":"9694:6:28"},"nativeSrc":"9694:9:28","nodeType":"YulFunctionCall","src":"9694:9:28"},{"arguments":[{"name":"y","nativeSrc":"9724:1:28","nodeType":"YulIdentifier","src":"9724:1:28"},{"arguments":[{"name":"product","nativeSrc":"9731:7:28","nodeType":"YulIdentifier","src":"9731:7:28"},{"name":"x","nativeSrc":"9740:1:28","nodeType":"YulIdentifier","src":"9740:1:28"}],"functionName":{"name":"div","nativeSrc":"9727:3:28","nodeType":"YulIdentifier","src":"9727:3:28"},"nativeSrc":"9727:15:28","nodeType":"YulFunctionCall","src":"9727:15:28"}],"functionName":{"name":"eq","nativeSrc":"9721:2:28","nodeType":"YulIdentifier","src":"9721:2:28"},"nativeSrc":"9721:22:28","nodeType":"YulFunctionCall","src":"9721:22:28"}],"functionName":{"name":"or","nativeSrc":"9674:2:28","nodeType":"YulIdentifier","src":"9674:2:28"},"nativeSrc":"9674:83:28","nodeType":"YulFunctionCall","src":"9674:83:28"}],"functionName":{"name":"iszero","nativeSrc":"9654:6:28","nodeType":"YulIdentifier","src":"9654:6:28"},"nativeSrc":"9654:113:28","nodeType":"YulFunctionCall","src":"9654:113:28"},"nativeSrc":"9651:139:28","nodeType":"YulIf","src":"9651:139:28"}]},"name":"checked_mul_t_uint256","nativeSrc":"9387:410:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9418:1:28","nodeType":"YulTypedName","src":"9418:1:28","type":""},{"name":"y","nativeSrc":"9421:1:28","nodeType":"YulTypedName","src":"9421:1:28","type":""}],"returnVariables":[{"name":"product","nativeSrc":"9427:7:28","nodeType":"YulTypedName","src":"9427:7:28","type":""}],"src":"9387:410:28"},{"body":{"nativeSrc":"9848:32:28","nodeType":"YulBlock","src":"9848:32:28","statements":[{"nativeSrc":"9858:16:28","nodeType":"YulAssignment","src":"9858:16:28","value":{"name":"value","nativeSrc":"9869:5:28","nodeType":"YulIdentifier","src":"9869:5:28"},"variableNames":[{"name":"cleaned","nativeSrc":"9858:7:28","nodeType":"YulIdentifier","src":"9858:7:28"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"9803:77:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9830:5:28","nodeType":"YulTypedName","src":"9830:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9840:7:28","nodeType":"YulTypedName","src":"9840:7:28","type":""}],"src":"9803:77:28"},{"body":{"nativeSrc":"9951:53:28","nodeType":"YulBlock","src":"9951:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9968:3:28","nodeType":"YulIdentifier","src":"9968:3:28"},{"arguments":[{"name":"value","nativeSrc":"9991:5:28","nodeType":"YulIdentifier","src":"9991:5:28"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"9973:17:28","nodeType":"YulIdentifier","src":"9973:17:28"},"nativeSrc":"9973:24:28","nodeType":"YulFunctionCall","src":"9973:24:28"}],"functionName":{"name":"mstore","nativeSrc":"9961:6:28","nodeType":"YulIdentifier","src":"9961:6:28"},"nativeSrc":"9961:37:28","nodeType":"YulFunctionCall","src":"9961:37:28"},"nativeSrc":"9961:37:28","nodeType":"YulExpressionStatement","src":"9961:37:28"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9886:118:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9939:5:28","nodeType":"YulTypedName","src":"9939:5:28","type":""},{"name":"pos","nativeSrc":"9946:3:28","nodeType":"YulTypedName","src":"9946:3:28","type":""}],"src":"9886:118:28"},{"body":{"nativeSrc":"10075:53:28","nodeType":"YulBlock","src":"10075:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10092:3:28","nodeType":"YulIdentifier","src":"10092:3:28"},{"arguments":[{"name":"value","nativeSrc":"10115:5:28","nodeType":"YulIdentifier","src":"10115:5:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10097:17:28","nodeType":"YulIdentifier","src":"10097:17:28"},"nativeSrc":"10097:24:28","nodeType":"YulFunctionCall","src":"10097:24:28"}],"functionName":{"name":"mstore","nativeSrc":"10085:6:28","nodeType":"YulIdentifier","src":"10085:6:28"},"nativeSrc":"10085:37:28","nodeType":"YulFunctionCall","src":"10085:37:28"},"nativeSrc":"10085:37:28","nodeType":"YulExpressionStatement","src":"10085:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10010:118:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10063:5:28","nodeType":"YulTypedName","src":"10063:5:28","type":""},{"name":"pos","nativeSrc":"10070:3:28","nodeType":"YulTypedName","src":"10070:3:28","type":""}],"src":"10010:118:28"},{"body":{"nativeSrc":"10344:454:28","nodeType":"YulBlock","src":"10344:454:28","statements":[{"nativeSrc":"10354:27:28","nodeType":"YulAssignment","src":"10354:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"10366:9:28","nodeType":"YulIdentifier","src":"10366:9:28"},{"kind":"number","nativeSrc":"10377:3:28","nodeType":"YulLiteral","src":"10377:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"10362:3:28","nodeType":"YulIdentifier","src":"10362:3:28"},"nativeSrc":"10362:19:28","nodeType":"YulFunctionCall","src":"10362:19:28"},"variableNames":[{"name":"tail","nativeSrc":"10354:4:28","nodeType":"YulIdentifier","src":"10354:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10435:6:28","nodeType":"YulIdentifier","src":"10435:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"10448:9:28","nodeType":"YulIdentifier","src":"10448:9:28"},{"kind":"number","nativeSrc":"10459:1:28","nodeType":"YulLiteral","src":"10459:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10444:3:28","nodeType":"YulIdentifier","src":"10444:3:28"},"nativeSrc":"10444:17:28","nodeType":"YulFunctionCall","src":"10444:17:28"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10391:43:28","nodeType":"YulIdentifier","src":"10391:43:28"},"nativeSrc":"10391:71:28","nodeType":"YulFunctionCall","src":"10391:71:28"},"nativeSrc":"10391:71:28","nodeType":"YulExpressionStatement","src":"10391:71:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10516:6:28","nodeType":"YulIdentifier","src":"10516:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"10529:9:28","nodeType":"YulIdentifier","src":"10529:9:28"},{"kind":"number","nativeSrc":"10540:2:28","nodeType":"YulLiteral","src":"10540:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10525:3:28","nodeType":"YulIdentifier","src":"10525:3:28"},"nativeSrc":"10525:18:28","nodeType":"YulFunctionCall","src":"10525:18:28"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10472:43:28","nodeType":"YulIdentifier","src":"10472:43:28"},"nativeSrc":"10472:72:28","nodeType":"YulFunctionCall","src":"10472:72:28"},"nativeSrc":"10472:72:28","nodeType":"YulExpressionStatement","src":"10472:72:28"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10598:6:28","nodeType":"YulIdentifier","src":"10598:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"10611:9:28","nodeType":"YulIdentifier","src":"10611:9:28"},{"kind":"number","nativeSrc":"10622:2:28","nodeType":"YulLiteral","src":"10622:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10607:3:28","nodeType":"YulIdentifier","src":"10607:3:28"},"nativeSrc":"10607:18:28","nodeType":"YulFunctionCall","src":"10607:18:28"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10554:43:28","nodeType":"YulIdentifier","src":"10554:43:28"},"nativeSrc":"10554:72:28","nodeType":"YulFunctionCall","src":"10554:72:28"},"nativeSrc":"10554:72:28","nodeType":"YulExpressionStatement","src":"10554:72:28"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"10680:6:28","nodeType":"YulIdentifier","src":"10680:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"10693:9:28","nodeType":"YulIdentifier","src":"10693:9:28"},{"kind":"number","nativeSrc":"10704:2:28","nodeType":"YulLiteral","src":"10704:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10689:3:28","nodeType":"YulIdentifier","src":"10689:3:28"},"nativeSrc":"10689:18:28","nodeType":"YulFunctionCall","src":"10689:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10636:43:28","nodeType":"YulIdentifier","src":"10636:43:28"},"nativeSrc":"10636:72:28","nodeType":"YulFunctionCall","src":"10636:72:28"},"nativeSrc":"10636:72:28","nodeType":"YulExpressionStatement","src":"10636:72:28"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"10762:6:28","nodeType":"YulIdentifier","src":"10762:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"10775:9:28","nodeType":"YulIdentifier","src":"10775:9:28"},{"kind":"number","nativeSrc":"10786:3:28","nodeType":"YulLiteral","src":"10786:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10771:3:28","nodeType":"YulIdentifier","src":"10771:3:28"},"nativeSrc":"10771:19:28","nodeType":"YulFunctionCall","src":"10771:19:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10718:43:28","nodeType":"YulIdentifier","src":"10718:43:28"},"nativeSrc":"10718:73:28","nodeType":"YulFunctionCall","src":"10718:73:28"},"nativeSrc":"10718:73:28","nodeType":"YulExpressionStatement","src":"10718:73:28"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"10134:664:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10284:9:28","nodeType":"YulTypedName","src":"10284:9:28","type":""},{"name":"value4","nativeSrc":"10296:6:28","nodeType":"YulTypedName","src":"10296:6:28","type":""},{"name":"value3","nativeSrc":"10304:6:28","nodeType":"YulTypedName","src":"10304:6:28","type":""},{"name":"value2","nativeSrc":"10312:6:28","nodeType":"YulTypedName","src":"10312:6:28","type":""},{"name":"value1","nativeSrc":"10320:6:28","nodeType":"YulTypedName","src":"10320:6:28","type":""},{"name":"value0","nativeSrc":"10328:6:28","nodeType":"YulTypedName","src":"10328:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10339:4:28","nodeType":"YulTypedName","src":"10339:4:28","type":""}],"src":"10134:664:28"},{"body":{"nativeSrc":"10900:73:28","nodeType":"YulBlock","src":"10900:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10917:3:28","nodeType":"YulIdentifier","src":"10917:3:28"},{"name":"length","nativeSrc":"10922:6:28","nodeType":"YulIdentifier","src":"10922:6:28"}],"functionName":{"name":"mstore","nativeSrc":"10910:6:28","nodeType":"YulIdentifier","src":"10910:6:28"},"nativeSrc":"10910:19:28","nodeType":"YulFunctionCall","src":"10910:19:28"},"nativeSrc":"10910:19:28","nodeType":"YulExpressionStatement","src":"10910:19:28"},{"nativeSrc":"10938:29:28","nodeType":"YulAssignment","src":"10938:29:28","value":{"arguments":[{"name":"pos","nativeSrc":"10957:3:28","nodeType":"YulIdentifier","src":"10957:3:28"},{"kind":"number","nativeSrc":"10962:4:28","nodeType":"YulLiteral","src":"10962:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10953:3:28","nodeType":"YulIdentifier","src":"10953:3:28"},"nativeSrc":"10953:14:28","nodeType":"YulFunctionCall","src":"10953:14:28"},"variableNames":[{"name":"updated_pos","nativeSrc":"10938:11:28","nodeType":"YulIdentifier","src":"10938:11:28"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10804:169:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10872:3:28","nodeType":"YulTypedName","src":"10872:3:28","type":""},{"name":"length","nativeSrc":"10877:6:28","nodeType":"YulTypedName","src":"10877:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"10888:11:28","nodeType":"YulTypedName","src":"10888:11:28","type":""}],"src":"10804:169:28"},{"body":{"nativeSrc":"11041:184:28","nodeType":"YulBlock","src":"11041:184:28","statements":[{"nativeSrc":"11051:10:28","nodeType":"YulVariableDeclaration","src":"11051:10:28","value":{"kind":"number","nativeSrc":"11060:1:28","nodeType":"YulLiteral","src":"11060:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"11055:1:28","nodeType":"YulTypedName","src":"11055:1:28","type":""}]},{"body":{"nativeSrc":"11120:63:28","nodeType":"YulBlock","src":"11120:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"11145:3:28","nodeType":"YulIdentifier","src":"11145:3:28"},{"name":"i","nativeSrc":"11150:1:28","nodeType":"YulIdentifier","src":"11150:1:28"}],"functionName":{"name":"add","nativeSrc":"11141:3:28","nodeType":"YulIdentifier","src":"11141:3:28"},"nativeSrc":"11141:11:28","nodeType":"YulFunctionCall","src":"11141:11:28"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11164:3:28","nodeType":"YulIdentifier","src":"11164:3:28"},{"name":"i","nativeSrc":"11169:1:28","nodeType":"YulIdentifier","src":"11169:1:28"}],"functionName":{"name":"add","nativeSrc":"11160:3:28","nodeType":"YulIdentifier","src":"11160:3:28"},"nativeSrc":"11160:11:28","nodeType":"YulFunctionCall","src":"11160:11:28"}],"functionName":{"name":"mload","nativeSrc":"11154:5:28","nodeType":"YulIdentifier","src":"11154:5:28"},"nativeSrc":"11154:18:28","nodeType":"YulFunctionCall","src":"11154:18:28"}],"functionName":{"name":"mstore","nativeSrc":"11134:6:28","nodeType":"YulIdentifier","src":"11134:6:28"},"nativeSrc":"11134:39:28","nodeType":"YulFunctionCall","src":"11134:39:28"},"nativeSrc":"11134:39:28","nodeType":"YulExpressionStatement","src":"11134:39:28"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"11081:1:28","nodeType":"YulIdentifier","src":"11081:1:28"},{"name":"length","nativeSrc":"11084:6:28","nodeType":"YulIdentifier","src":"11084:6:28"}],"functionName":{"name":"lt","nativeSrc":"11078:2:28","nodeType":"YulIdentifier","src":"11078:2:28"},"nativeSrc":"11078:13:28","nodeType":"YulFunctionCall","src":"11078:13:28"},"nativeSrc":"11070:113:28","nodeType":"YulForLoop","post":{"nativeSrc":"11092:19:28","nodeType":"YulBlock","src":"11092:19:28","statements":[{"nativeSrc":"11094:15:28","nodeType":"YulAssignment","src":"11094:15:28","value":{"arguments":[{"name":"i","nativeSrc":"11103:1:28","nodeType":"YulIdentifier","src":"11103:1:28"},{"kind":"number","nativeSrc":"11106:2:28","nodeType":"YulLiteral","src":"11106:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11099:3:28","nodeType":"YulIdentifier","src":"11099:3:28"},"nativeSrc":"11099:10:28","nodeType":"YulFunctionCall","src":"11099:10:28"},"variableNames":[{"name":"i","nativeSrc":"11094:1:28","nodeType":"YulIdentifier","src":"11094:1:28"}]}]},"pre":{"nativeSrc":"11074:3:28","nodeType":"YulBlock","src":"11074:3:28","statements":[]},"src":"11070:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"11203:3:28","nodeType":"YulIdentifier","src":"11203:3:28"},{"name":"length","nativeSrc":"11208:6:28","nodeType":"YulIdentifier","src":"11208:6:28"}],"functionName":{"name":"add","nativeSrc":"11199:3:28","nodeType":"YulIdentifier","src":"11199:3:28"},"nativeSrc":"11199:16:28","nodeType":"YulFunctionCall","src":"11199:16:28"},{"kind":"number","nativeSrc":"11217:1:28","nodeType":"YulLiteral","src":"11217:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"11192:6:28","nodeType":"YulIdentifier","src":"11192:6:28"},"nativeSrc":"11192:27:28","nodeType":"YulFunctionCall","src":"11192:27:28"},"nativeSrc":"11192:27:28","nodeType":"YulExpressionStatement","src":"11192:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10979:246:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"11023:3:28","nodeType":"YulTypedName","src":"11023:3:28","type":""},{"name":"dst","nativeSrc":"11028:3:28","nodeType":"YulTypedName","src":"11028:3:28","type":""},{"name":"length","nativeSrc":"11033:6:28","nodeType":"YulTypedName","src":"11033:6:28","type":""}],"src":"10979:246:28"},{"body":{"nativeSrc":"11279:54:28","nodeType":"YulBlock","src":"11279:54:28","statements":[{"nativeSrc":"11289:38:28","nodeType":"YulAssignment","src":"11289:38:28","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11307:5:28","nodeType":"YulIdentifier","src":"11307:5:28"},{"kind":"number","nativeSrc":"11314:2:28","nodeType":"YulLiteral","src":"11314:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"11303:3:28","nodeType":"YulIdentifier","src":"11303:3:28"},"nativeSrc":"11303:14:28","nodeType":"YulFunctionCall","src":"11303:14:28"},{"arguments":[{"kind":"number","nativeSrc":"11323:2:28","nodeType":"YulLiteral","src":"11323:2:28","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"11319:3:28","nodeType":"YulIdentifier","src":"11319:3:28"},"nativeSrc":"11319:7:28","nodeType":"YulFunctionCall","src":"11319:7:28"}],"functionName":{"name":"and","nativeSrc":"11299:3:28","nodeType":"YulIdentifier","src":"11299:3:28"},"nativeSrc":"11299:28:28","nodeType":"YulFunctionCall","src":"11299:28:28"},"variableNames":[{"name":"result","nativeSrc":"11289:6:28","nodeType":"YulIdentifier","src":"11289:6:28"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"11231:102:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11262:5:28","nodeType":"YulTypedName","src":"11262:5:28","type":""}],"returnVariables":[{"name":"result","nativeSrc":"11272:6:28","nodeType":"YulTypedName","src":"11272:6:28","type":""}],"src":"11231:102:28"},{"body":{"nativeSrc":"11431:285:28","nodeType":"YulBlock","src":"11431:285:28","statements":[{"nativeSrc":"11441:53:28","nodeType":"YulVariableDeclaration","src":"11441:53:28","value":{"arguments":[{"name":"value","nativeSrc":"11488:5:28","nodeType":"YulIdentifier","src":"11488:5:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"11455:32:28","nodeType":"YulIdentifier","src":"11455:32:28"},"nativeSrc":"11455:39:28","nodeType":"YulFunctionCall","src":"11455:39:28"},"variables":[{"name":"length","nativeSrc":"11445:6:28","nodeType":"YulTypedName","src":"11445:6:28","type":""}]},{"nativeSrc":"11503:78:28","nodeType":"YulAssignment","src":"11503:78:28","value":{"arguments":[{"name":"pos","nativeSrc":"11569:3:28","nodeType":"YulIdentifier","src":"11569:3:28"},{"name":"length","nativeSrc":"11574:6:28","nodeType":"YulIdentifier","src":"11574:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11510:58:28","nodeType":"YulIdentifier","src":"11510:58:28"},"nativeSrc":"11510:71:28","nodeType":"YulFunctionCall","src":"11510:71:28"},"variableNames":[{"name":"pos","nativeSrc":"11503:3:28","nodeType":"YulIdentifier","src":"11503:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11629:5:28","nodeType":"YulIdentifier","src":"11629:5:28"},{"kind":"number","nativeSrc":"11636:4:28","nodeType":"YulLiteral","src":"11636:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11625:3:28","nodeType":"YulIdentifier","src":"11625:3:28"},"nativeSrc":"11625:16:28","nodeType":"YulFunctionCall","src":"11625:16:28"},{"name":"pos","nativeSrc":"11643:3:28","nodeType":"YulIdentifier","src":"11643:3:28"},{"name":"length","nativeSrc":"11648:6:28","nodeType":"YulIdentifier","src":"11648:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"11590:34:28","nodeType":"YulIdentifier","src":"11590:34:28"},"nativeSrc":"11590:65:28","nodeType":"YulFunctionCall","src":"11590:65:28"},"nativeSrc":"11590:65:28","nodeType":"YulExpressionStatement","src":"11590:65:28"},{"nativeSrc":"11664:46:28","nodeType":"YulAssignment","src":"11664:46:28","value":{"arguments":[{"name":"pos","nativeSrc":"11675:3:28","nodeType":"YulIdentifier","src":"11675:3:28"},{"arguments":[{"name":"length","nativeSrc":"11702:6:28","nodeType":"YulIdentifier","src":"11702:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"11680:21:28","nodeType":"YulIdentifier","src":"11680:21:28"},"nativeSrc":"11680:29:28","nodeType":"YulFunctionCall","src":"11680:29:28"}],"functionName":{"name":"add","nativeSrc":"11671:3:28","nodeType":"YulIdentifier","src":"11671:3:28"},"nativeSrc":"11671:39:28","nodeType":"YulFunctionCall","src":"11671:39:28"},"variableNames":[{"name":"end","nativeSrc":"11664:3:28","nodeType":"YulIdentifier","src":"11664:3:28"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11339:377:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11412:5:28","nodeType":"YulTypedName","src":"11412:5:28","type":""},{"name":"pos","nativeSrc":"11419:3:28","nodeType":"YulTypedName","src":"11419:3:28","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11427:3:28","nodeType":"YulTypedName","src":"11427:3:28","type":""}],"src":"11339:377:28"},{"body":{"nativeSrc":"11840:195:28","nodeType":"YulBlock","src":"11840:195:28","statements":[{"nativeSrc":"11850:26:28","nodeType":"YulAssignment","src":"11850:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"11862:9:28","nodeType":"YulIdentifier","src":"11862:9:28"},{"kind":"number","nativeSrc":"11873:2:28","nodeType":"YulLiteral","src":"11873:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11858:3:28","nodeType":"YulIdentifier","src":"11858:3:28"},"nativeSrc":"11858:18:28","nodeType":"YulFunctionCall","src":"11858:18:28"},"variableNames":[{"name":"tail","nativeSrc":"11850:4:28","nodeType":"YulIdentifier","src":"11850:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11897:9:28","nodeType":"YulIdentifier","src":"11897:9:28"},{"kind":"number","nativeSrc":"11908:1:28","nodeType":"YulLiteral","src":"11908:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11893:3:28","nodeType":"YulIdentifier","src":"11893:3:28"},"nativeSrc":"11893:17:28","nodeType":"YulFunctionCall","src":"11893:17:28"},{"arguments":[{"name":"tail","nativeSrc":"11916:4:28","nodeType":"YulIdentifier","src":"11916:4:28"},{"name":"headStart","nativeSrc":"11922:9:28","nodeType":"YulIdentifier","src":"11922:9:28"}],"functionName":{"name":"sub","nativeSrc":"11912:3:28","nodeType":"YulIdentifier","src":"11912:3:28"},"nativeSrc":"11912:20:28","nodeType":"YulFunctionCall","src":"11912:20:28"}],"functionName":{"name":"mstore","nativeSrc":"11886:6:28","nodeType":"YulIdentifier","src":"11886:6:28"},"nativeSrc":"11886:47:28","nodeType":"YulFunctionCall","src":"11886:47:28"},"nativeSrc":"11886:47:28","nodeType":"YulExpressionStatement","src":"11886:47:28"},{"nativeSrc":"11942:86:28","nodeType":"YulAssignment","src":"11942:86:28","value":{"arguments":[{"name":"value0","nativeSrc":"12014:6:28","nodeType":"YulIdentifier","src":"12014:6:28"},{"name":"tail","nativeSrc":"12023:4:28","nodeType":"YulIdentifier","src":"12023:4:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11950:63:28","nodeType":"YulIdentifier","src":"11950:63:28"},"nativeSrc":"11950:78:28","nodeType":"YulFunctionCall","src":"11950:78:28"},"variableNames":[{"name":"tail","nativeSrc":"11942:4:28","nodeType":"YulIdentifier","src":"11942:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11722:313:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11812:9:28","nodeType":"YulTypedName","src":"11812:9:28","type":""},{"name":"value0","nativeSrc":"11824:6:28","nodeType":"YulTypedName","src":"11824:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11835:4:28","nodeType":"YulTypedName","src":"11835:4:28","type":""}],"src":"11722:313:28"},{"body":{"nativeSrc":"12099:40:28","nodeType":"YulBlock","src":"12099:40:28","statements":[{"nativeSrc":"12110:22:28","nodeType":"YulAssignment","src":"12110:22:28","value":{"arguments":[{"name":"value","nativeSrc":"12126:5:28","nodeType":"YulIdentifier","src":"12126:5:28"}],"functionName":{"name":"mload","nativeSrc":"12120:5:28","nodeType":"YulIdentifier","src":"12120:5:28"},"nativeSrc":"12120:12:28","nodeType":"YulFunctionCall","src":"12120:12:28"},"variableNames":[{"name":"length","nativeSrc":"12110:6:28","nodeType":"YulIdentifier","src":"12110:6:28"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"12041:98:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12082:5:28","nodeType":"YulTypedName","src":"12082:5:28","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12092:6:28","nodeType":"YulTypedName","src":"12092:6:28","type":""}],"src":"12041:98:28"},{"body":{"nativeSrc":"12201:60:28","nodeType":"YulBlock","src":"12201:60:28","statements":[{"nativeSrc":"12211:11:28","nodeType":"YulAssignment","src":"12211:11:28","value":{"name":"ptr","nativeSrc":"12219:3:28","nodeType":"YulIdentifier","src":"12219:3:28"},"variableNames":[{"name":"data","nativeSrc":"12211:4:28","nodeType":"YulIdentifier","src":"12211:4:28"}]},{"nativeSrc":"12232:22:28","nodeType":"YulAssignment","src":"12232:22:28","value":{"arguments":[{"name":"ptr","nativeSrc":"12244:3:28","nodeType":"YulIdentifier","src":"12244:3:28"},{"kind":"number","nativeSrc":"12249:4:28","nodeType":"YulLiteral","src":"12249:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12240:3:28","nodeType":"YulIdentifier","src":"12240:3:28"},"nativeSrc":"12240:14:28","nodeType":"YulFunctionCall","src":"12240:14:28"},"variableNames":[{"name":"data","nativeSrc":"12232:4:28","nodeType":"YulIdentifier","src":"12232:4:28"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"12145:116:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12188:3:28","nodeType":"YulTypedName","src":"12188:3:28","type":""}],"returnVariables":[{"name":"data","nativeSrc":"12196:4:28","nodeType":"YulTypedName","src":"12196:4:28","type":""}],"src":"12145:116:28"},{"body":{"nativeSrc":"12322:99:28","nodeType":"YulBlock","src":"12322:99:28","statements":[{"nativeSrc":"12333:42:28","nodeType":"YulVariableDeclaration","src":"12333:42:28","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"12370:3:28","nodeType":"YulIdentifier","src":"12370:3:28"}],"functionName":{"name":"mload","nativeSrc":"12364:5:28","nodeType":"YulIdentifier","src":"12364:5:28"},"nativeSrc":"12364:10:28","nodeType":"YulFunctionCall","src":"12364:10:28"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"12346:17:28","nodeType":"YulIdentifier","src":"12346:17:28"},"nativeSrc":"12346:29:28","nodeType":"YulFunctionCall","src":"12346:29:28"},"variables":[{"name":"value","nativeSrc":"12337:5:28","nodeType":"YulTypedName","src":"12337:5:28","type":""}]},{"nativeSrc":"12385:29:28","nodeType":"YulAssignment","src":"12385:29:28","value":{"name":"value","nativeSrc":"12409:5:28","nodeType":"YulIdentifier","src":"12409:5:28"},"variableNames":[{"name":"returnValue","nativeSrc":"12385:11:28","nodeType":"YulIdentifier","src":"12385:11:28"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"12267:154:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12302:3:28","nodeType":"YulTypedName","src":"12302:3:28","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"12310:11:28","nodeType":"YulTypedName","src":"12310:11:28","type":""}],"src":"12267:154:28"},{"body":{"nativeSrc":"12517:504:28","nodeType":"YulBlock","src":"12517:504:28","statements":[{"nativeSrc":"12528:52:28","nodeType":"YulVariableDeclaration","src":"12528:52:28","value":{"arguments":[{"name":"array","nativeSrc":"12574:5:28","nodeType":"YulIdentifier","src":"12574:5:28"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"12542:31:28","nodeType":"YulIdentifier","src":"12542:31:28"},"nativeSrc":"12542:38:28","nodeType":"YulFunctionCall","src":"12542:38:28"},"variables":[{"name":"length","nativeSrc":"12532:6:28","nodeType":"YulTypedName","src":"12532:6:28","type":""}]},{"nativeSrc":"12589:21:28","nodeType":"YulVariableDeclaration","src":"12589:21:28","value":{"name":"array","nativeSrc":"12605:5:28","nodeType":"YulIdentifier","src":"12605:5:28"},"variables":[{"name":"dataArea","nativeSrc":"12593:8:28","nodeType":"YulTypedName","src":"12593:8:28","type":""}]},{"nativeSrc":"12620:52:28","nodeType":"YulAssignment","src":"12620:52:28","value":{"arguments":[{"name":"array","nativeSrc":"12666:5:28","nodeType":"YulIdentifier","src":"12666:5:28"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"12632:33:28","nodeType":"YulIdentifier","src":"12632:33:28"},"nativeSrc":"12632:40:28","nodeType":"YulFunctionCall","src":"12632:40:28"},"variableNames":[{"name":"dataArea","nativeSrc":"12620:8:28","nodeType":"YulIdentifier","src":"12620:8:28"}]},{"nativeSrc":"12682:44:28","nodeType":"YulAssignment","src":"12682:44:28","value":{"arguments":[{"name":"dataArea","nativeSrc":"12717:8:28","nodeType":"YulIdentifier","src":"12717:8:28"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"12691:25:28","nodeType":"YulIdentifier","src":"12691:25:28"},"nativeSrc":"12691:35:28","nodeType":"YulFunctionCall","src":"12691:35:28"},"variableNames":[{"name":"value","nativeSrc":"12682:5:28","nodeType":"YulIdentifier","src":"12682:5:28"}]},{"body":{"nativeSrc":"12754:260:28","nodeType":"YulBlock","src":"12754:260:28","statements":[{"nativeSrc":"12768:236:28","nodeType":"YulAssignment","src":"12768:236:28","value":{"arguments":[{"name":"value","nativeSrc":"12798:5:28","nodeType":"YulIdentifier","src":"12798:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12865:1:28","nodeType":"YulLiteral","src":"12865:1:28","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"12872:2:28","nodeType":"YulLiteral","src":"12872:2:28","type":"","value":"32"},{"name":"length","nativeSrc":"12876:6:28","nodeType":"YulIdentifier","src":"12876:6:28"}],"functionName":{"name":"sub","nativeSrc":"12868:3:28","nodeType":"YulIdentifier","src":"12868:3:28"},"nativeSrc":"12868:15:28","nodeType":"YulFunctionCall","src":"12868:15:28"}],"functionName":{"name":"mul","nativeSrc":"12861:3:28","nodeType":"YulIdentifier","src":"12861:3:28"},"nativeSrc":"12861:23:28","nodeType":"YulFunctionCall","src":"12861:23:28"},{"kind":"number","nativeSrc":"12906:66:28","nodeType":"YulLiteral","src":"12906:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"12821:18:28","nodeType":"YulIdentifier","src":"12821:18:28"},"nativeSrc":"12821:169:28","nodeType":"YulFunctionCall","src":"12821:169:28"}],"functionName":{"name":"and","nativeSrc":"12777:3:28","nodeType":"YulIdentifier","src":"12777:3:28"},"nativeSrc":"12777:227:28","nodeType":"YulFunctionCall","src":"12777:227:28"},"variableNames":[{"name":"value","nativeSrc":"12768:5:28","nodeType":"YulIdentifier","src":"12768:5:28"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"12742:6:28","nodeType":"YulIdentifier","src":"12742:6:28"},{"kind":"number","nativeSrc":"12750:2:28","nodeType":"YulLiteral","src":"12750:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12739:2:28","nodeType":"YulIdentifier","src":"12739:2:28"},"nativeSrc":"12739:14:28","nodeType":"YulFunctionCall","src":"12739:14:28"},"nativeSrc":"12736:278:28","nodeType":"YulIf","src":"12736:278:28"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"12427:594:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"12501:5:28","nodeType":"YulTypedName","src":"12501:5:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12511:5:28","nodeType":"YulTypedName","src":"12511:5:28","type":""}],"src":"12427:594:28"},{"body":{"nativeSrc":"13153:206:28","nodeType":"YulBlock","src":"13153:206:28","statements":[{"nativeSrc":"13163:26:28","nodeType":"YulAssignment","src":"13163:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"13175:9:28","nodeType":"YulIdentifier","src":"13175:9:28"},{"kind":"number","nativeSrc":"13186:2:28","nodeType":"YulLiteral","src":"13186:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13171:3:28","nodeType":"YulIdentifier","src":"13171:3:28"},"nativeSrc":"13171:18:28","nodeType":"YulFunctionCall","src":"13171:18:28"},"variableNames":[{"name":"tail","nativeSrc":"13163:4:28","nodeType":"YulIdentifier","src":"13163:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13243:6:28","nodeType":"YulIdentifier","src":"13243:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"13256:9:28","nodeType":"YulIdentifier","src":"13256:9:28"},{"kind":"number","nativeSrc":"13267:1:28","nodeType":"YulLiteral","src":"13267:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13252:3:28","nodeType":"YulIdentifier","src":"13252:3:28"},"nativeSrc":"13252:17:28","nodeType":"YulFunctionCall","src":"13252:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13199:43:28","nodeType":"YulIdentifier","src":"13199:43:28"},"nativeSrc":"13199:71:28","nodeType":"YulFunctionCall","src":"13199:71:28"},"nativeSrc":"13199:71:28","nodeType":"YulExpressionStatement","src":"13199:71:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13324:6:28","nodeType":"YulIdentifier","src":"13324:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"13337:9:28","nodeType":"YulIdentifier","src":"13337:9:28"},{"kind":"number","nativeSrc":"13348:2:28","nodeType":"YulLiteral","src":"13348:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13333:3:28","nodeType":"YulIdentifier","src":"13333:3:28"},"nativeSrc":"13333:18:28","nodeType":"YulFunctionCall","src":"13333:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13280:43:28","nodeType":"YulIdentifier","src":"13280:43:28"},"nativeSrc":"13280:72:28","nodeType":"YulFunctionCall","src":"13280:72:28"},"nativeSrc":"13280:72:28","nodeType":"YulExpressionStatement","src":"13280:72:28"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13027:332:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13117:9:28","nodeType":"YulTypedName","src":"13117:9:28","type":""},{"name":"value1","nativeSrc":"13129:6:28","nodeType":"YulTypedName","src":"13129:6:28","type":""},{"name":"value0","nativeSrc":"13137:6:28","nodeType":"YulTypedName","src":"13137:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13148:4:28","nodeType":"YulTypedName","src":"13148:4:28","type":""}],"src":"13027:332:28"},{"body":{"nativeSrc":"13409:147:28","nodeType":"YulBlock","src":"13409:147:28","statements":[{"nativeSrc":"13419:25:28","nodeType":"YulAssignment","src":"13419:25:28","value":{"arguments":[{"name":"x","nativeSrc":"13442:1:28","nodeType":"YulIdentifier","src":"13442:1:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13424:17:28","nodeType":"YulIdentifier","src":"13424:17:28"},"nativeSrc":"13424:20:28","nodeType":"YulFunctionCall","src":"13424:20:28"},"variableNames":[{"name":"x","nativeSrc":"13419:1:28","nodeType":"YulIdentifier","src":"13419:1:28"}]},{"nativeSrc":"13453:25:28","nodeType":"YulAssignment","src":"13453:25:28","value":{"arguments":[{"name":"y","nativeSrc":"13476:1:28","nodeType":"YulIdentifier","src":"13476:1:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13458:17:28","nodeType":"YulIdentifier","src":"13458:17:28"},"nativeSrc":"13458:20:28","nodeType":"YulFunctionCall","src":"13458:20:28"},"variableNames":[{"name":"y","nativeSrc":"13453:1:28","nodeType":"YulIdentifier","src":"13453:1:28"}]},{"nativeSrc":"13487:16:28","nodeType":"YulAssignment","src":"13487:16:28","value":{"arguments":[{"name":"x","nativeSrc":"13498:1:28","nodeType":"YulIdentifier","src":"13498:1:28"},{"name":"y","nativeSrc":"13501:1:28","nodeType":"YulIdentifier","src":"13501:1:28"}],"functionName":{"name":"add","nativeSrc":"13494:3:28","nodeType":"YulIdentifier","src":"13494:3:28"},"nativeSrc":"13494:9:28","nodeType":"YulFunctionCall","src":"13494:9:28"},"variableNames":[{"name":"sum","nativeSrc":"13487:3:28","nodeType":"YulIdentifier","src":"13487:3:28"}]},{"body":{"nativeSrc":"13527:22:28","nodeType":"YulBlock","src":"13527:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13529:16:28","nodeType":"YulIdentifier","src":"13529:16:28"},"nativeSrc":"13529:18:28","nodeType":"YulFunctionCall","src":"13529:18:28"},"nativeSrc":"13529:18:28","nodeType":"YulExpressionStatement","src":"13529:18:28"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"13519:1:28","nodeType":"YulIdentifier","src":"13519:1:28"},{"name":"sum","nativeSrc":"13522:3:28","nodeType":"YulIdentifier","src":"13522:3:28"}],"functionName":{"name":"gt","nativeSrc":"13516:2:28","nodeType":"YulIdentifier","src":"13516:2:28"},"nativeSrc":"13516:10:28","nodeType":"YulFunctionCall","src":"13516:10:28"},"nativeSrc":"13513:36:28","nodeType":"YulIf","src":"13513:36:28"}]},"name":"checked_add_t_uint256","nativeSrc":"13365:191:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13396:1:28","nodeType":"YulTypedName","src":"13396:1:28","type":""},{"name":"y","nativeSrc":"13399:1:28","nodeType":"YulTypedName","src":"13399:1:28","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"13405:3:28","nodeType":"YulTypedName","src":"13405:3:28","type":""}],"src":"13365:191:28"},{"body":{"nativeSrc":"13716:288:28","nodeType":"YulBlock","src":"13716:288:28","statements":[{"nativeSrc":"13726:26:28","nodeType":"YulAssignment","src":"13726:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"13738:9:28","nodeType":"YulIdentifier","src":"13738:9:28"},{"kind":"number","nativeSrc":"13749:2:28","nodeType":"YulLiteral","src":"13749:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13734:3:28","nodeType":"YulIdentifier","src":"13734:3:28"},"nativeSrc":"13734:18:28","nodeType":"YulFunctionCall","src":"13734:18:28"},"variableNames":[{"name":"tail","nativeSrc":"13726:4:28","nodeType":"YulIdentifier","src":"13726:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13806:6:28","nodeType":"YulIdentifier","src":"13806:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"13819:9:28","nodeType":"YulIdentifier","src":"13819:9:28"},{"kind":"number","nativeSrc":"13830:1:28","nodeType":"YulLiteral","src":"13830:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13815:3:28","nodeType":"YulIdentifier","src":"13815:3:28"},"nativeSrc":"13815:17:28","nodeType":"YulFunctionCall","src":"13815:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13762:43:28","nodeType":"YulIdentifier","src":"13762:43:28"},"nativeSrc":"13762:71:28","nodeType":"YulFunctionCall","src":"13762:71:28"},"nativeSrc":"13762:71:28","nodeType":"YulExpressionStatement","src":"13762:71:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13887:6:28","nodeType":"YulIdentifier","src":"13887:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"13900:9:28","nodeType":"YulIdentifier","src":"13900:9:28"},{"kind":"number","nativeSrc":"13911:2:28","nodeType":"YulLiteral","src":"13911:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13896:3:28","nodeType":"YulIdentifier","src":"13896:3:28"},"nativeSrc":"13896:18:28","nodeType":"YulFunctionCall","src":"13896:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13843:43:28","nodeType":"YulIdentifier","src":"13843:43:28"},"nativeSrc":"13843:72:28","nodeType":"YulFunctionCall","src":"13843:72:28"},"nativeSrc":"13843:72:28","nodeType":"YulExpressionStatement","src":"13843:72:28"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13969:6:28","nodeType":"YulIdentifier","src":"13969:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"13982:9:28","nodeType":"YulIdentifier","src":"13982:9:28"},{"kind":"number","nativeSrc":"13993:2:28","nodeType":"YulLiteral","src":"13993:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13978:3:28","nodeType":"YulIdentifier","src":"13978:3:28"},"nativeSrc":"13978:18:28","nodeType":"YulFunctionCall","src":"13978:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13925:43:28","nodeType":"YulIdentifier","src":"13925:43:28"},"nativeSrc":"13925:72:28","nodeType":"YulFunctionCall","src":"13925:72:28"},"nativeSrc":"13925:72:28","nodeType":"YulExpressionStatement","src":"13925:72:28"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13562:442:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13672:9:28","nodeType":"YulTypedName","src":"13672:9:28","type":""},{"name":"value2","nativeSrc":"13684:6:28","nodeType":"YulTypedName","src":"13684:6:28","type":""},{"name":"value1","nativeSrc":"13692:6:28","nodeType":"YulTypedName","src":"13692:6:28","type":""},{"name":"value0","nativeSrc":"13700:6:28","nodeType":"YulTypedName","src":"13700:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13711:4:28","nodeType":"YulTypedName","src":"13711:4:28","type":""}],"src":"13562:442:28"},{"body":{"nativeSrc":"14108:124:28","nodeType":"YulBlock","src":"14108:124:28","statements":[{"nativeSrc":"14118:26:28","nodeType":"YulAssignment","src":"14118:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"14130:9:28","nodeType":"YulIdentifier","src":"14130:9:28"},{"kind":"number","nativeSrc":"14141:2:28","nodeType":"YulLiteral","src":"14141:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14126:3:28","nodeType":"YulIdentifier","src":"14126:3:28"},"nativeSrc":"14126:18:28","nodeType":"YulFunctionCall","src":"14126:18:28"},"variableNames":[{"name":"tail","nativeSrc":"14118:4:28","nodeType":"YulIdentifier","src":"14118:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14198:6:28","nodeType":"YulIdentifier","src":"14198:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"14211:9:28","nodeType":"YulIdentifier","src":"14211:9:28"},{"kind":"number","nativeSrc":"14222:1:28","nodeType":"YulLiteral","src":"14222:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14207:3:28","nodeType":"YulIdentifier","src":"14207:3:28"},"nativeSrc":"14207:17:28","nodeType":"YulFunctionCall","src":"14207:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14154:43:28","nodeType":"YulIdentifier","src":"14154:43:28"},"nativeSrc":"14154:71:28","nodeType":"YulFunctionCall","src":"14154:71:28"},"nativeSrc":"14154:71:28","nodeType":"YulExpressionStatement","src":"14154:71:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"14010:222:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14080:9:28","nodeType":"YulTypedName","src":"14080:9:28","type":""},{"name":"value0","nativeSrc":"14092:6:28","nodeType":"YulTypedName","src":"14092:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14103:4:28","nodeType":"YulTypedName","src":"14103:4:28","type":""}],"src":"14010:222:28"},{"body":{"nativeSrc":"14283:93:28","nodeType":"YulBlock","src":"14283:93:28","statements":[{"nativeSrc":"14293:77:28","nodeType":"YulAssignment","src":"14293:77:28","value":{"arguments":[{"name":"value","nativeSrc":"14308:5:28","nodeType":"YulIdentifier","src":"14308:5:28"},{"kind":"number","nativeSrc":"14315:54:28","nodeType":"YulLiteral","src":"14315:54:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"14304:3:28","nodeType":"YulIdentifier","src":"14304:3:28"},"nativeSrc":"14304:66:28","nodeType":"YulFunctionCall","src":"14304:66:28"},"variableNames":[{"name":"cleaned","nativeSrc":"14293:7:28","nodeType":"YulIdentifier","src":"14293:7:28"}]}]},"name":"cleanup_t_uint208","nativeSrc":"14238:138:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14265:5:28","nodeType":"YulTypedName","src":"14265:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14275:7:28","nodeType":"YulTypedName","src":"14275:7:28","type":""}],"src":"14238:138:28"},{"body":{"nativeSrc":"14426:200:28","nodeType":"YulBlock","src":"14426:200:28","statements":[{"nativeSrc":"14436:25:28","nodeType":"YulAssignment","src":"14436:25:28","value":{"arguments":[{"name":"x","nativeSrc":"14459:1:28","nodeType":"YulIdentifier","src":"14459:1:28"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"14441:17:28","nodeType":"YulIdentifier","src":"14441:17:28"},"nativeSrc":"14441:20:28","nodeType":"YulFunctionCall","src":"14441:20:28"},"variableNames":[{"name":"x","nativeSrc":"14436:1:28","nodeType":"YulIdentifier","src":"14436:1:28"}]},{"nativeSrc":"14470:25:28","nodeType":"YulAssignment","src":"14470:25:28","value":{"arguments":[{"name":"y","nativeSrc":"14493:1:28","nodeType":"YulIdentifier","src":"14493:1:28"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"14475:17:28","nodeType":"YulIdentifier","src":"14475:17:28"},"nativeSrc":"14475:20:28","nodeType":"YulFunctionCall","src":"14475:20:28"},"variableNames":[{"name":"y","nativeSrc":"14470:1:28","nodeType":"YulIdentifier","src":"14470:1:28"}]},{"nativeSrc":"14504:16:28","nodeType":"YulAssignment","src":"14504:16:28","value":{"arguments":[{"name":"x","nativeSrc":"14515:1:28","nodeType":"YulIdentifier","src":"14515:1:28"},{"name":"y","nativeSrc":"14518:1:28","nodeType":"YulIdentifier","src":"14518:1:28"}],"functionName":{"name":"add","nativeSrc":"14511:3:28","nodeType":"YulIdentifier","src":"14511:3:28"},"nativeSrc":"14511:9:28","nodeType":"YulFunctionCall","src":"14511:9:28"},"variableNames":[{"name":"sum","nativeSrc":"14504:3:28","nodeType":"YulIdentifier","src":"14504:3:28"}]},{"body":{"nativeSrc":"14597:22:28","nodeType":"YulBlock","src":"14597:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14599:16:28","nodeType":"YulIdentifier","src":"14599:16:28"},"nativeSrc":"14599:18:28","nodeType":"YulFunctionCall","src":"14599:18:28"},"nativeSrc":"14599:18:28","nodeType":"YulExpressionStatement","src":"14599:18:28"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"14536:3:28","nodeType":"YulIdentifier","src":"14536:3:28"},{"kind":"number","nativeSrc":"14541:54:28","nodeType":"YulLiteral","src":"14541:54:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14533:2:28","nodeType":"YulIdentifier","src":"14533:2:28"},"nativeSrc":"14533:63:28","nodeType":"YulFunctionCall","src":"14533:63:28"},"nativeSrc":"14530:89:28","nodeType":"YulIf","src":"14530:89:28"}]},"name":"checked_add_t_uint208","nativeSrc":"14382:244:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"14413:1:28","nodeType":"YulTypedName","src":"14413:1:28","type":""},{"name":"y","nativeSrc":"14416:1:28","nodeType":"YulTypedName","src":"14416:1:28","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"14422:3:28","nodeType":"YulTypedName","src":"14422:3:28","type":""}],"src":"14382:244:28"},{"body":{"nativeSrc":"14687:32:28","nodeType":"YulBlock","src":"14687:32:28","statements":[{"nativeSrc":"14697:16:28","nodeType":"YulAssignment","src":"14697:16:28","value":{"name":"value","nativeSrc":"14708:5:28","nodeType":"YulIdentifier","src":"14708:5:28"},"variableNames":[{"name":"cleaned","nativeSrc":"14697:7:28","nodeType":"YulIdentifier","src":"14697:7:28"}]}]},"name":"cleanup_t_rational_208_by_1","nativeSrc":"14632:87:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14669:5:28","nodeType":"YulTypedName","src":"14669:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14679:7:28","nodeType":"YulTypedName","src":"14679:7:28","type":""}],"src":"14632:87:28"},{"body":{"nativeSrc":"14793:90:28","nodeType":"YulBlock","src":"14793:90:28","statements":[{"nativeSrc":"14803:74:28","nodeType":"YulAssignment","src":"14803:74:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14869:5:28","nodeType":"YulIdentifier","src":"14869:5:28"}],"functionName":{"name":"cleanup_t_rational_208_by_1","nativeSrc":"14841:27:28","nodeType":"YulIdentifier","src":"14841:27:28"},"nativeSrc":"14841:34:28","nodeType":"YulFunctionCall","src":"14841:34:28"}],"functionName":{"name":"identity","nativeSrc":"14832:8:28","nodeType":"YulIdentifier","src":"14832:8:28"},"nativeSrc":"14832:44:28","nodeType":"YulFunctionCall","src":"14832:44:28"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"14816:15:28","nodeType":"YulIdentifier","src":"14816:15:28"},"nativeSrc":"14816:61:28","nodeType":"YulFunctionCall","src":"14816:61:28"},"variableNames":[{"name":"converted","nativeSrc":"14803:9:28","nodeType":"YulIdentifier","src":"14803:9:28"}]}]},"name":"convert_t_rational_208_by_1_to_t_uint8","nativeSrc":"14725:158:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14773:5:28","nodeType":"YulTypedName","src":"14773:5:28","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"14783:9:28","nodeType":"YulTypedName","src":"14783:9:28","type":""}],"src":"14725:158:28"},{"body":{"nativeSrc":"14962:74:28","nodeType":"YulBlock","src":"14962:74:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14979:3:28","nodeType":"YulIdentifier","src":"14979:3:28"},{"arguments":[{"name":"value","nativeSrc":"15023:5:28","nodeType":"YulIdentifier","src":"15023:5:28"}],"functionName":{"name":"convert_t_rational_208_by_1_to_t_uint8","nativeSrc":"14984:38:28","nodeType":"YulIdentifier","src":"14984:38:28"},"nativeSrc":"14984:45:28","nodeType":"YulFunctionCall","src":"14984:45:28"}],"functionName":{"name":"mstore","nativeSrc":"14972:6:28","nodeType":"YulIdentifier","src":"14972:6:28"},"nativeSrc":"14972:58:28","nodeType":"YulFunctionCall","src":"14972:58:28"},"nativeSrc":"14972:58:28","nodeType":"YulExpressionStatement","src":"14972:58:28"}]},"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nativeSrc":"14889:147:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14950:5:28","nodeType":"YulTypedName","src":"14950:5:28","type":""},{"name":"pos","nativeSrc":"14957:3:28","nodeType":"YulTypedName","src":"14957:3:28","type":""}],"src":"14889:147:28"},{"body":{"nativeSrc":"15176:214:28","nodeType":"YulBlock","src":"15176:214:28","statements":[{"nativeSrc":"15186:26:28","nodeType":"YulAssignment","src":"15186:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"15198:9:28","nodeType":"YulIdentifier","src":"15198:9:28"},{"kind":"number","nativeSrc":"15209:2:28","nodeType":"YulLiteral","src":"15209:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15194:3:28","nodeType":"YulIdentifier","src":"15194:3:28"},"nativeSrc":"15194:18:28","nodeType":"YulFunctionCall","src":"15194:18:28"},"variableNames":[{"name":"tail","nativeSrc":"15186:4:28","nodeType":"YulIdentifier","src":"15186:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15274:6:28","nodeType":"YulIdentifier","src":"15274:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"15287:9:28","nodeType":"YulIdentifier","src":"15287:9:28"},{"kind":"number","nativeSrc":"15298:1:28","nodeType":"YulLiteral","src":"15298:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15283:3:28","nodeType":"YulIdentifier","src":"15283:3:28"},"nativeSrc":"15283:17:28","nodeType":"YulFunctionCall","src":"15283:17:28"}],"functionName":{"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nativeSrc":"15222:51:28","nodeType":"YulIdentifier","src":"15222:51:28"},"nativeSrc":"15222:79:28","nodeType":"YulFunctionCall","src":"15222:79:28"},"nativeSrc":"15222:79:28","nodeType":"YulExpressionStatement","src":"15222:79:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15355:6:28","nodeType":"YulIdentifier","src":"15355:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"15368:9:28","nodeType":"YulIdentifier","src":"15368:9:28"},{"kind":"number","nativeSrc":"15379:2:28","nodeType":"YulLiteral","src":"15379:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15364:3:28","nodeType":"YulIdentifier","src":"15364:3:28"},"nativeSrc":"15364:18:28","nodeType":"YulFunctionCall","src":"15364:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15311:43:28","nodeType":"YulIdentifier","src":"15311:43:28"},"nativeSrc":"15311:72:28","nodeType":"YulFunctionCall","src":"15311:72:28"},"nativeSrc":"15311:72:28","nodeType":"YulExpressionStatement","src":"15311:72:28"}]},"name":"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"15042:348:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15140:9:28","nodeType":"YulTypedName","src":"15140:9:28","type":""},{"name":"value1","nativeSrc":"15152:6:28","nodeType":"YulTypedName","src":"15152:6:28","type":""},{"name":"value0","nativeSrc":"15160:6:28","nodeType":"YulTypedName","src":"15160:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15171:4:28","nodeType":"YulTypedName","src":"15171:4:28","type":""}],"src":"15042:348:28"},{"body":{"nativeSrc":"15441:202:28","nodeType":"YulBlock","src":"15441:202:28","statements":[{"nativeSrc":"15451:25:28","nodeType":"YulAssignment","src":"15451:25:28","value":{"arguments":[{"name":"x","nativeSrc":"15474:1:28","nodeType":"YulIdentifier","src":"15474:1:28"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"15456:17:28","nodeType":"YulIdentifier","src":"15456:17:28"},"nativeSrc":"15456:20:28","nodeType":"YulFunctionCall","src":"15456:20:28"},"variableNames":[{"name":"x","nativeSrc":"15451:1:28","nodeType":"YulIdentifier","src":"15451:1:28"}]},{"nativeSrc":"15485:25:28","nodeType":"YulAssignment","src":"15485:25:28","value":{"arguments":[{"name":"y","nativeSrc":"15508:1:28","nodeType":"YulIdentifier","src":"15508:1:28"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"15490:17:28","nodeType":"YulIdentifier","src":"15490:17:28"},"nativeSrc":"15490:20:28","nodeType":"YulFunctionCall","src":"15490:20:28"},"variableNames":[{"name":"y","nativeSrc":"15485:1:28","nodeType":"YulIdentifier","src":"15485:1:28"}]},{"nativeSrc":"15519:17:28","nodeType":"YulAssignment","src":"15519:17:28","value":{"arguments":[{"name":"x","nativeSrc":"15531:1:28","nodeType":"YulIdentifier","src":"15531:1:28"},{"name":"y","nativeSrc":"15534:1:28","nodeType":"YulIdentifier","src":"15534:1:28"}],"functionName":{"name":"sub","nativeSrc":"15527:3:28","nodeType":"YulIdentifier","src":"15527:3:28"},"nativeSrc":"15527:9:28","nodeType":"YulFunctionCall","src":"15527:9:28"},"variableNames":[{"name":"diff","nativeSrc":"15519:4:28","nodeType":"YulIdentifier","src":"15519:4:28"}]},{"body":{"nativeSrc":"15614:22:28","nodeType":"YulBlock","src":"15614:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15616:16:28","nodeType":"YulIdentifier","src":"15616:16:28"},"nativeSrc":"15616:18:28","nodeType":"YulFunctionCall","src":"15616:18:28"},"nativeSrc":"15616:18:28","nodeType":"YulExpressionStatement","src":"15616:18:28"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"15552:4:28","nodeType":"YulIdentifier","src":"15552:4:28"},{"kind":"number","nativeSrc":"15558:54:28","nodeType":"YulLiteral","src":"15558:54:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15549:2:28","nodeType":"YulIdentifier","src":"15549:2:28"},"nativeSrc":"15549:64:28","nodeType":"YulFunctionCall","src":"15549:64:28"},"nativeSrc":"15546:90:28","nodeType":"YulIf","src":"15546:90:28"}]},"name":"checked_sub_t_uint208","nativeSrc":"15396:247:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15427:1:28","nodeType":"YulTypedName","src":"15427:1:28","type":""},{"name":"y","nativeSrc":"15430:1:28","nodeType":"YulTypedName","src":"15430:1:28","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"15436:4:28","nodeType":"YulTypedName","src":"15436:4:28","type":""}],"src":"15396:247:28"},{"body":{"nativeSrc":"15694:149:28","nodeType":"YulBlock","src":"15694:149:28","statements":[{"nativeSrc":"15704:25:28","nodeType":"YulAssignment","src":"15704:25:28","value":{"arguments":[{"name":"x","nativeSrc":"15727:1:28","nodeType":"YulIdentifier","src":"15727:1:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15709:17:28","nodeType":"YulIdentifier","src":"15709:17:28"},"nativeSrc":"15709:20:28","nodeType":"YulFunctionCall","src":"15709:20:28"},"variableNames":[{"name":"x","nativeSrc":"15704:1:28","nodeType":"YulIdentifier","src":"15704:1:28"}]},{"nativeSrc":"15738:25:28","nodeType":"YulAssignment","src":"15738:25:28","value":{"arguments":[{"name":"y","nativeSrc":"15761:1:28","nodeType":"YulIdentifier","src":"15761:1:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15743:17:28","nodeType":"YulIdentifier","src":"15743:17:28"},"nativeSrc":"15743:20:28","nodeType":"YulFunctionCall","src":"15743:20:28"},"variableNames":[{"name":"y","nativeSrc":"15738:1:28","nodeType":"YulIdentifier","src":"15738:1:28"}]},{"nativeSrc":"15772:17:28","nodeType":"YulAssignment","src":"15772:17:28","value":{"arguments":[{"name":"x","nativeSrc":"15784:1:28","nodeType":"YulIdentifier","src":"15784:1:28"},{"name":"y","nativeSrc":"15787:1:28","nodeType":"YulIdentifier","src":"15787:1:28"}],"functionName":{"name":"sub","nativeSrc":"15780:3:28","nodeType":"YulIdentifier","src":"15780:3:28"},"nativeSrc":"15780:9:28","nodeType":"YulFunctionCall","src":"15780:9:28"},"variableNames":[{"name":"diff","nativeSrc":"15772:4:28","nodeType":"YulIdentifier","src":"15772:4:28"}]},{"body":{"nativeSrc":"15814:22:28","nodeType":"YulBlock","src":"15814:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15816:16:28","nodeType":"YulIdentifier","src":"15816:16:28"},"nativeSrc":"15816:18:28","nodeType":"YulFunctionCall","src":"15816:18:28"},"nativeSrc":"15816:18:28","nodeType":"YulExpressionStatement","src":"15816:18:28"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"15805:4:28","nodeType":"YulIdentifier","src":"15805:4:28"},{"name":"x","nativeSrc":"15811:1:28","nodeType":"YulIdentifier","src":"15811:1:28"}],"functionName":{"name":"gt","nativeSrc":"15802:2:28","nodeType":"YulIdentifier","src":"15802:2:28"},"nativeSrc":"15802:11:28","nodeType":"YulFunctionCall","src":"15802:11:28"},"nativeSrc":"15799:37:28","nodeType":"YulIf","src":"15799:37:28"}]},"name":"checked_sub_t_uint256","nativeSrc":"15649:194:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15680:1:28","nodeType":"YulTypedName","src":"15680:1:28","type":""},{"name":"y","nativeSrc":"15683:1:28","nodeType":"YulTypedName","src":"15683:1:28","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"15689:4:28","nodeType":"YulTypedName","src":"15689:4:28","type":""}],"src":"15649:194:28"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint208(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function checked_add_t_uint208(x, y) -> sum {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_208_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_208_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_208_by_1(value)))\n    }\n\n    function abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_208_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint208(x, y) -> diff {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x592C CODESIZE SUB DUP1 PUSH3 0x592C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x1256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476F766572656E6365546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476F766572656E6365546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4754000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x123 SWAP2 SWAP1 PUSH3 0x1502 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x135 SWAP2 SWAP1 PUSH3 0x1502 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1AD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1A4 SWAP2 SWAP1 PUSH3 0x15FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1BE DUP2 PUSH3 0x2B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1D5 PUSH1 0x6 DUP4 PUSH3 0x37C PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x1F3 PUSH1 0x7 DUP3 PUSH3 0x37C PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x232 PUSH3 0x3D4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x2AF CALLER PUSH3 0x285 PUSH3 0x431 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x293 SWAP2 SWAP1 PUSH3 0x17A7 JUMP JUMPDEST PUSH3 0x989680 PUSH3 0x2A3 SWAP2 SWAP1 PUSH3 0x17F8 JUMP JUMPDEST PUSH3 0x43A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1C5E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x39A DUP4 PUSH3 0x4C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x3CE JUMP JUMPDEST DUP3 PUSH3 0x3B4 DUP4 PUSH3 0x534 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x3C5 SWAP2 SWAP1 PUSH3 0x1502 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x416 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x186F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4AF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4A6 SWAP2 SWAP1 PUSH3 0x15FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4C3 PUSH1 0x0 DUP4 DUP4 PUSH3 0x53E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x517 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x50E SWAP2 SWAP1 PUSH3 0x195B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x525 SWAP1 PUSH3 0x19B1 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x551 DUP4 DUP4 DUP4 PUSH3 0x556 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x569 DUP4 DUP4 DUP4 PUSH3 0x62B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x613 JUMPI PUSH1 0x0 PUSH3 0x5B0 PUSH3 0x85B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x5C4 PUSH3 0x865 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x610 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x1CB15D2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x607 SWAP3 SWAP2 SWAP1 PUSH3 0x1A21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST PUSH3 0x626 DUP4 DUP4 DUP4 PUSH3 0x889 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x681 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x674 SWAP2 SWAP1 PUSH3 0x1A4E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x757 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x710 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x707 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x7A2 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x7EF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x84E SWAP2 SWAP1 PUSH3 0x1AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x8F0 JUMPI PUSH3 0x8ED PUSH1 0xB PUSH3 0x98F PUSH1 0x20 SHL PUSH3 0xF2C OR PUSH3 0x8E1 DUP5 PUSH3 0x9A7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA18 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x957 JUMPI PUSH3 0x954 PUSH1 0xB PUSH3 0xA68 PUSH1 0x20 SHL PUSH3 0xF42 OR PUSH3 0x948 DUP5 PUSH3 0x9A7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA18 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMPDEST PUSH3 0x98A PUSH3 0x96C DUP5 PUSH3 0xA80 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x97D DUP5 PUSH3 0xA80 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH3 0xAE9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x99F SWAP2 SWAP1 PUSH3 0x1B09 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0xA10 JUMPI PUSH1 0xD0 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA07 SWAP3 SWAP2 SWAP1 PUSH3 0x1BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xA5C PUSH3 0xA2F PUSH3 0xD9C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA4B PUSH3 0xA44 DUP9 PUSH3 0xDA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP7 DUP9 PUSH1 0x20 SHR JUMP JUMPDEST DUP8 PUSH3 0xE18 PUSH1 0x20 SHL SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0xA78 SWAP2 SWAP1 PUSH3 0x1BCE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0xB26 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH3 0xD97 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xC61 JUMPI PUSH1 0x0 DUP1 PUSH3 0xBD0 PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0xA68 PUSH1 0x20 SHL PUSH3 0xF42 OR PUSH3 0xBC4 DUP7 PUSH3 0x9A7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA18 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xC56 SWAP3 SWAP2 SWAP1 PUSH3 0x1A21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xD96 JUMPI PUSH1 0x0 DUP1 PUSH3 0xD05 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0x98F PUSH1 0x20 SHL PUSH3 0xF2C OR PUSH3 0xCF9 DUP7 PUSH3 0x9A7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA18 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xD8B SWAP3 SWAP2 SWAP1 PUSH3 0x1A21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH3 0xE0D JUMPI PUSH3 0xDDD DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH3 0xDD1 SWAP2 SWAP1 PUSH3 0x1C23 JUMP JUMPDEST PUSH3 0xE3D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xE10 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xE31 DUP6 PUSH1 0x0 ADD DUP6 DUP6 PUSH3 0xE52 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH3 0x10FC JUMPI PUSH1 0x0 PUSH3 0xE8A DUP8 PUSH1 0x1 DUP5 PUSH3 0xE7E SWAP2 SWAP1 PUSH3 0x1C23 JUMP JUMPDEST PUSH3 0xE3D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH3 0xF7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND SUB PUSH3 0x100A JUMPI DUP5 PUSH3 0xFB7 DUP9 PUSH1 0x1 DUP6 PUSH3 0xFAB SWAP2 SWAP1 PUSH3 0x1C23 JUMP JUMPDEST PUSH3 0xE3D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x10EA JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 SWAP4 POP SWAP4 POP POP POP PUSH3 0x11E4 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x121E DUP3 PUSH3 0x11F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1230 DUP2 PUSH3 0x1211 JUMP JUMPDEST DUP2 EQ PUSH3 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1250 DUP2 PUSH3 0x1225 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x126F JUMPI PUSH3 0x126E PUSH3 0x11EC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x127F DUP5 DUP3 DUP6 ADD PUSH3 0x123F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x130A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1320 JUMPI PUSH3 0x131F PUSH3 0x12C2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x138A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x134B JUMP JUMPDEST PUSH3 0x1396 DUP7 DUP4 PUSH3 0x134B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x13E3 PUSH3 0x13DD PUSH3 0x13D7 DUP5 PUSH3 0x13AE JUMP JUMPDEST PUSH3 0x13B8 JUMP JUMPDEST PUSH3 0x13AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x13FF DUP4 PUSH3 0x13C2 JUMP JUMPDEST PUSH3 0x1417 PUSH3 0x140E DUP3 PUSH3 0x13EA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x1358 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x142E PUSH3 0x141F JUMP JUMPDEST PUSH3 0x143B DUP2 DUP5 DUP5 PUSH3 0x13F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1463 JUMPI PUSH3 0x1457 PUSH1 0x0 DUP3 PUSH3 0x1424 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x1441 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x14B2 JUMPI PUSH3 0x147C DUP2 PUSH3 0x1326 JUMP JUMPDEST PUSH3 0x1487 DUP5 PUSH3 0x133B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x1497 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x14AF PUSH3 0x14A6 DUP6 PUSH3 0x133B JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x1440 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x14D7 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x14B7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x14F2 DUP4 DUP4 PUSH3 0x14C4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x150D DUP3 PUSH3 0x1288 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1529 JUMPI PUSH3 0x1528 PUSH3 0x1293 JUMP JUMPDEST JUMPDEST PUSH3 0x1535 DUP3 SLOAD PUSH3 0x12F1 JUMP JUMPDEST PUSH3 0x1542 DUP3 DUP3 DUP6 PUSH3 0x1467 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x157A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1565 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x1571 DUP6 DUP3 PUSH3 0x14E4 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x15E1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x158A DUP7 PUSH3 0x1326 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x15B4 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x158D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x15D4 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x15D0 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x14C4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x15F4 DUP2 PUSH3 0x1211 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1611 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x15E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x16A5 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x167D JUMPI PUSH3 0x167C PUSH3 0x1617 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x168D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x169D DUP6 PUSH3 0x1646 JUMP JUMPDEST SWAP5 POP PUSH3 0x165D JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x16C0 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x1793 JUMP JUMPDEST DUP2 PUSH3 0x16D0 JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0x1793 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x16E9 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x16F4 JUMPI PUSH3 0x172A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x1793 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x1709 JUMPI PUSH3 0x1708 PUSH3 0x1617 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x1723 JUMPI PUSH3 0x1722 PUSH3 0x1617 JUMP JUMPDEST JUMPDEST POP PUSH3 0x1793 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x1764 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x175E JUMPI PUSH3 0x175D PUSH3 0x1617 JUMP JUMPDEST JUMPDEST PUSH3 0x1793 JUMP JUMPDEST PUSH3 0x1773 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x1653 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x178D JUMPI PUSH3 0x178C PUSH3 0x1617 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x17B4 DUP3 PUSH3 0x13AE JUMP JUMPDEST SWAP2 POP PUSH3 0x17C1 DUP4 PUSH3 0x179A JUMP JUMPDEST SWAP3 POP PUSH3 0x17F0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x16AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1805 DUP3 PUSH3 0x13AE JUMP JUMPDEST SWAP2 POP PUSH3 0x1812 DUP4 PUSH3 0x13AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x1822 DUP2 PUSH3 0x13AE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x183C JUMPI PUSH3 0x183B PUSH3 0x1617 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1858 DUP2 PUSH3 0x1843 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x1869 DUP2 PUSH3 0x13AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x1886 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x184D JUMP JUMPDEST PUSH3 0x1895 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x184D JUMP JUMPDEST PUSH3 0x18A4 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x184D JUMP JUMPDEST PUSH3 0x18B3 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x185E JUMP JUMPDEST PUSH3 0x18C2 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x15E9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x18FD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x18E0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1927 DUP3 PUSH3 0x1288 JUMP JUMPDEST PUSH3 0x1933 DUP2 DUP6 PUSH3 0x18CC JUMP JUMPDEST SWAP4 POP PUSH3 0x1945 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x18DD JUMP JUMPDEST PUSH3 0x1950 DUP2 PUSH3 0x1909 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1977 DUP2 DUP5 PUSH3 0x191A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x19A8 DUP3 MLOAD PUSH3 0x1843 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x19BE DUP3 PUSH3 0x197F JUMP JUMPDEST DUP3 PUSH3 0x19CA DUP5 PUSH3 0x198A JUMP JUMPDEST SWAP1 POP PUSH3 0x19D7 DUP2 PUSH3 0x199A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x1A1A JUMPI PUSH3 0x1A15 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x134B JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1A38 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x185E JUMP JUMPDEST PUSH3 0x1A47 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x185E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A5B DUP3 PUSH3 0x13AE JUMP JUMPDEST SWAP2 POP PUSH3 0x1A68 DUP4 PUSH3 0x13AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x1A83 JUMPI PUSH3 0x1A82 PUSH3 0x1617 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1AA0 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x15E9 JUMP JUMPDEST PUSH3 0x1AAF PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x185E JUMP JUMPDEST PUSH3 0x1ABE PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x185E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1ADD PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x185E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B16 DUP3 PUSH3 0x1AE3 JUMP JUMPDEST SWAP2 POP PUSH3 0x1B23 DUP4 PUSH3 0x1AE3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1B58 JUMPI PUSH3 0x1B57 PUSH3 0x1617 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B89 PUSH3 0x1B83 PUSH3 0x1B7D DUP5 PUSH3 0x1B5E JUMP JUMPDEST PUSH3 0x13B8 JUMP JUMPDEST PUSH3 0x179A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1B9B DUP2 PUSH3 0x1B68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1BB8 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1B90 JUMP JUMPDEST PUSH3 0x1BC7 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x185E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BDB DUP3 PUSH3 0x1AE3 JUMP JUMPDEST SWAP2 POP PUSH3 0x1BE8 DUP4 PUSH3 0x1AE3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C1D JUMPI PUSH3 0x1C1C PUSH3 0x1617 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C30 DUP3 PUSH3 0x13AE JUMP JUMPDEST SWAP2 POP PUSH3 0x1C3D DUP4 PUSH3 0x13AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x1C58 JUMPI PUSH3 0x1C57 PUSH3 0x1617 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x3C73 PUSH3 0x1CB9 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1718 ADD MSTORE PUSH1 0x0 PUSH2 0x16DD ADD MSTORE PUSH1 0x0 PUSH2 0x1B39 ADD MSTORE PUSH1 0x0 PUSH2 0x1B18 ADD MSTORE PUSH1 0x0 PUSH2 0x10FE ADD MSTORE PUSH1 0x0 PUSH2 0x1154 ADD MSTORE PUSH1 0x0 PUSH2 0x117D ADD MSTORE PUSH2 0x3C73 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x55E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DA JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x542 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x4A6 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x404 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x587CDE1E GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3AE JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x314 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2AC JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x3033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x3033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x30E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x311B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x7D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x3136 JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31C PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x2F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x31D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E6 PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x402 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43C PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x460 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x3136 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AE PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x3392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CC PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x2F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x3033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x578 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x3492 JUMP JUMPDEST PUSH2 0xCBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x594 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58F SWAP2 SWAP1 PUSH2 0x3534 JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0xEA6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x605 SWAP1 PUSH2 0x369D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x631 SWAP1 PUSH2 0x369D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x653 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x661 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x693 PUSH2 0xF58 JUMP JUMPDEST SWAP1 POP PUSH2 0x6A0 DUP2 DUP6 DUP6 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C0 PUSH2 0xF58 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CD DUP6 DUP3 DUP6 PUSH2 0xF72 JUMP JUMPDEST PUSH2 0x6D8 DUP6 DUP6 DUP6 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F7 PUSH2 0x10FA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x707 PUSH2 0xACE JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0x757 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74E SWAP3 SWAP2 SWAP1 PUSH2 0x36CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B0 PUSH2 0x763 DUP5 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x120B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7DD PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x7E7 DUP3 DUP3 PUSH2 0x138C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7FC PUSH2 0x7F6 PUSH2 0xF58 JUMP JUMPDEST DUP3 PUSH2 0x140E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D74696D657374616D70000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AF PUSH2 0xF58 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BB DUP2 DUP4 PUSH2 0x1490 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CA DUP3 PUSH2 0x15A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x92B PUSH1 0x0 PUSH2 0x15FC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x93F DUP3 PUSH2 0x939 PUSH2 0xF58 JUMP JUMPDEST DUP4 PUSH2 0xF72 JUMP JUMPDEST PUSH2 0x949 DUP3 DUP3 PUSH2 0x140E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x958 DUP3 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x973 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x97B PUSH2 0x170F JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99C JUMPI PUSH2 0x99B PUSH2 0x36F7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9CA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA3E PUSH2 0xACE JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0xA8E JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA85 SWAP3 SWAP2 SWAP1 PUSH2 0x36CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAAA PUSH2 0xA9A DUP5 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0xB PUSH2 0x120B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAE5 SWAP1 PUSH2 0x369D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB11 SWAP1 PUSH2 0x369D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB5E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB33 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB5E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB41 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x174A JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBDF PUSH2 0xF58 JUMP JUMPDEST SWAP1 POP PUSH2 0xBEC DUP2 DUP6 DUP6 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xC3C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9E PUSH2 0xC96 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC7B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x17B2 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x17CC JUMP JUMPDEST SWAP1 POP PUSH2 0xCAA DUP2 DUP8 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0xCB4 DUP2 DUP9 PUSH2 0x1490 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xD02 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xD31 DUP13 PUSH2 0x1854 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD47 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x376B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xD6A DUP3 PUSH2 0x17B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD7A DUP3 DUP8 DUP8 DUP8 PUSH2 0x17CC JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDEE JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE5 SWAP3 SWAP2 SWAP1 PUSH2 0x37CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDF9 DUP11 DUP11 DUP11 PUSH2 0xF60 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE94 PUSH2 0x2E4F JUMP JUMPDEST PUSH2 0xE9E DUP4 DUP4 PUSH2 0x18AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEAE PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF20 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF17 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF29 DUP2 PUSH2 0x15FC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x3824 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x3872 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF6D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x190C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7E DUP5 DUP5 PUSH2 0xE05 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1000 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFF0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFF DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x190C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1078 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106F SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10EA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F5 DUP4 DUP4 DUP4 PUSH2 0x1AE3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1176 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x11A3 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x11AB PUSH2 0x1AF3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x30 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FA SWAP3 SWAP2 SWAP1 PUSH2 0x393C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1293 JUMPI PUSH1 0x0 PUSH2 0x1232 DUP5 PUSH2 0x1B89 JUMP JUMPDEST DUP5 PUSH2 0x123D SWAP2 SWAP1 PUSH2 0x3965 JUMP JUMPDEST SWAP1 POP PUSH2 0x124C DUP8 PUSH1 0x0 ADD DUP3 PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP7 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1281 JUMPI DUP1 SWAP2 POP PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x3999 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x12A4 DUP8 PUSH1 0x0 ADD DUP8 DUP6 DUP6 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x12F6 JUMPI PUSH2 0x12C7 DUP8 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x12C2 SWAP2 SWAP1 PUSH2 0x3965 JUMP JUMPDEST PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x130D PUSH2 0xF58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x132B PUSH2 0xA09 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x138A JUMPI PUSH2 0x134E PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1381 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13FE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F5 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x140A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1AE3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1480 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1477 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148C DUP3 PUSH1 0x0 DUP4 PUSH2 0x1AE3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149B DUP4 PUSH2 0x83C JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x159F DUP2 DUP4 PUSH2 0x159A DUP7 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x1D22 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F5 PUSH2 0x15F0 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1F9B JUMP JUMPDEST PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CD DUP3 PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x170A PUSH1 0x6 PUSH32 0x0 PUSH2 0x204D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1745 PUSH1 0x7 PUSH32 0x0 PUSH2 0x204D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x17A7 JUMPI PUSH2 0x1778 DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1773 SWAP2 SWAP1 PUSH2 0x3965 JUMP JUMPDEST PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C5 PUSH2 0x17BF PUSH2 0x10FA JUMP JUMPDEST DUP4 PUSH2 0x20FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x17DE DUP9 DUP9 DUP9 DUP9 PUSH2 0x213E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x17EE DUP3 DUP3 PUSH2 0x2232 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1807 DUP4 PUSH2 0x1854 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x184F JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1846 SWAP3 SWAP2 SWAP1 PUSH2 0x39CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B3 PUSH2 0x2E4F JUMP JUMPDEST PUSH2 0x1904 DUP3 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2396 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x197E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1975 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19F0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E7 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1ADD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1AD4 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1AEE DUP4 DUP4 DUP4 PUSH2 0x246B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B6E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x1B9B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1BA8 DUP5 PUSH2 0x251C JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BC2 JUMPI PUSH2 0x1BC1 PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BDB JUMPI PUSH2 0x1BDA PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BF4 JUMPI PUSH2 0x1BF3 PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C0D JUMPI PUSH2 0x1C0C PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C26 JUMPI PUSH2 0x1C25 PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C3F JUMPI PUSH2 0x1C3E PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1C79 DUP2 DUP3 DUP6 DUP2 PUSH2 0x1C73 JUMPI PUSH2 0x1C72 PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV PUSH2 0x25FD JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1D05 JUMPI PUSH1 0x0 PUSH2 0x1CAE DUP5 DUP5 PUSH2 0x2616 JUMP JUMPDEST SWAP1 POP DUP5 PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x1CC3 DUP8 DUP4 PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1CEF JUMPI DUP1 SWAP3 POP PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1CFC SWAP2 SWAP1 PUSH2 0x3999 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x1C9A JUMP JUMPDEST DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1B DUP3 PUSH2 0x8D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1D5E JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1F96 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E7C JUMPI PUSH1 0x0 DUP1 PUSH2 0x1DED PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF42 PUSH2 0x1DE8 DUP7 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x26AA JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E71 SWAP3 SWAP2 SWAP1 PUSH2 0x3A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F95 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1F06 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF2C PUSH2 0x1F01 DUP7 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x26AA JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F8A SWAP3 SWAP2 SWAP1 PUSH2 0x3A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1FFC JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF3 SWAP3 SWAP2 SWAP1 PUSH2 0x3ADC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x206A JUMPI PUSH2 0x2063 DUP4 PUSH2 0x26EA JUMP JUMPDEST SWAP1 POP PUSH2 0x20F7 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x2076 SWAP1 PUSH2 0x369D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20A2 SWAP1 PUSH2 0x369D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x217E JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2228 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x21A3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2219 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x2228 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2246 JUMPI PUSH2 0x2245 PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2259 JUMPI PUSH2 0x2258 PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2392 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2273 JUMPI PUSH2 0x2272 PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2286 JUMPI PUSH2 0x2285 PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x22BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22D1 JUMPI PUSH2 0x22D0 PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22E4 JUMPI PUSH2 0x22E3 PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2329 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2320 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x233C JUMPI PUSH2 0x233B PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x234F JUMPI PUSH2 0x234E PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2391 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2388 SWAP2 SWAP1 PUSH2 0x311B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x239E PUSH2 0x2E4F JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x23BA JUMPI PUSH2 0x23B9 PUSH2 0x3B79 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2476 DUP4 DUP4 DUP4 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x250C JUMPI PUSH1 0x0 PUSH2 0x24B4 PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24C0 PUSH2 0x2983 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2509 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x1CB15D2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2500 SWAP3 SWAP2 SWAP1 PUSH2 0x3A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST PUSH2 0x2517 DUP4 DUP4 DUP4 PUSH2 0x29A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x253E JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2559 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2574 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x258F JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x25AA JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x25C5 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x25E0 JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x25F4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x260C JUMPI DUP2 PUSH2 0x260E JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2627 SWAP2 SWAP1 PUSH2 0x3BA8 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2634 SWAP2 SWAP1 PUSH2 0x3999 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x26A2 JUMPI PUSH1 0xD0 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2699 SWAP3 SWAP2 SWAP1 PUSH2 0x3C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x26DE PUSH2 0x26B8 PUSH2 0xACE JUMP JUMPDEST PUSH2 0x26CE PUSH2 0x26C4 DUP9 PUSH2 0x174A JUMP JUMPDEST DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x2A61 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x26F7 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2716 JUMPI PUSH2 0x2715 PUSH2 0x36F7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2748 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x27B0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x27A4 SWAP2 SWAP1 PUSH2 0x3999 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2883 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x283C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2833 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28CC JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2919 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2976 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x29F4 JUMPI PUSH2 0x29F1 PUSH1 0xB PUSH2 0xF2C PUSH2 0x29EC DUP5 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x26AA JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A41 JUMPI PUSH2 0x2A3E PUSH1 0xB PUSH2 0xF42 PUSH2 0x2A39 DUP5 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x26AA JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x2A5C PUSH2 0x2A4D DUP5 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x2A56 DUP5 PUSH2 0x83C JUMP JUMPDEST DUP4 PUSH2 0x1D22 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2A72 DUP6 PUSH1 0x0 ADD DUP6 DUP6 PUSH2 0x2ACE JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2AC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2D5F JUMPI PUSH1 0x0 PUSH2 0x2AFB DUP8 PUSH1 0x1 DUP5 PUSH2 0x2AF6 SWAP2 SWAP1 PUSH2 0x3965 JUMP JUMPDEST PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2BEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x2C6E JUMPI DUP5 PUSH2 0x2C1C DUP9 PUSH1 0x1 DUP6 PUSH2 0x2C17 SWAP2 SWAP1 PUSH2 0x3965 JUMP JUMPDEST PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2D4E JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 SWAP4 POP SWAP4 POP POP POP PUSH2 0x2E47 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EC7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2EAC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EEF DUP3 PUSH2 0x2E8D JUMP JUMPDEST PUSH2 0x2EF9 DUP2 DUP6 PUSH2 0x2E98 JUMP JUMPDEST SWAP4 POP PUSH2 0x2F09 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2EA9 JUMP JUMPDEST PUSH2 0x2F12 DUP2 PUSH2 0x2ED3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F37 DUP2 DUP5 PUSH2 0x2EE4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6F DUP3 PUSH2 0x2F44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F7F DUP2 PUSH2 0x2F64 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F9C DUP2 PUSH2 0x2F76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FB5 DUP2 PUSH2 0x2FA2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FD2 DUP2 PUSH2 0x2FAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FEF JUMPI PUSH2 0x2FEE PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FFD DUP6 DUP3 DUP7 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x300E DUP6 DUP3 DUP7 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x302D DUP2 PUSH2 0x3018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3048 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3057 DUP2 PUSH2 0x2FA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3072 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3091 JUMPI PUSH2 0x3090 PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x309F DUP7 DUP3 DUP8 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x30B0 DUP7 DUP3 DUP8 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x30C1 DUP7 DUP3 DUP8 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30E1 DUP2 PUSH2 0x30CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3115 DUP2 PUSH2 0x3102 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3130 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x310C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x314C JUMPI PUSH2 0x314B PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x315A DUP5 DUP3 DUP6 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3179 JUMPI PUSH2 0x3178 PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3187 DUP5 DUP3 DUP6 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3199 DUP2 PUSH2 0x2F64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31D3 DUP2 PUSH2 0x31BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3229 DUP2 PUSH2 0x31F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3264 DUP2 PUSH2 0x2FA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3276 DUP4 DUP4 PUSH2 0x325B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x329A DUP3 PUSH2 0x322F JUMP JUMPDEST PUSH2 0x32A4 DUP2 DUP6 PUSH2 0x323A JUMP JUMPDEST SWAP4 POP PUSH2 0x32AF DUP4 PUSH2 0x324B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32E0 JUMPI DUP2 MLOAD PUSH2 0x32C7 DUP9 DUP3 PUSH2 0x326A JUMP JUMPDEST SWAP8 POP PUSH2 0x32D2 DUP4 PUSH2 0x3282 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x32B3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x3302 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x3220 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3314 DUP2 DUP10 PUSH2 0x2EE4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3328 DUP2 DUP9 PUSH2 0x2EE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3337 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x3344 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x3351 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x310C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x3363 DUP2 DUP5 PUSH2 0x328F JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x338C DUP2 PUSH2 0x3371 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3383 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33B6 DUP2 PUSH2 0x30CB JUMP JUMPDEST DUP2 EQ PUSH2 0x33C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33D3 DUP2 PUSH2 0x33AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33E2 DUP2 PUSH2 0x3102 JUMP JUMPDEST DUP2 EQ PUSH2 0x33ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33FF DUP2 PUSH2 0x33D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3422 JUMPI PUSH2 0x3421 PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3430 DUP10 DUP3 DUP11 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3441 DUP10 DUP3 DUP11 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3452 DUP10 DUP3 DUP11 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3463 DUP10 DUP3 DUP11 ADD PUSH2 0x33C4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3474 DUP10 DUP3 DUP11 ADD PUSH2 0x33F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3485 DUP10 DUP3 DUP11 ADD PUSH2 0x33F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x34B1 JUMPI PUSH2 0x34B0 PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34BF DUP11 DUP3 DUP12 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x34D0 DUP11 DUP3 DUP12 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x34E1 DUP11 DUP3 DUP12 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x34F2 DUP11 DUP3 DUP12 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3503 DUP11 DUP3 DUP12 ADD PUSH2 0x33C4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3514 DUP11 DUP3 DUP12 ADD PUSH2 0x33F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3525 DUP11 DUP3 DUP12 ADD PUSH2 0x33F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x354B JUMPI PUSH2 0x354A PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3559 DUP6 DUP3 DUP7 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x356A DUP6 DUP3 DUP7 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x357D DUP2 PUSH2 0x31BA JUMP JUMPDEST DUP2 EQ PUSH2 0x3588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x359A DUP2 PUSH2 0x3574 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35B7 JUMPI PUSH2 0x35B6 PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35C5 DUP6 DUP3 DUP7 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35D6 DUP6 DUP3 DUP7 ADD PUSH2 0x358B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x35E9 DUP2 PUSH2 0x3371 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x361E DUP2 PUSH2 0x35EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x363A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x35E0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x364D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3615 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3668 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x36B5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x36C8 JUMPI PUSH2 0x36C7 PUSH2 0x366E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x36E3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x36F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3383 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x373B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x3748 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x3755 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x3762 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3780 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x378D PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x379A PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x37A7 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x37B4 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x37C1 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x37E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x37EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3190 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x382F DUP3 PUSH2 0x35EF JUMP JUMPDEST SWAP2 POP PUSH2 0x383A DUP4 PUSH2 0x35EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x386C JUMPI PUSH2 0x386B PUSH2 0x37F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x387D DUP3 PUSH2 0x35EF JUMP JUMPDEST SWAP2 POP PUSH2 0x3888 DUP4 PUSH2 0x35EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38BA JUMPI PUSH2 0x38B9 PUSH2 0x37F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x38D5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x38E2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x38EF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3926 PUSH2 0x3921 PUSH2 0x391C DUP5 PUSH2 0x38F7 JUMP JUMPDEST PUSH2 0x3901 JUMP JUMPDEST PUSH2 0x30CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3936 DUP2 PUSH2 0x390B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3951 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x392D JUMP JUMPDEST PUSH2 0x395E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3970 DUP3 PUSH2 0x2FA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x397B DUP4 PUSH2 0x2FA2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3993 JUMPI PUSH2 0x3992 PUSH2 0x37F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39A4 DUP3 PUSH2 0x2FA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x39AF DUP4 PUSH2 0x2FA2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x39C7 JUMPI PUSH2 0x39C6 PUSH2 0x37F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x39E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x39EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3A0B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x3A18 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x3A25 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x3A32 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x3A3F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3190 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A8D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x3A9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AC6 PUSH2 0x3AC1 PUSH2 0x3ABC DUP5 PUSH2 0x3AA1 JUMP JUMPDEST PUSH2 0x3901 JUMP JUMPDEST PUSH2 0x30CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AD6 DUP2 PUSH2 0x3AAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3AF1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3ACD JUMP JUMPDEST PUSH2 0x3AFE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3B1A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x3B27 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x30D8 JUMP JUMPDEST PUSH2 0x3B34 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x3B41 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x310C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BB3 DUP3 PUSH2 0x2FA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BBE DUP4 PUSH2 0x2FA2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3BCE JUMPI PUSH2 0x3BCD PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BFE PUSH2 0x3BF9 PUSH2 0x3BF4 DUP5 PUSH2 0x3BD9 JUMP JUMPDEST PUSH2 0x3901 JUMP JUMPDEST PUSH2 0x30CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C0E DUP2 PUSH2 0x3BE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C29 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C05 JUMP JUMPDEST PUSH2 0x3C36 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x26863F2B91960328183D0208385FF1B238A7B7728C21F4C82A7 0xE4 BALANCE PUSH28 0x1A5864736F6C63430008180033000000000000000000000000000000 ","sourceMap":"439:1082:27:-:0;;;527:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1574:52:10;;;;;;;;;;;;;;;;;1613:4;3328:431:20;;;;;;;;;;;;;;;;;615:12:27;1896:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3401:45:20;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:10;681:46:27::3;687:10;716;:8;;;:10;;:::i;:::-;710:2;:16;;;;:::i;:::-;699:8;:27;;;;:::i;:::-;681:5;;;:46;;:::i;:::-;527:207:::0;439:1082;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2914:340:16:-;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:20:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3002:82:7:-;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;1708:286:16:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:17:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;1181:162:27:-;1306:30;1320:4;1326:2;1330:5;1306:13;;;:30;;:::i;:::-;1181:162;;;:::o;2327:413:11:-;2421:30;2435:4;2441:2;2445:5;2421:13;;;:30;;:::i;:::-;2481:1;2465:18;;:4;:18;;;2461:226;;2499:14;2516:13;:11;;;:13;;:::i;:::-;2499:30;;2543:11;2557:12;:10;;;:12;;:::i;:::-;2543:26;;2596:3;2587:6;:12;2583:94;;;2650:6;2658:3;2626:36;;;;;;;;;;;;:::i;:::-;;;;;;;;2583:94;2485:202;;2461:226;2696:37;2717:4;2723:2;2727:5;2696:20;;;:37;;:::i;:::-;2327:413;;;:::o;6271:1107:7:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;2084:103:11:-;2137:7;2163:17;2156:24;;;;2084:103;:::o;7232:399:2:-;7351:1;7335:18;;:4;:18;;;7331:107;;7369:58;7375:17;7394:4;;;;;7400:26;7419:6;7400:18;;;:26;;:::i;:::-;7369:5;;;:58;;:::i;:::-;;;7331:107;7465:1;7451:16;;:2;:16;;;7447:110;;7483:63;7489:17;7508:9;;;;;7519:26;7538:6;7519:18;;;:26;;:::i;:::-;7483:5;;;:63;;:::i;:::-;;;7447:110;7566:58;7585:15;7595:4;7585:9;;;:15;;:::i;:::-;7602:13;7612:2;7602:9;;;:13;;:::i;:::-;7617:6;7566:18;;;:58;;:::i;:::-;7232:399;;;:::o;9277:96::-;9335:7;9365:1;9361;:5;;;;:::i;:::-;9354:12;;9277:96;;;;:::o;4169:218:23:-;4226:7;4257:17;4249:25;;:5;:25;4245:105;;;4328:3;4333:5;4297:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4245:105;4374:5;4359:21;;4169:218;;;:::o;9016:255:2:-;9183:7;9192;9218:46;9229:7;:5;;;:7;;:::i;:::-;9238:25;9241:14;:5;:12;;;:14;;:::i;:::-;9257:5;9238:2;:25;;:::i;:::-;9218:5;:10;;;;:46;;;;;:::i;:::-;9211:53;;;;9016:255;;;;;;:::o;9379:101::-;9442:7;9472:1;9468;:5;;;;:::i;:::-;9461:12;;9379:101;;;;:::o;5539:117::-;5604:7;5630:10;:19;5641:7;5630:19;;;;;;;;;;;;;;;;;;;;;;;;;5623:26;;5539:117;;;:::o;7717:780::-;7817:2;7809:10;;:4;:10;;;;:24;;;;;7832:1;7823:6;:10;7809:24;7805:686;;;7869:1;7853:18;;:4;:18;;;7849:315;;7892:16;7910;7930:150;7957:20;:26;7978:4;7957:26;;;;;;;;;;;;;;;8005:9;;;;;8036:26;8055:6;8036:18;;;:26;;:::i;:::-;7930:5;;;:150;;:::i;:::-;7891:189;;;;;;;;8124:4;8103:46;;;8130:8;8140;8103:46;;;;;;;:::i;:::-;;;;;;;;7873:291;;7849:315;8195:1;8181:16;;:2;:16;;;8177:304;;8218:16;8236;8256:143;8283:20;:24;8304:2;8283:24;;;;;;;;;;;;;;;8329:4;;;;;8355:26;8374:6;8355:18;;;:26;;:::i;:::-;8256:5;;;:143;;:::i;:::-;8217:182;;;;;;;;8443:2;8422:44;;;8447:8;8457;8422:44;;;;;;;:::i;:::-;;;;;;;;8199:282;;8177:304;7805:686;7717:780;;;:::o;839:102:27:-;886:6;918:15;904:30;;839:102;:::o;10167:206:25:-;10229:7;10248:11;10262:4;:17;;:24;;;;10248:38;;10310:1;10303:3;:8;:63;;10318:41;10332:4;:17;;10357:1;10351:3;:7;;;;:::i;:::-;10318:13;;;:41;;:::i;:::-;:48;;;;;;;;;;;;10303:63;;;10314:1;10303:63;10296:70;;;10167:206;;;:::o;8050:162::-;8132:7;8141;8167:38;8175:4;:17;;8194:3;8199:5;8167:7;;;:38;;:::i;:::-;8160:45;;;;8050:162;;;;;;:::o;14099:265::-;14209:28;14282:9;14279:1;14272:20;14344:3;14337:4;14334:1;14324:18;14320:28;14305:43;;14099:265;;;;:::o;11513:870::-;11604:7;11613;11632:11;11646:4;:11;;;;11632:25;;11678:1;11672:3;:7;11668:709;;;11747:25;11775:28;11789:4;11801:1;11795:3;:7;;;;:::i;:::-;11775:13;;;:28;;:::i;:::-;11747:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11889:3;11877:15;;:4;:9;;;:15;;;11873:91;;;11919:30;;;;;;;;;;;;;;11873:91;12040:3;12027:16;;:4;:9;;;:16;;;12023:189;;12101:5;12063:28;12077:4;12089:1;12083:3;:7;;;;:::i;:::-;12063:13;;;:28;;:::i;:::-;:35;;;:43;;;;;;;;;;;;;;;;;;12023:189;;;12145:4;12155:41;;;;;;;;12176:3;12155:41;;;;;;12189:5;12155:41;;;;;12145:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12023:189;12233:4;:11;;;12246:5;12225:27;;;;;;;;11668:709;12283:4;12293:41;;;;;;;;12314:3;12293:41;;;;;;12327:5;12293:41;;;;;12283:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12357:1;12360:5;12349:17;;;;;11513:870;;;;;;;:::o;88:117:28:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:102;7009:8;7056:5;7053:1;7049:13;7028:34;;6967:102;;;:::o;7075:848::-;7136:5;7143:4;7167:6;7158:15;;7191:5;7182:14;;7205:712;7226:1;7216:8;7213:15;7205:712;;;7321:4;7316:3;7312:14;7306:4;7303:24;7300:50;;;7330:18;;:::i;:::-;7300:50;7380:1;7370:8;7366:16;7363:451;;;7795:4;7788:5;7784:16;7775:25;;7363:451;7845:4;7839;7835:15;7827:23;;7875:32;7898:8;7875:32;:::i;:::-;7863:44;;7205:712;;;7075:848;;;;;;;:::o;7929:1073::-;7983:5;8174:8;8164:40;;8195:1;8186:10;;8197:5;;8164:40;8223:4;8213:36;;8240:1;8231:10;;8242:5;;8213:36;8309:4;8357:1;8352:27;;;;8393:1;8388:191;;;;8302:277;;8352:27;8370:1;8361:10;;8372:5;;;8388:191;8433:3;8423:8;8420:17;8417:43;;;8440:18;;:::i;:::-;8417:43;8489:8;8486:1;8482:16;8473:25;;8524:3;8517:5;8514:14;8511:40;;;8531:18;;:::i;:::-;8511:40;8564:5;;;8302:277;;8688:2;8678:8;8675:16;8669:3;8663:4;8660:13;8656:36;8638:2;8628:8;8625:16;8620:2;8614:4;8611:12;8607:35;8591:111;8588:246;;;8744:8;8738:4;8734:19;8725:28;;8779:3;8772:5;8769:14;8766:40;;;8786:18;;:::i;:::-;8766:40;8819:5;;8588:246;8859:42;8897:3;8887:8;8881:4;8878:1;8859:42;:::i;:::-;8844:57;;;;8933:4;8928:3;8924:14;8917:5;8914:25;8911:51;;;8942:18;;:::i;:::-;8911:51;8991:4;8984:5;8980:16;8971:25;;7929:1073;;;;;;:::o;9008:86::-;9043:7;9083:4;9076:5;9072:16;9061:27;;9008:86;;;:::o;9100:281::-;9158:5;9182:23;9200:4;9182:23;:::i;:::-;9174:31;;9226:25;9242:8;9226:25;:::i;:::-;9214:37;;9270:104;9307:66;9297:8;9291:4;9270:104;:::i;:::-;9261:113;;9100:281;;;;:::o;9387:410::-;9427:7;9450:20;9468:1;9450:20;:::i;:::-;9445:25;;9484:20;9502:1;9484:20;:::i;:::-;9479:25;;9539:1;9536;9532:9;9561:30;9579:11;9561:30;:::i;:::-;9550:41;;9740:1;9731:7;9727:15;9724:1;9721:22;9701:1;9694:9;9674:83;9651:139;;9770:18;;:::i;:::-;9651:139;9435:362;9387:410;;;;:::o;9803:77::-;9840:7;9869:5;9858:16;;9803:77;;;:::o;9886:118::-;9973:24;9991:5;9973:24;:::i;:::-;9968:3;9961:37;9886:118;;:::o;10010:::-;10097:24;10115:5;10097:24;:::i;:::-;10092:3;10085:37;10010:118;;:::o;10134:664::-;10339:4;10377:3;10366:9;10362:19;10354:27;;10391:71;10459:1;10448:9;10444:17;10435:6;10391:71;:::i;:::-;10472:72;10540:2;10529:9;10525:18;10516:6;10472:72;:::i;:::-;10554;10622:2;10611:9;10607:18;10598:6;10554:72;:::i;:::-;10636;10704:2;10693:9;10689:18;10680:6;10636:72;:::i;:::-;10718:73;10786:3;10775:9;10771:19;10762:6;10718:73;:::i;:::-;10134:664;;;;;;;;:::o;10804:169::-;10888:11;10922:6;10917:3;10910:19;10962:4;10957:3;10953:14;10938:29;;10804:169;;;;:::o;10979:246::-;11060:1;11070:113;11084:6;11081:1;11078:13;11070:113;;;11169:1;11164:3;11160:11;11154:18;11150:1;11145:3;11141:11;11134:39;11106:2;11103:1;11099:10;11094:15;;11070:113;;;11217:1;11208:6;11203:3;11199:16;11192:27;11041:184;10979:246;;;:::o;11231:102::-;11272:6;11323:2;11319:7;11314:2;11307:5;11303:14;11299:28;11289:38;;11231:102;;;:::o;11339:377::-;11427:3;11455:39;11488:5;11455:39;:::i;:::-;11510:71;11574:6;11569:3;11510:71;:::i;:::-;11503:78;;11590:65;11648:6;11643:3;11636:4;11629:5;11625:16;11590:65;:::i;:::-;11680:29;11702:6;11680:29;:::i;:::-;11675:3;11671:39;11664:46;;11431:285;11339:377;;;;:::o;11722:313::-;11835:4;11873:2;11862:9;11858:18;11850:26;;11922:9;11916:4;11912:20;11908:1;11897:9;11893:17;11886:47;11950:78;12023:4;12014:6;11950:78;:::i;:::-;11942:86;;11722:313;;;;:::o;12041:98::-;12092:6;12126:5;12120:12;12110:22;;12041:98;;;:::o;12145:116::-;12196:4;12219:3;12211:11;;12249:4;12244:3;12240:14;12232:22;;12145:116;;;:::o;12267:154::-;12310:11;12346:29;12370:3;12364:10;12346:29;:::i;:::-;12409:5;12385:29;;12322:99;12267:154;;;:::o;12427:594::-;12511:5;12542:38;12574:5;12542:38;:::i;:::-;12605:5;12632:40;12666:5;12632:40;:::i;:::-;12620:52;;12691:35;12717:8;12691:35;:::i;:::-;12682:44;;12750:2;12742:6;12739:14;12736:278;;;12821:169;12906:66;12876:6;12872:2;12868:15;12865:1;12861:23;12821:169;:::i;:::-;12798:5;12777:227;12768:236;;12736:278;12517:504;;12427:594;;;:::o;13027:332::-;13148:4;13186:2;13175:9;13171:18;13163:26;;13199:71;13267:1;13256:9;13252:17;13243:6;13199:71;:::i;:::-;13280:72;13348:2;13337:9;13333:18;13324:6;13280:72;:::i;:::-;13027:332;;;;;:::o;13365:191::-;13405:3;13424:20;13442:1;13424:20;:::i;:::-;13419:25;;13458:20;13476:1;13458:20;:::i;:::-;13453:25;;13501:1;13498;13494:9;13487:16;;13522:3;13519:1;13516:10;13513:36;;;13529:18;;:::i;:::-;13513:36;13365:191;;;;:::o;13562:442::-;13711:4;13749:2;13738:9;13734:18;13726:26;;13762:71;13830:1;13819:9;13815:17;13806:6;13762:71;:::i;:::-;13843:72;13911:2;13900:9;13896:18;13887:6;13843:72;:::i;:::-;13925;13993:2;13982:9;13978:18;13969:6;13925:72;:::i;:::-;13562:442;;;;;;:::o;14010:222::-;14103:4;14141:2;14130:9;14126:18;14118:26;;14154:71;14222:1;14211:9;14207:17;14198:6;14154:71;:::i;:::-;14010:222;;;;:::o;14238:138::-;14275:7;14315:54;14308:5;14304:66;14293:77;;14238:138;;;:::o;14382:244::-;14422:3;14441:20;14459:1;14441:20;:::i;:::-;14436:25;;14475:20;14493:1;14475:20;:::i;:::-;14470:25;;14518:1;14515;14511:9;14504:16;;14541:54;14536:3;14533:63;14530:89;;;14599:18;;:::i;:::-;14530:89;14382:244;;;;:::o;14632:87::-;14679:7;14708:5;14697:16;;14632:87;;;:::o;14725:158::-;14783:9;14816:61;14832:44;14841:34;14869:5;14841:34;:::i;:::-;14832:44;:::i;:::-;14816:61;:::i;:::-;14803:74;;14725:158;;;:::o;14889:147::-;14984:45;15023:5;14984:45;:::i;:::-;14979:3;14972:58;14889:147;;:::o;15042:348::-;15171:4;15209:2;15198:9;15194:18;15186:26;;15222:79;15298:1;15287:9;15283:17;15274:6;15222:79;:::i;:::-;15311:72;15379:2;15368:9;15364:18;15355:6;15311:72;:::i;:::-;15042:348;;;;;:::o;15396:247::-;15436:4;15456:20;15474:1;15456:20;:::i;:::-;15451:25;;15490:20;15508:1;15490:20;:::i;:::-;15485:25;;15534:1;15531;15527:9;15519:17;;15558:54;15552:4;15549:64;15546:90;;;15616:18;;:::i;:::-;15546:90;15396:247;;;;:::o;15649:194::-;15689:4;15709:20;15727:1;15709:20;:::i;:::-;15704:25;;15743:20;15761:1;15743:20;:::i;:::-;15738:25;;15787:1;15784;15780:9;15772:17;;15811:1;15805:4;15802:11;15799:37;;;15816:18;;:::i;:::-;15799:37;15649:194;;;;:::o;439:1082:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLOCK_MODE_8123":{"entryPoint":2047,"id":8123,"parameterSlots":0,"returnSlots":1},"@DOMAIN_SEPARATOR_1757":{"entryPoint":1773,"id":1757,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3194":{"entryPoint":5844,"id":3194,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3206":{"entryPoint":5903,"id":3206,"parameterSlots":0,"returnSlots":1},"@_add_754":{"entryPoint":3884,"id":754,"parameterSlots":2,"returnSlots":1},"@_approve_1371":{"entryPoint":3936,"id":1371,"parameterSlots":3,"returnSlots":0},"@_approve_1431":{"entryPoint":6412,"id":1431,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3124":{"entryPoint":6899,"id":3124,"parameterSlots":0,"returnSlots":1},"@_burn_1353":{"entryPoint":5134,"id":1353,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":4869,"id":84,"parameterSlots":0,"returnSlots":0},"@_checkpoints_705":{"entryPoint":6315,"id":705,"parameterSlots":2,"returnSlots":1},"@_delegate_535":{"entryPoint":5264,"id":535,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_3103":{"entryPoint":4346,"id":3103,"parameterSlots":0,"returnSlots":1},"@_getVotingUnits_1859":{"entryPoint":7440,"id":1859,"parameterSlots":1,"returnSlots":1},"@_hashTypedDataV4_3140":{"entryPoint":6066,"id":3140,"parameterSlots":1,"returnSlots":1},"@_insert_7126":{"entryPoint":10958,"id":7126,"parameterSlots":3,"returnSlots":2},"@_maxSupply_1791":{"entryPoint":10627,"id":1791,"parameterSlots":0,"returnSlots":1},"@_mint_1320":{"entryPoint":5004,"id":1320,"parameterSlots":2,"returnSlots":0},"@_moveDelegateVotes_668":{"entryPoint":7458,"id":668,"parameterSlots":3,"returnSlots":0},"@_msgSender_1964":{"entryPoint":3928,"id":1964,"parameterSlots":0,"returnSlots":1},"@_numCheckpoints_686":{"entryPoint":5540,"id":686,"parameterSlots":1,"returnSlots":1},"@_push_740":{"entryPoint":9898,"id":740,"parameterSlots":3,"returnSlots":2},"@_spendAllowance_1479":{"entryPoint":3954,"id":1479,"parameterSlots":3,"returnSlots":0},"@_subtract_768":{"entryPoint":3906,"id":768,"parameterSlots":2,"returnSlots":1},"@_throwError_2979":{"entryPoint":8754,"id":2979,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":5628,"id":146,"parameterSlots":1,"returnSlots":0},"@_transferVotingUnits_590":{"entryPoint":10663,"id":590,"parameterSlots":3,"returnSlots":0},"@_transfer_1210":{"entryPoint":4102,"id":1210,"parameterSlots":3,"returnSlots":0},"@_unsafeAccess_7245":{"entryPoint":7298,"id":7245,"parameterSlots":2,"returnSlots":1},"@_update_1287":{"entryPoint":10078,"id":1287,"parameterSlots":3,"returnSlots":0},"@_update_1845":{"entryPoint":9323,"id":1845,"parameterSlots":3,"returnSlots":0},"@_update_8144":{"entryPoint":6883,"id":8144,"parameterSlots":3,"returnSlots":0},"@_upperBinaryLookup_7178":{"entryPoint":7319,"id":7178,"parameterSlots":4,"returnSlots":1},"@_useCheckedNonce_2049":{"entryPoint":6140,"id":2049,"parameterSlots":2,"returnSlots":0},"@_useNonce_2024":{"entryPoint":6228,"id":2024,"parameterSlots":1,"returnSlots":1},"@allowance_1107":{"entryPoint":3589,"id":1107,"parameterSlots":2,"returnSlots":1},"@approve_1131":{"entryPoint":1672,"id":1131,"parameterSlots":2,"returnSlots":1},"@at_7035":{"entryPoint":9110,"id":7035,"parameterSlots":2,"returnSlots":1},"@average_3509":{"entryPoint":9750,"id":3509,"parameterSlots":2,"returnSlots":1},"@balanceOf_1066":{"entryPoint":2257,"id":1066,"parameterSlots":1,"returnSlots":1},"@burnFrom_1603":{"entryPoint":2349,"id":1603,"parameterSlots":2,"returnSlots":0},"@burn_1582":{"entryPoint":2027,"id":1582,"parameterSlots":1,"returnSlots":0},"@byteLength_2168":{"entryPoint":10878,"id":2168,"parameterSlots":1,"returnSlots":1},"@checkpoints_1889":{"entryPoint":3724,"id":1889,"parameterSlots":2,"returnSlots":1},"@clock_8114":{"entryPoint":2766,"id":8114,"parameterSlots":0,"returnSlots":1},"@decimals_1044":{"entryPoint":1764,"id":1044,"parameterSlots":0,"returnSlots":1},"@delegateBySig_500":{"entryPoint":3063,"id":500,"parameterSlots":6,"returnSlots":0},"@delegate_443":{"entryPoint":2213,"id":443,"parameterSlots":1,"returnSlots":0},"@delegates_426":{"entryPoint":2108,"id":426,"parameterSlots":1,"returnSlots":1},"@eip712Domain_3182":{"entryPoint":2399,"id":3182,"parameterSlots":0,"returnSlots":7},"@getPastTotalSupply_402":{"entryPoint":2611,"id":402,"parameterSlots":1,"returnSlots":1},"@getPastVotes_370":{"entryPoint":1788,"id":370,"parameterSlots":2,"returnSlots":1},"@getVotes_334":{"entryPoint":2920,"id":334,"parameterSlots":1,"returnSlots":1},"@latest_6954":{"entryPoint":5962,"id":6954,"parameterSlots":1,"returnSlots":1},"@length_7017":{"entryPoint":8091,"id":7017,"parameterSlots":1,"returnSlots":1},"@log2_3991":{"entryPoint":9500,"id":3991,"parameterSlots":1,"returnSlots":1},"@min_3486":{"entryPoint":9725,"id":3486,"parameterSlots":2,"returnSlots":1},"@mint_8101":{"entryPoint":2005,"id":8101,"parameterSlots":2,"returnSlots":0},"@name_1026":{"entryPoint":1526,"id":1026,"parameterSlots":0,"returnSlots":1},"@nonces_1747":{"entryPoint":5826,"id":1747,"parameterSlots":1,"returnSlots":1},"@nonces_2009":{"entryPoint":8196,"id":2009,"parameterSlots":1,"returnSlots":1},"@nonces_8160":{"entryPoint":2381,"id":8160,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_1872":{"entryPoint":2239,"id":1872,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":2569,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1730":{"entryPoint":3261,"id":1730,"parameterSlots":7,"returnSlots":0},"@push_6757":{"entryPoint":10849,"id":6757,"parameterSlots":3,"returnSlots":2},"@recover_2930":{"entryPoint":6092,"id":2930,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2329,"id":98,"parameterSlots":0,"returnSlots":0},"@sqrt_3824":{"entryPoint":7049,"id":3824,"parameterSlots":1,"returnSlots":1},"@symbol_1035":{"entryPoint":2774,"id":1035,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2235":{"entryPoint":8269,"id":2235,"parameterSlots":2,"returnSlots":1},"@toString_2136":{"entryPoint":9962,"id":2136,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3280":{"entryPoint":8445,"id":3280,"parameterSlots":2,"returnSlots":1},"@toUint208_4530":{"entryPoint":9788,"id":4530,"parameterSlots":1,"returnSlots":1},"@toUint32_5146":{"entryPoint":8108,"id":5146,"parameterSlots":1,"returnSlots":1},"@toUint48_5090":{"entryPoint":4529,"id":5090,"parameterSlots":1,"returnSlots":1},"@totalSupply_1053":{"entryPoint":1707,"id":1053,"parameterSlots":0,"returnSlots":1},"@transferFrom_1163":{"entryPoint":1717,"id":1163,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":3750,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_1090":{"entryPoint":3028,"id":1090,"parameterSlots":2,"returnSlots":1},"@tryRecover_2894":{"entryPoint":8510,"id":2894,"parameterSlots":4,"returnSlots":3},"@upperLookupRecent_6924":{"entryPoint":4619,"id":6924,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":12173,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":13296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":12227,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":13707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":13252,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12643,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":13620,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":12408,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":13458,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":12248,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":13317,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":13728,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":12598,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":12906,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":12688,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":12943,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":12324,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":12832,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":12556,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack":{"entryPoint":15365,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_32_by_1_to_t_uint8_fromStack":{"entryPoint":15053,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack":{"entryPoint":14637,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":12004,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Checkpoint208_$6734_memory_ptr_to_t_struct$_Checkpoint208_$6734_memory_ptr_fromStack":{"entryPoint":13860,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint208_to_t_uint208":{"entryPoint":13845,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":12891,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12366,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":12746,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48":{"entryPoint":13792,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48_fromStack":{"entryPoint":13187,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":12504,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":12703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":14284,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":14797,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14528,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":12339,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13037,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":12571,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14187,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14118,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":14838,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":15109,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":15380,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":15068,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":14652,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12061,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint208_$6734_memory_ptr__to_t_struct$_Checkpoint208_$6734_memory_ptr__fromStack_reversed":{"entryPoint":13907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14968,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed":{"entryPoint":14030,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":12761,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":13202,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":12519,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12875,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12847,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":11917,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12930,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":12858,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":11928,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint208":{"entryPoint":14372,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":14745,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":15272,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint208":{"entryPoint":14450,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14693,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":12132,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":12312,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":12788,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":12546,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_208_by_1":{"entryPoint":15321,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_32_by_1":{"entryPoint":15009,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_48_by_1":{"entryPoint":14583,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":12100,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint208":{"entryPoint":13807,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12194,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":12730,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint48":{"entryPoint":13169,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":12491,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_208_by_1_to_t_uint8":{"entryPoint":15331,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_32_by_1_to_t_uint8":{"entryPoint":15019,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_48_by_1_to_t_uint8":{"entryPoint":14603,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":11945,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":13981,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":14593,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":14325,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":14921,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":15178,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":13934,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":15225,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14071,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12095,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":11987,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":12150,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":13273,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":12204,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":13684,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":13229,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:24915:28","nodeType":"YulBlock","src":"0:24915:28","statements":[{"body":{"nativeSrc":"66:40:28","nodeType":"YulBlock","src":"66:40:28","statements":[{"nativeSrc":"77:22:28","nodeType":"YulAssignment","src":"77:22:28","value":{"arguments":[{"name":"value","nativeSrc":"93:5:28","nodeType":"YulIdentifier","src":"93:5:28"}],"functionName":{"name":"mload","nativeSrc":"87:5:28","nodeType":"YulIdentifier","src":"87:5:28"},"nativeSrc":"87:12:28","nodeType":"YulFunctionCall","src":"87:12:28"},"variableNames":[{"name":"length","nativeSrc":"77:6:28","nodeType":"YulIdentifier","src":"77:6:28"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:28","nodeType":"YulTypedName","src":"49:5:28","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:28","nodeType":"YulTypedName","src":"59:6:28","type":""}],"src":"7:99:28"},{"body":{"nativeSrc":"208:73:28","nodeType":"YulBlock","src":"208:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:28","nodeType":"YulIdentifier","src":"225:3:28"},{"name":"length","nativeSrc":"230:6:28","nodeType":"YulIdentifier","src":"230:6:28"}],"functionName":{"name":"mstore","nativeSrc":"218:6:28","nodeType":"YulIdentifier","src":"218:6:28"},"nativeSrc":"218:19:28","nodeType":"YulFunctionCall","src":"218:19:28"},"nativeSrc":"218:19:28","nodeType":"YulExpressionStatement","src":"218:19:28"},{"nativeSrc":"246:29:28","nodeType":"YulAssignment","src":"246:29:28","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:28","nodeType":"YulIdentifier","src":"265:3:28"},{"kind":"number","nativeSrc":"270:4:28","nodeType":"YulLiteral","src":"270:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:28","nodeType":"YulIdentifier","src":"261:3:28"},"nativeSrc":"261:14:28","nodeType":"YulFunctionCall","src":"261:14:28"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:28","nodeType":"YulIdentifier","src":"246:11:28"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:28","nodeType":"YulTypedName","src":"180:3:28","type":""},{"name":"length","nativeSrc":"185:6:28","nodeType":"YulTypedName","src":"185:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:28","nodeType":"YulTypedName","src":"196:11:28","type":""}],"src":"112:169:28"},{"body":{"nativeSrc":"349:184:28","nodeType":"YulBlock","src":"349:184:28","statements":[{"nativeSrc":"359:10:28","nodeType":"YulVariableDeclaration","src":"359:10:28","value":{"kind":"number","nativeSrc":"368:1:28","nodeType":"YulLiteral","src":"368:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:28","nodeType":"YulTypedName","src":"363:1:28","type":""}]},{"body":{"nativeSrc":"428:63:28","nodeType":"YulBlock","src":"428:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:28","nodeType":"YulIdentifier","src":"453:3:28"},{"name":"i","nativeSrc":"458:1:28","nodeType":"YulIdentifier","src":"458:1:28"}],"functionName":{"name":"add","nativeSrc":"449:3:28","nodeType":"YulIdentifier","src":"449:3:28"},"nativeSrc":"449:11:28","nodeType":"YulFunctionCall","src":"449:11:28"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:28","nodeType":"YulIdentifier","src":"472:3:28"},{"name":"i","nativeSrc":"477:1:28","nodeType":"YulIdentifier","src":"477:1:28"}],"functionName":{"name":"add","nativeSrc":"468:3:28","nodeType":"YulIdentifier","src":"468:3:28"},"nativeSrc":"468:11:28","nodeType":"YulFunctionCall","src":"468:11:28"}],"functionName":{"name":"mload","nativeSrc":"462:5:28","nodeType":"YulIdentifier","src":"462:5:28"},"nativeSrc":"462:18:28","nodeType":"YulFunctionCall","src":"462:18:28"}],"functionName":{"name":"mstore","nativeSrc":"442:6:28","nodeType":"YulIdentifier","src":"442:6:28"},"nativeSrc":"442:39:28","nodeType":"YulFunctionCall","src":"442:39:28"},"nativeSrc":"442:39:28","nodeType":"YulExpressionStatement","src":"442:39:28"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:28","nodeType":"YulIdentifier","src":"389:1:28"},{"name":"length","nativeSrc":"392:6:28","nodeType":"YulIdentifier","src":"392:6:28"}],"functionName":{"name":"lt","nativeSrc":"386:2:28","nodeType":"YulIdentifier","src":"386:2:28"},"nativeSrc":"386:13:28","nodeType":"YulFunctionCall","src":"386:13:28"},"nativeSrc":"378:113:28","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:28","nodeType":"YulBlock","src":"400:19:28","statements":[{"nativeSrc":"402:15:28","nodeType":"YulAssignment","src":"402:15:28","value":{"arguments":[{"name":"i","nativeSrc":"411:1:28","nodeType":"YulIdentifier","src":"411:1:28"},{"kind":"number","nativeSrc":"414:2:28","nodeType":"YulLiteral","src":"414:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:28","nodeType":"YulIdentifier","src":"407:3:28"},"nativeSrc":"407:10:28","nodeType":"YulFunctionCall","src":"407:10:28"},"variableNames":[{"name":"i","nativeSrc":"402:1:28","nodeType":"YulIdentifier","src":"402:1:28"}]}]},"pre":{"nativeSrc":"382:3:28","nodeType":"YulBlock","src":"382:3:28","statements":[]},"src":"378:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:28","nodeType":"YulIdentifier","src":"511:3:28"},{"name":"length","nativeSrc":"516:6:28","nodeType":"YulIdentifier","src":"516:6:28"}],"functionName":{"name":"add","nativeSrc":"507:3:28","nodeType":"YulIdentifier","src":"507:3:28"},"nativeSrc":"507:16:28","nodeType":"YulFunctionCall","src":"507:16:28"},{"kind":"number","nativeSrc":"525:1:28","nodeType":"YulLiteral","src":"525:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:28","nodeType":"YulIdentifier","src":"500:6:28"},"nativeSrc":"500:27:28","nodeType":"YulFunctionCall","src":"500:27:28"},"nativeSrc":"500:27:28","nodeType":"YulExpressionStatement","src":"500:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:28","nodeType":"YulTypedName","src":"331:3:28","type":""},{"name":"dst","nativeSrc":"336:3:28","nodeType":"YulTypedName","src":"336:3:28","type":""},{"name":"length","nativeSrc":"341:6:28","nodeType":"YulTypedName","src":"341:6:28","type":""}],"src":"287:246:28"},{"body":{"nativeSrc":"587:54:28","nodeType":"YulBlock","src":"587:54:28","statements":[{"nativeSrc":"597:38:28","nodeType":"YulAssignment","src":"597:38:28","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:28","nodeType":"YulIdentifier","src":"615:5:28"},{"kind":"number","nativeSrc":"622:2:28","nodeType":"YulLiteral","src":"622:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:28","nodeType":"YulIdentifier","src":"611:3:28"},"nativeSrc":"611:14:28","nodeType":"YulFunctionCall","src":"611:14:28"},{"arguments":[{"kind":"number","nativeSrc":"631:2:28","nodeType":"YulLiteral","src":"631:2:28","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:28","nodeType":"YulIdentifier","src":"627:3:28"},"nativeSrc":"627:7:28","nodeType":"YulFunctionCall","src":"627:7:28"}],"functionName":{"name":"and","nativeSrc":"607:3:28","nodeType":"YulIdentifier","src":"607:3:28"},"nativeSrc":"607:28:28","nodeType":"YulFunctionCall","src":"607:28:28"},"variableNames":[{"name":"result","nativeSrc":"597:6:28","nodeType":"YulIdentifier","src":"597:6:28"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:28","nodeType":"YulTypedName","src":"570:5:28","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:28","nodeType":"YulTypedName","src":"580:6:28","type":""}],"src":"539:102:28"},{"body":{"nativeSrc":"739:285:28","nodeType":"YulBlock","src":"739:285:28","statements":[{"nativeSrc":"749:53:28","nodeType":"YulVariableDeclaration","src":"749:53:28","value":{"arguments":[{"name":"value","nativeSrc":"796:5:28","nodeType":"YulIdentifier","src":"796:5:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:28","nodeType":"YulIdentifier","src":"763:32:28"},"nativeSrc":"763:39:28","nodeType":"YulFunctionCall","src":"763:39:28"},"variables":[{"name":"length","nativeSrc":"753:6:28","nodeType":"YulTypedName","src":"753:6:28","type":""}]},{"nativeSrc":"811:78:28","nodeType":"YulAssignment","src":"811:78:28","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:28","nodeType":"YulIdentifier","src":"877:3:28"},{"name":"length","nativeSrc":"882:6:28","nodeType":"YulIdentifier","src":"882:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:28","nodeType":"YulIdentifier","src":"818:58:28"},"nativeSrc":"818:71:28","nodeType":"YulFunctionCall","src":"818:71:28"},"variableNames":[{"name":"pos","nativeSrc":"811:3:28","nodeType":"YulIdentifier","src":"811:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:28","nodeType":"YulIdentifier","src":"937:5:28"},{"kind":"number","nativeSrc":"944:4:28","nodeType":"YulLiteral","src":"944:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:28","nodeType":"YulIdentifier","src":"933:3:28"},"nativeSrc":"933:16:28","nodeType":"YulFunctionCall","src":"933:16:28"},{"name":"pos","nativeSrc":"951:3:28","nodeType":"YulIdentifier","src":"951:3:28"},{"name":"length","nativeSrc":"956:6:28","nodeType":"YulIdentifier","src":"956:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:28","nodeType":"YulIdentifier","src":"898:34:28"},"nativeSrc":"898:65:28","nodeType":"YulFunctionCall","src":"898:65:28"},"nativeSrc":"898:65:28","nodeType":"YulExpressionStatement","src":"898:65:28"},{"nativeSrc":"972:46:28","nodeType":"YulAssignment","src":"972:46:28","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:28","nodeType":"YulIdentifier","src":"983:3:28"},{"arguments":[{"name":"length","nativeSrc":"1010:6:28","nodeType":"YulIdentifier","src":"1010:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:28","nodeType":"YulIdentifier","src":"988:21:28"},"nativeSrc":"988:29:28","nodeType":"YulFunctionCall","src":"988:29:28"}],"functionName":{"name":"add","nativeSrc":"979:3:28","nodeType":"YulIdentifier","src":"979:3:28"},"nativeSrc":"979:39:28","nodeType":"YulFunctionCall","src":"979:39:28"},"variableNames":[{"name":"end","nativeSrc":"972:3:28","nodeType":"YulIdentifier","src":"972:3:28"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:28","nodeType":"YulTypedName","src":"720:5:28","type":""},{"name":"pos","nativeSrc":"727:3:28","nodeType":"YulTypedName","src":"727:3:28","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:28","nodeType":"YulTypedName","src":"735:3:28","type":""}],"src":"647:377:28"},{"body":{"nativeSrc":"1148:195:28","nodeType":"YulBlock","src":"1148:195:28","statements":[{"nativeSrc":"1158:26:28","nodeType":"YulAssignment","src":"1158:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:28","nodeType":"YulIdentifier","src":"1170:9:28"},{"kind":"number","nativeSrc":"1181:2:28","nodeType":"YulLiteral","src":"1181:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:28","nodeType":"YulIdentifier","src":"1166:3:28"},"nativeSrc":"1166:18:28","nodeType":"YulFunctionCall","src":"1166:18:28"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:28","nodeType":"YulIdentifier","src":"1158:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:28","nodeType":"YulIdentifier","src":"1205:9:28"},{"kind":"number","nativeSrc":"1216:1:28","nodeType":"YulLiteral","src":"1216:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:28","nodeType":"YulIdentifier","src":"1201:3:28"},"nativeSrc":"1201:17:28","nodeType":"YulFunctionCall","src":"1201:17:28"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:28","nodeType":"YulIdentifier","src":"1224:4:28"},{"name":"headStart","nativeSrc":"1230:9:28","nodeType":"YulIdentifier","src":"1230:9:28"}],"functionName":{"name":"sub","nativeSrc":"1220:3:28","nodeType":"YulIdentifier","src":"1220:3:28"},"nativeSrc":"1220:20:28","nodeType":"YulFunctionCall","src":"1220:20:28"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:28","nodeType":"YulIdentifier","src":"1194:6:28"},"nativeSrc":"1194:47:28","nodeType":"YulFunctionCall","src":"1194:47:28"},"nativeSrc":"1194:47:28","nodeType":"YulExpressionStatement","src":"1194:47:28"},{"nativeSrc":"1250:86:28","nodeType":"YulAssignment","src":"1250:86:28","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:28","nodeType":"YulIdentifier","src":"1322:6:28"},{"name":"tail","nativeSrc":"1331:4:28","nodeType":"YulIdentifier","src":"1331:4:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:28","nodeType":"YulIdentifier","src":"1258:63:28"},"nativeSrc":"1258:78:28","nodeType":"YulFunctionCall","src":"1258:78:28"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:28","nodeType":"YulIdentifier","src":"1250:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:28","nodeType":"YulTypedName","src":"1120:9:28","type":""},{"name":"value0","nativeSrc":"1132:6:28","nodeType":"YulTypedName","src":"1132:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:28","nodeType":"YulTypedName","src":"1143:4:28","type":""}],"src":"1030:313:28"},{"body":{"nativeSrc":"1389:35:28","nodeType":"YulBlock","src":"1389:35:28","statements":[{"nativeSrc":"1399:19:28","nodeType":"YulAssignment","src":"1399:19:28","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:28","nodeType":"YulLiteral","src":"1415:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:28","nodeType":"YulIdentifier","src":"1409:5:28"},"nativeSrc":"1409:9:28","nodeType":"YulFunctionCall","src":"1409:9:28"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:28","nodeType":"YulIdentifier","src":"1399:6:28"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:28","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:28","nodeType":"YulTypedName","src":"1382:6:28","type":""}],"src":"1349:75:28"},{"body":{"nativeSrc":"1519:28:28","nodeType":"YulBlock","src":"1519:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:28","nodeType":"YulLiteral","src":"1536:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:28","nodeType":"YulLiteral","src":"1539:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:28","nodeType":"YulIdentifier","src":"1529:6:28"},"nativeSrc":"1529:12:28","nodeType":"YulFunctionCall","src":"1529:12:28"},"nativeSrc":"1529:12:28","nodeType":"YulExpressionStatement","src":"1529:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:28","nodeType":"YulFunctionDefinition","src":"1430:117:28"},{"body":{"nativeSrc":"1642:28:28","nodeType":"YulBlock","src":"1642:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:28","nodeType":"YulLiteral","src":"1659:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:28","nodeType":"YulLiteral","src":"1662:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:28","nodeType":"YulIdentifier","src":"1652:6:28"},"nativeSrc":"1652:12:28","nodeType":"YulFunctionCall","src":"1652:12:28"},"nativeSrc":"1652:12:28","nodeType":"YulExpressionStatement","src":"1652:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:28","nodeType":"YulFunctionDefinition","src":"1553:117:28"},{"body":{"nativeSrc":"1721:81:28","nodeType":"YulBlock","src":"1721:81:28","statements":[{"nativeSrc":"1731:65:28","nodeType":"YulAssignment","src":"1731:65:28","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:28","nodeType":"YulIdentifier","src":"1746:5:28"},{"kind":"number","nativeSrc":"1753:42:28","nodeType":"YulLiteral","src":"1753:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:28","nodeType":"YulIdentifier","src":"1742:3:28"},"nativeSrc":"1742:54:28","nodeType":"YulFunctionCall","src":"1742:54:28"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:28","nodeType":"YulIdentifier","src":"1731:7:28"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:28","nodeType":"YulTypedName","src":"1703:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:28","nodeType":"YulTypedName","src":"1713:7:28","type":""}],"src":"1676:126:28"},{"body":{"nativeSrc":"1853:51:28","nodeType":"YulBlock","src":"1853:51:28","statements":[{"nativeSrc":"1863:35:28","nodeType":"YulAssignment","src":"1863:35:28","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:28","nodeType":"YulIdentifier","src":"1892:5:28"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:28","nodeType":"YulIdentifier","src":"1874:17:28"},"nativeSrc":"1874:24:28","nodeType":"YulFunctionCall","src":"1874:24:28"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:28","nodeType":"YulIdentifier","src":"1863:7:28"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:28","nodeType":"YulTypedName","src":"1835:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:28","nodeType":"YulTypedName","src":"1845:7:28","type":""}],"src":"1808:96:28"},{"body":{"nativeSrc":"1953:79:28","nodeType":"YulBlock","src":"1953:79:28","statements":[{"body":{"nativeSrc":"2010:16:28","nodeType":"YulBlock","src":"2010:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:28","nodeType":"YulLiteral","src":"2019:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:28","nodeType":"YulLiteral","src":"2022:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:28","nodeType":"YulIdentifier","src":"2012:6:28"},"nativeSrc":"2012:12:28","nodeType":"YulFunctionCall","src":"2012:12:28"},"nativeSrc":"2012:12:28","nodeType":"YulExpressionStatement","src":"2012:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:28","nodeType":"YulIdentifier","src":"1976:5:28"},{"arguments":[{"name":"value","nativeSrc":"2001:5:28","nodeType":"YulIdentifier","src":"2001:5:28"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:28","nodeType":"YulIdentifier","src":"1983:17:28"},"nativeSrc":"1983:24:28","nodeType":"YulFunctionCall","src":"1983:24:28"}],"functionName":{"name":"eq","nativeSrc":"1973:2:28","nodeType":"YulIdentifier","src":"1973:2:28"},"nativeSrc":"1973:35:28","nodeType":"YulFunctionCall","src":"1973:35:28"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:28","nodeType":"YulIdentifier","src":"1966:6:28"},"nativeSrc":"1966:43:28","nodeType":"YulFunctionCall","src":"1966:43:28"},"nativeSrc":"1963:63:28","nodeType":"YulIf","src":"1963:63:28"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:28","nodeType":"YulTypedName","src":"1946:5:28","type":""}],"src":"1910:122:28"},{"body":{"nativeSrc":"2090:87:28","nodeType":"YulBlock","src":"2090:87:28","statements":[{"nativeSrc":"2100:29:28","nodeType":"YulAssignment","src":"2100:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:28","nodeType":"YulIdentifier","src":"2122:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:28","nodeType":"YulIdentifier","src":"2109:12:28"},"nativeSrc":"2109:20:28","nodeType":"YulFunctionCall","src":"2109:20:28"},"variableNames":[{"name":"value","nativeSrc":"2100:5:28","nodeType":"YulIdentifier","src":"2100:5:28"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:28","nodeType":"YulIdentifier","src":"2165:5:28"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:28","nodeType":"YulIdentifier","src":"2138:26:28"},"nativeSrc":"2138:33:28","nodeType":"YulFunctionCall","src":"2138:33:28"},"nativeSrc":"2138:33:28","nodeType":"YulExpressionStatement","src":"2138:33:28"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:28","nodeType":"YulTypedName","src":"2068:6:28","type":""},{"name":"end","nativeSrc":"2076:3:28","nodeType":"YulTypedName","src":"2076:3:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:28","nodeType":"YulTypedName","src":"2084:5:28","type":""}],"src":"2038:139:28"},{"body":{"nativeSrc":"2228:32:28","nodeType":"YulBlock","src":"2228:32:28","statements":[{"nativeSrc":"2238:16:28","nodeType":"YulAssignment","src":"2238:16:28","value":{"name":"value","nativeSrc":"2249:5:28","nodeType":"YulIdentifier","src":"2249:5:28"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:28","nodeType":"YulIdentifier","src":"2238:7:28"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:28","nodeType":"YulTypedName","src":"2210:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:28","nodeType":"YulTypedName","src":"2220:7:28","type":""}],"src":"2183:77:28"},{"body":{"nativeSrc":"2309:79:28","nodeType":"YulBlock","src":"2309:79:28","statements":[{"body":{"nativeSrc":"2366:16:28","nodeType":"YulBlock","src":"2366:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:28","nodeType":"YulLiteral","src":"2375:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:28","nodeType":"YulLiteral","src":"2378:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:28","nodeType":"YulIdentifier","src":"2368:6:28"},"nativeSrc":"2368:12:28","nodeType":"YulFunctionCall","src":"2368:12:28"},"nativeSrc":"2368:12:28","nodeType":"YulExpressionStatement","src":"2368:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:28","nodeType":"YulIdentifier","src":"2332:5:28"},{"arguments":[{"name":"value","nativeSrc":"2357:5:28","nodeType":"YulIdentifier","src":"2357:5:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:28","nodeType":"YulIdentifier","src":"2339:17:28"},"nativeSrc":"2339:24:28","nodeType":"YulFunctionCall","src":"2339:24:28"}],"functionName":{"name":"eq","nativeSrc":"2329:2:28","nodeType":"YulIdentifier","src":"2329:2:28"},"nativeSrc":"2329:35:28","nodeType":"YulFunctionCall","src":"2329:35:28"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:28","nodeType":"YulIdentifier","src":"2322:6:28"},"nativeSrc":"2322:43:28","nodeType":"YulFunctionCall","src":"2322:43:28"},"nativeSrc":"2319:63:28","nodeType":"YulIf","src":"2319:63:28"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:28","nodeType":"YulTypedName","src":"2302:5:28","type":""}],"src":"2266:122:28"},{"body":{"nativeSrc":"2446:87:28","nodeType":"YulBlock","src":"2446:87:28","statements":[{"nativeSrc":"2456:29:28","nodeType":"YulAssignment","src":"2456:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:28","nodeType":"YulIdentifier","src":"2478:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:28","nodeType":"YulIdentifier","src":"2465:12:28"},"nativeSrc":"2465:20:28","nodeType":"YulFunctionCall","src":"2465:20:28"},"variableNames":[{"name":"value","nativeSrc":"2456:5:28","nodeType":"YulIdentifier","src":"2456:5:28"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:28","nodeType":"YulIdentifier","src":"2521:5:28"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:28","nodeType":"YulIdentifier","src":"2494:26:28"},"nativeSrc":"2494:33:28","nodeType":"YulFunctionCall","src":"2494:33:28"},"nativeSrc":"2494:33:28","nodeType":"YulExpressionStatement","src":"2494:33:28"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:28","nodeType":"YulTypedName","src":"2424:6:28","type":""},{"name":"end","nativeSrc":"2432:3:28","nodeType":"YulTypedName","src":"2432:3:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:28","nodeType":"YulTypedName","src":"2440:5:28","type":""}],"src":"2394:139:28"},{"body":{"nativeSrc":"2622:391:28","nodeType":"YulBlock","src":"2622:391:28","statements":[{"body":{"nativeSrc":"2668:83:28","nodeType":"YulBlock","src":"2668:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:28","nodeType":"YulIdentifier","src":"2670:77:28"},"nativeSrc":"2670:79:28","nodeType":"YulFunctionCall","src":"2670:79:28"},"nativeSrc":"2670:79:28","nodeType":"YulExpressionStatement","src":"2670:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:28","nodeType":"YulIdentifier","src":"2643:7:28"},{"name":"headStart","nativeSrc":"2652:9:28","nodeType":"YulIdentifier","src":"2652:9:28"}],"functionName":{"name":"sub","nativeSrc":"2639:3:28","nodeType":"YulIdentifier","src":"2639:3:28"},"nativeSrc":"2639:23:28","nodeType":"YulFunctionCall","src":"2639:23:28"},{"kind":"number","nativeSrc":"2664:2:28","nodeType":"YulLiteral","src":"2664:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:28","nodeType":"YulIdentifier","src":"2635:3:28"},"nativeSrc":"2635:32:28","nodeType":"YulFunctionCall","src":"2635:32:28"},"nativeSrc":"2632:119:28","nodeType":"YulIf","src":"2632:119:28"},{"nativeSrc":"2761:117:28","nodeType":"YulBlock","src":"2761:117:28","statements":[{"nativeSrc":"2776:15:28","nodeType":"YulVariableDeclaration","src":"2776:15:28","value":{"kind":"number","nativeSrc":"2790:1:28","nodeType":"YulLiteral","src":"2790:1:28","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:28","nodeType":"YulTypedName","src":"2780:6:28","type":""}]},{"nativeSrc":"2805:63:28","nodeType":"YulAssignment","src":"2805:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:28","nodeType":"YulIdentifier","src":"2840:9:28"},{"name":"offset","nativeSrc":"2851:6:28","nodeType":"YulIdentifier","src":"2851:6:28"}],"functionName":{"name":"add","nativeSrc":"2836:3:28","nodeType":"YulIdentifier","src":"2836:3:28"},"nativeSrc":"2836:22:28","nodeType":"YulFunctionCall","src":"2836:22:28"},{"name":"dataEnd","nativeSrc":"2860:7:28","nodeType":"YulIdentifier","src":"2860:7:28"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:28","nodeType":"YulIdentifier","src":"2815:20:28"},"nativeSrc":"2815:53:28","nodeType":"YulFunctionCall","src":"2815:53:28"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:28","nodeType":"YulIdentifier","src":"2805:6:28"}]}]},{"nativeSrc":"2888:118:28","nodeType":"YulBlock","src":"2888:118:28","statements":[{"nativeSrc":"2903:16:28","nodeType":"YulVariableDeclaration","src":"2903:16:28","value":{"kind":"number","nativeSrc":"2917:2:28","nodeType":"YulLiteral","src":"2917:2:28","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:28","nodeType":"YulTypedName","src":"2907:6:28","type":""}]},{"nativeSrc":"2933:63:28","nodeType":"YulAssignment","src":"2933:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:28","nodeType":"YulIdentifier","src":"2968:9:28"},{"name":"offset","nativeSrc":"2979:6:28","nodeType":"YulIdentifier","src":"2979:6:28"}],"functionName":{"name":"add","nativeSrc":"2964:3:28","nodeType":"YulIdentifier","src":"2964:3:28"},"nativeSrc":"2964:22:28","nodeType":"YulFunctionCall","src":"2964:22:28"},{"name":"dataEnd","nativeSrc":"2988:7:28","nodeType":"YulIdentifier","src":"2988:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:28","nodeType":"YulIdentifier","src":"2943:20:28"},"nativeSrc":"2943:53:28","nodeType":"YulFunctionCall","src":"2943:53:28"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:28","nodeType":"YulIdentifier","src":"2933:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:28","nodeType":"YulTypedName","src":"2584:9:28","type":""},{"name":"dataEnd","nativeSrc":"2595:7:28","nodeType":"YulTypedName","src":"2595:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:28","nodeType":"YulTypedName","src":"2607:6:28","type":""},{"name":"value1","nativeSrc":"2615:6:28","nodeType":"YulTypedName","src":"2615:6:28","type":""}],"src":"2539:474:28"},{"body":{"nativeSrc":"3061:48:28","nodeType":"YulBlock","src":"3061:48:28","statements":[{"nativeSrc":"3071:32:28","nodeType":"YulAssignment","src":"3071:32:28","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:28","nodeType":"YulIdentifier","src":"3096:5:28"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:28","nodeType":"YulIdentifier","src":"3089:6:28"},"nativeSrc":"3089:13:28","nodeType":"YulFunctionCall","src":"3089:13:28"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:28","nodeType":"YulIdentifier","src":"3082:6:28"},"nativeSrc":"3082:21:28","nodeType":"YulFunctionCall","src":"3082:21:28"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:28","nodeType":"YulIdentifier","src":"3071:7:28"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:28","nodeType":"YulTypedName","src":"3043:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:28","nodeType":"YulTypedName","src":"3053:7:28","type":""}],"src":"3019:90:28"},{"body":{"nativeSrc":"3174:50:28","nodeType":"YulBlock","src":"3174:50:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:28","nodeType":"YulIdentifier","src":"3191:3:28"},{"arguments":[{"name":"value","nativeSrc":"3211:5:28","nodeType":"YulIdentifier","src":"3211:5:28"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:28","nodeType":"YulIdentifier","src":"3196:14:28"},"nativeSrc":"3196:21:28","nodeType":"YulFunctionCall","src":"3196:21:28"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:28","nodeType":"YulIdentifier","src":"3184:6:28"},"nativeSrc":"3184:34:28","nodeType":"YulFunctionCall","src":"3184:34:28"},"nativeSrc":"3184:34:28","nodeType":"YulExpressionStatement","src":"3184:34:28"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:28","nodeType":"YulTypedName","src":"3162:5:28","type":""},{"name":"pos","nativeSrc":"3169:3:28","nodeType":"YulTypedName","src":"3169:3:28","type":""}],"src":"3115:109:28"},{"body":{"nativeSrc":"3322:118:28","nodeType":"YulBlock","src":"3322:118:28","statements":[{"nativeSrc":"3332:26:28","nodeType":"YulAssignment","src":"3332:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:28","nodeType":"YulIdentifier","src":"3344:9:28"},{"kind":"number","nativeSrc":"3355:2:28","nodeType":"YulLiteral","src":"3355:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:28","nodeType":"YulIdentifier","src":"3340:3:28"},"nativeSrc":"3340:18:28","nodeType":"YulFunctionCall","src":"3340:18:28"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:28","nodeType":"YulIdentifier","src":"3332:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:28","nodeType":"YulIdentifier","src":"3406:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:28","nodeType":"YulIdentifier","src":"3419:9:28"},{"kind":"number","nativeSrc":"3430:1:28","nodeType":"YulLiteral","src":"3430:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:28","nodeType":"YulIdentifier","src":"3415:3:28"},"nativeSrc":"3415:17:28","nodeType":"YulFunctionCall","src":"3415:17:28"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:28","nodeType":"YulIdentifier","src":"3368:37:28"},"nativeSrc":"3368:65:28","nodeType":"YulFunctionCall","src":"3368:65:28"},"nativeSrc":"3368:65:28","nodeType":"YulExpressionStatement","src":"3368:65:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:28","nodeType":"YulTypedName","src":"3294:9:28","type":""},{"name":"value0","nativeSrc":"3306:6:28","nodeType":"YulTypedName","src":"3306:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:28","nodeType":"YulTypedName","src":"3317:4:28","type":""}],"src":"3230:210:28"},{"body":{"nativeSrc":"3511:53:28","nodeType":"YulBlock","src":"3511:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:28","nodeType":"YulIdentifier","src":"3528:3:28"},{"arguments":[{"name":"value","nativeSrc":"3551:5:28","nodeType":"YulIdentifier","src":"3551:5:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:28","nodeType":"YulIdentifier","src":"3533:17:28"},"nativeSrc":"3533:24:28","nodeType":"YulFunctionCall","src":"3533:24:28"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:28","nodeType":"YulIdentifier","src":"3521:6:28"},"nativeSrc":"3521:37:28","nodeType":"YulFunctionCall","src":"3521:37:28"},"nativeSrc":"3521:37:28","nodeType":"YulExpressionStatement","src":"3521:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:28","nodeType":"YulTypedName","src":"3499:5:28","type":""},{"name":"pos","nativeSrc":"3506:3:28","nodeType":"YulTypedName","src":"3506:3:28","type":""}],"src":"3446:118:28"},{"body":{"nativeSrc":"3668:124:28","nodeType":"YulBlock","src":"3668:124:28","statements":[{"nativeSrc":"3678:26:28","nodeType":"YulAssignment","src":"3678:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:28","nodeType":"YulIdentifier","src":"3690:9:28"},{"kind":"number","nativeSrc":"3701:2:28","nodeType":"YulLiteral","src":"3701:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:28","nodeType":"YulIdentifier","src":"3686:3:28"},"nativeSrc":"3686:18:28","nodeType":"YulFunctionCall","src":"3686:18:28"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:28","nodeType":"YulIdentifier","src":"3678:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:28","nodeType":"YulIdentifier","src":"3758:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:28","nodeType":"YulIdentifier","src":"3771:9:28"},{"kind":"number","nativeSrc":"3782:1:28","nodeType":"YulLiteral","src":"3782:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:28","nodeType":"YulIdentifier","src":"3767:3:28"},"nativeSrc":"3767:17:28","nodeType":"YulFunctionCall","src":"3767:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:28","nodeType":"YulIdentifier","src":"3714:43:28"},"nativeSrc":"3714:71:28","nodeType":"YulFunctionCall","src":"3714:71:28"},"nativeSrc":"3714:71:28","nodeType":"YulExpressionStatement","src":"3714:71:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:28","nodeType":"YulTypedName","src":"3640:9:28","type":""},{"name":"value0","nativeSrc":"3652:6:28","nodeType":"YulTypedName","src":"3652:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:28","nodeType":"YulTypedName","src":"3663:4:28","type":""}],"src":"3570:222:28"},{"body":{"nativeSrc":"3898:519:28","nodeType":"YulBlock","src":"3898:519:28","statements":[{"body":{"nativeSrc":"3944:83:28","nodeType":"YulBlock","src":"3944:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:28","nodeType":"YulIdentifier","src":"3946:77:28"},"nativeSrc":"3946:79:28","nodeType":"YulFunctionCall","src":"3946:79:28"},"nativeSrc":"3946:79:28","nodeType":"YulExpressionStatement","src":"3946:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:28","nodeType":"YulIdentifier","src":"3919:7:28"},{"name":"headStart","nativeSrc":"3928:9:28","nodeType":"YulIdentifier","src":"3928:9:28"}],"functionName":{"name":"sub","nativeSrc":"3915:3:28","nodeType":"YulIdentifier","src":"3915:3:28"},"nativeSrc":"3915:23:28","nodeType":"YulFunctionCall","src":"3915:23:28"},{"kind":"number","nativeSrc":"3940:2:28","nodeType":"YulLiteral","src":"3940:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:28","nodeType":"YulIdentifier","src":"3911:3:28"},"nativeSrc":"3911:32:28","nodeType":"YulFunctionCall","src":"3911:32:28"},"nativeSrc":"3908:119:28","nodeType":"YulIf","src":"3908:119:28"},{"nativeSrc":"4037:117:28","nodeType":"YulBlock","src":"4037:117:28","statements":[{"nativeSrc":"4052:15:28","nodeType":"YulVariableDeclaration","src":"4052:15:28","value":{"kind":"number","nativeSrc":"4066:1:28","nodeType":"YulLiteral","src":"4066:1:28","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:28","nodeType":"YulTypedName","src":"4056:6:28","type":""}]},{"nativeSrc":"4081:63:28","nodeType":"YulAssignment","src":"4081:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:28","nodeType":"YulIdentifier","src":"4116:9:28"},{"name":"offset","nativeSrc":"4127:6:28","nodeType":"YulIdentifier","src":"4127:6:28"}],"functionName":{"name":"add","nativeSrc":"4112:3:28","nodeType":"YulIdentifier","src":"4112:3:28"},"nativeSrc":"4112:22:28","nodeType":"YulFunctionCall","src":"4112:22:28"},{"name":"dataEnd","nativeSrc":"4136:7:28","nodeType":"YulIdentifier","src":"4136:7:28"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:28","nodeType":"YulIdentifier","src":"4091:20:28"},"nativeSrc":"4091:53:28","nodeType":"YulFunctionCall","src":"4091:53:28"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:28","nodeType":"YulIdentifier","src":"4081:6:28"}]}]},{"nativeSrc":"4164:118:28","nodeType":"YulBlock","src":"4164:118:28","statements":[{"nativeSrc":"4179:16:28","nodeType":"YulVariableDeclaration","src":"4179:16:28","value":{"kind":"number","nativeSrc":"4193:2:28","nodeType":"YulLiteral","src":"4193:2:28","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:28","nodeType":"YulTypedName","src":"4183:6:28","type":""}]},{"nativeSrc":"4209:63:28","nodeType":"YulAssignment","src":"4209:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:28","nodeType":"YulIdentifier","src":"4244:9:28"},{"name":"offset","nativeSrc":"4255:6:28","nodeType":"YulIdentifier","src":"4255:6:28"}],"functionName":{"name":"add","nativeSrc":"4240:3:28","nodeType":"YulIdentifier","src":"4240:3:28"},"nativeSrc":"4240:22:28","nodeType":"YulFunctionCall","src":"4240:22:28"},{"name":"dataEnd","nativeSrc":"4264:7:28","nodeType":"YulIdentifier","src":"4264:7:28"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:28","nodeType":"YulIdentifier","src":"4219:20:28"},"nativeSrc":"4219:53:28","nodeType":"YulFunctionCall","src":"4219:53:28"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:28","nodeType":"YulIdentifier","src":"4209:6:28"}]}]},{"nativeSrc":"4292:118:28","nodeType":"YulBlock","src":"4292:118:28","statements":[{"nativeSrc":"4307:16:28","nodeType":"YulVariableDeclaration","src":"4307:16:28","value":{"kind":"number","nativeSrc":"4321:2:28","nodeType":"YulLiteral","src":"4321:2:28","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:28","nodeType":"YulTypedName","src":"4311:6:28","type":""}]},{"nativeSrc":"4337:63:28","nodeType":"YulAssignment","src":"4337:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:28","nodeType":"YulIdentifier","src":"4372:9:28"},{"name":"offset","nativeSrc":"4383:6:28","nodeType":"YulIdentifier","src":"4383:6:28"}],"functionName":{"name":"add","nativeSrc":"4368:3:28","nodeType":"YulIdentifier","src":"4368:3:28"},"nativeSrc":"4368:22:28","nodeType":"YulFunctionCall","src":"4368:22:28"},{"name":"dataEnd","nativeSrc":"4392:7:28","nodeType":"YulIdentifier","src":"4392:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:28","nodeType":"YulIdentifier","src":"4347:20:28"},"nativeSrc":"4347:53:28","nodeType":"YulFunctionCall","src":"4347:53:28"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:28","nodeType":"YulIdentifier","src":"4337:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:28","nodeType":"YulTypedName","src":"3852:9:28","type":""},{"name":"dataEnd","nativeSrc":"3863:7:28","nodeType":"YulTypedName","src":"3863:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:28","nodeType":"YulTypedName","src":"3875:6:28","type":""},{"name":"value1","nativeSrc":"3883:6:28","nodeType":"YulTypedName","src":"3883:6:28","type":""},{"name":"value2","nativeSrc":"3891:6:28","nodeType":"YulTypedName","src":"3891:6:28","type":""}],"src":"3798:619:28"},{"body":{"nativeSrc":"4466:43:28","nodeType":"YulBlock","src":"4466:43:28","statements":[{"nativeSrc":"4476:27:28","nodeType":"YulAssignment","src":"4476:27:28","value":{"arguments":[{"name":"value","nativeSrc":"4491:5:28","nodeType":"YulIdentifier","src":"4491:5:28"},{"kind":"number","nativeSrc":"4498:4:28","nodeType":"YulLiteral","src":"4498:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4487:3:28","nodeType":"YulIdentifier","src":"4487:3:28"},"nativeSrc":"4487:16:28","nodeType":"YulFunctionCall","src":"4487:16:28"},"variableNames":[{"name":"cleaned","nativeSrc":"4476:7:28","nodeType":"YulIdentifier","src":"4476:7:28"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4423:86:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4448:5:28","nodeType":"YulTypedName","src":"4448:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4458:7:28","nodeType":"YulTypedName","src":"4458:7:28","type":""}],"src":"4423:86:28"},{"body":{"nativeSrc":"4576:51:28","nodeType":"YulBlock","src":"4576:51:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4593:3:28","nodeType":"YulIdentifier","src":"4593:3:28"},{"arguments":[{"name":"value","nativeSrc":"4614:5:28","nodeType":"YulIdentifier","src":"4614:5:28"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4598:15:28","nodeType":"YulIdentifier","src":"4598:15:28"},"nativeSrc":"4598:22:28","nodeType":"YulFunctionCall","src":"4598:22:28"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:28","nodeType":"YulIdentifier","src":"4586:6:28"},"nativeSrc":"4586:35:28","nodeType":"YulFunctionCall","src":"4586:35:28"},"nativeSrc":"4586:35:28","nodeType":"YulExpressionStatement","src":"4586:35:28"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4515:112:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:28","nodeType":"YulTypedName","src":"4564:5:28","type":""},{"name":"pos","nativeSrc":"4571:3:28","nodeType":"YulTypedName","src":"4571:3:28","type":""}],"src":"4515:112:28"},{"body":{"nativeSrc":"4727:120:28","nodeType":"YulBlock","src":"4727:120:28","statements":[{"nativeSrc":"4737:26:28","nodeType":"YulAssignment","src":"4737:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"4749:9:28","nodeType":"YulIdentifier","src":"4749:9:28"},{"kind":"number","nativeSrc":"4760:2:28","nodeType":"YulLiteral","src":"4760:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4745:3:28","nodeType":"YulIdentifier","src":"4745:3:28"},"nativeSrc":"4745:18:28","nodeType":"YulFunctionCall","src":"4745:18:28"},"variableNames":[{"name":"tail","nativeSrc":"4737:4:28","nodeType":"YulIdentifier","src":"4737:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4813:6:28","nodeType":"YulIdentifier","src":"4813:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"4826:9:28","nodeType":"YulIdentifier","src":"4826:9:28"},{"kind":"number","nativeSrc":"4837:1:28","nodeType":"YulLiteral","src":"4837:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4822:3:28","nodeType":"YulIdentifier","src":"4822:3:28"},"nativeSrc":"4822:17:28","nodeType":"YulFunctionCall","src":"4822:17:28"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4773:39:28","nodeType":"YulIdentifier","src":"4773:39:28"},"nativeSrc":"4773:67:28","nodeType":"YulFunctionCall","src":"4773:67:28"},"nativeSrc":"4773:67:28","nodeType":"YulExpressionStatement","src":"4773:67:28"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4633:214:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:28","nodeType":"YulTypedName","src":"4699:9:28","type":""},{"name":"value0","nativeSrc":"4711:6:28","nodeType":"YulTypedName","src":"4711:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4722:4:28","nodeType":"YulTypedName","src":"4722:4:28","type":""}],"src":"4633:214:28"},{"body":{"nativeSrc":"4898:32:28","nodeType":"YulBlock","src":"4898:32:28","statements":[{"nativeSrc":"4908:16:28","nodeType":"YulAssignment","src":"4908:16:28","value":{"name":"value","nativeSrc":"4919:5:28","nodeType":"YulIdentifier","src":"4919:5:28"},"variableNames":[{"name":"cleaned","nativeSrc":"4908:7:28","nodeType":"YulIdentifier","src":"4908:7:28"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4853:77:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4880:5:28","nodeType":"YulTypedName","src":"4880:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4890:7:28","nodeType":"YulTypedName","src":"4890:7:28","type":""}],"src":"4853:77:28"},{"body":{"nativeSrc":"5001:53:28","nodeType":"YulBlock","src":"5001:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5018:3:28","nodeType":"YulIdentifier","src":"5018:3:28"},{"arguments":[{"name":"value","nativeSrc":"5041:5:28","nodeType":"YulIdentifier","src":"5041:5:28"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5023:17:28","nodeType":"YulIdentifier","src":"5023:17:28"},"nativeSrc":"5023:24:28","nodeType":"YulFunctionCall","src":"5023:24:28"}],"functionName":{"name":"mstore","nativeSrc":"5011:6:28","nodeType":"YulIdentifier","src":"5011:6:28"},"nativeSrc":"5011:37:28","nodeType":"YulFunctionCall","src":"5011:37:28"},"nativeSrc":"5011:37:28","nodeType":"YulExpressionStatement","src":"5011:37:28"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4936:118:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4989:5:28","nodeType":"YulTypedName","src":"4989:5:28","type":""},{"name":"pos","nativeSrc":"4996:3:28","nodeType":"YulTypedName","src":"4996:3:28","type":""}],"src":"4936:118:28"},{"body":{"nativeSrc":"5158:124:28","nodeType":"YulBlock","src":"5158:124:28","statements":[{"nativeSrc":"5168:26:28","nodeType":"YulAssignment","src":"5168:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"5180:9:28","nodeType":"YulIdentifier","src":"5180:9:28"},{"kind":"number","nativeSrc":"5191:2:28","nodeType":"YulLiteral","src":"5191:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5176:3:28","nodeType":"YulIdentifier","src":"5176:3:28"},"nativeSrc":"5176:18:28","nodeType":"YulFunctionCall","src":"5176:18:28"},"variableNames":[{"name":"tail","nativeSrc":"5168:4:28","nodeType":"YulIdentifier","src":"5168:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5248:6:28","nodeType":"YulIdentifier","src":"5248:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"5261:9:28","nodeType":"YulIdentifier","src":"5261:9:28"},{"kind":"number","nativeSrc":"5272:1:28","nodeType":"YulLiteral","src":"5272:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5257:3:28","nodeType":"YulIdentifier","src":"5257:3:28"},"nativeSrc":"5257:17:28","nodeType":"YulFunctionCall","src":"5257:17:28"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5204:43:28","nodeType":"YulIdentifier","src":"5204:43:28"},"nativeSrc":"5204:71:28","nodeType":"YulFunctionCall","src":"5204:71:28"},"nativeSrc":"5204:71:28","nodeType":"YulExpressionStatement","src":"5204:71:28"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5060:222:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5130:9:28","nodeType":"YulTypedName","src":"5130:9:28","type":""},{"name":"value0","nativeSrc":"5142:6:28","nodeType":"YulTypedName","src":"5142:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5153:4:28","nodeType":"YulTypedName","src":"5153:4:28","type":""}],"src":"5060:222:28"},{"body":{"nativeSrc":"5354:263:28","nodeType":"YulBlock","src":"5354:263:28","statements":[{"body":{"nativeSrc":"5400:83:28","nodeType":"YulBlock","src":"5400:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5402:77:28","nodeType":"YulIdentifier","src":"5402:77:28"},"nativeSrc":"5402:79:28","nodeType":"YulFunctionCall","src":"5402:79:28"},"nativeSrc":"5402:79:28","nodeType":"YulExpressionStatement","src":"5402:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5375:7:28","nodeType":"YulIdentifier","src":"5375:7:28"},{"name":"headStart","nativeSrc":"5384:9:28","nodeType":"YulIdentifier","src":"5384:9:28"}],"functionName":{"name":"sub","nativeSrc":"5371:3:28","nodeType":"YulIdentifier","src":"5371:3:28"},"nativeSrc":"5371:23:28","nodeType":"YulFunctionCall","src":"5371:23:28"},{"kind":"number","nativeSrc":"5396:2:28","nodeType":"YulLiteral","src":"5396:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5367:3:28","nodeType":"YulIdentifier","src":"5367:3:28"},"nativeSrc":"5367:32:28","nodeType":"YulFunctionCall","src":"5367:32:28"},"nativeSrc":"5364:119:28","nodeType":"YulIf","src":"5364:119:28"},{"nativeSrc":"5493:117:28","nodeType":"YulBlock","src":"5493:117:28","statements":[{"nativeSrc":"5508:15:28","nodeType":"YulVariableDeclaration","src":"5508:15:28","value":{"kind":"number","nativeSrc":"5522:1:28","nodeType":"YulLiteral","src":"5522:1:28","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5512:6:28","nodeType":"YulTypedName","src":"5512:6:28","type":""}]},{"nativeSrc":"5537:63:28","nodeType":"YulAssignment","src":"5537:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5572:9:28","nodeType":"YulIdentifier","src":"5572:9:28"},{"name":"offset","nativeSrc":"5583:6:28","nodeType":"YulIdentifier","src":"5583:6:28"}],"functionName":{"name":"add","nativeSrc":"5568:3:28","nodeType":"YulIdentifier","src":"5568:3:28"},"nativeSrc":"5568:22:28","nodeType":"YulFunctionCall","src":"5568:22:28"},{"name":"dataEnd","nativeSrc":"5592:7:28","nodeType":"YulIdentifier","src":"5592:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5547:20:28","nodeType":"YulIdentifier","src":"5547:20:28"},"nativeSrc":"5547:53:28","nodeType":"YulFunctionCall","src":"5547:53:28"},"variableNames":[{"name":"value0","nativeSrc":"5537:6:28","nodeType":"YulIdentifier","src":"5537:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5288:329:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5324:9:28","nodeType":"YulTypedName","src":"5324:9:28","type":""},{"name":"dataEnd","nativeSrc":"5335:7:28","nodeType":"YulTypedName","src":"5335:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5347:6:28","nodeType":"YulTypedName","src":"5347:6:28","type":""}],"src":"5288:329:28"},{"body":{"nativeSrc":"5689:263:28","nodeType":"YulBlock","src":"5689:263:28","statements":[{"body":{"nativeSrc":"5735:83:28","nodeType":"YulBlock","src":"5735:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5737:77:28","nodeType":"YulIdentifier","src":"5737:77:28"},"nativeSrc":"5737:79:28","nodeType":"YulFunctionCall","src":"5737:79:28"},"nativeSrc":"5737:79:28","nodeType":"YulExpressionStatement","src":"5737:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5710:7:28","nodeType":"YulIdentifier","src":"5710:7:28"},{"name":"headStart","nativeSrc":"5719:9:28","nodeType":"YulIdentifier","src":"5719:9:28"}],"functionName":{"name":"sub","nativeSrc":"5706:3:28","nodeType":"YulIdentifier","src":"5706:3:28"},"nativeSrc":"5706:23:28","nodeType":"YulFunctionCall","src":"5706:23:28"},{"kind":"number","nativeSrc":"5731:2:28","nodeType":"YulLiteral","src":"5731:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5702:3:28","nodeType":"YulIdentifier","src":"5702:3:28"},"nativeSrc":"5702:32:28","nodeType":"YulFunctionCall","src":"5702:32:28"},"nativeSrc":"5699:119:28","nodeType":"YulIf","src":"5699:119:28"},{"nativeSrc":"5828:117:28","nodeType":"YulBlock","src":"5828:117:28","statements":[{"nativeSrc":"5843:15:28","nodeType":"YulVariableDeclaration","src":"5843:15:28","value":{"kind":"number","nativeSrc":"5857:1:28","nodeType":"YulLiteral","src":"5857:1:28","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5847:6:28","nodeType":"YulTypedName","src":"5847:6:28","type":""}]},{"nativeSrc":"5872:63:28","nodeType":"YulAssignment","src":"5872:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5907:9:28","nodeType":"YulIdentifier","src":"5907:9:28"},{"name":"offset","nativeSrc":"5918:6:28","nodeType":"YulIdentifier","src":"5918:6:28"}],"functionName":{"name":"add","nativeSrc":"5903:3:28","nodeType":"YulIdentifier","src":"5903:3:28"},"nativeSrc":"5903:22:28","nodeType":"YulFunctionCall","src":"5903:22:28"},{"name":"dataEnd","nativeSrc":"5927:7:28","nodeType":"YulIdentifier","src":"5927:7:28"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5882:20:28","nodeType":"YulIdentifier","src":"5882:20:28"},"nativeSrc":"5882:53:28","nodeType":"YulFunctionCall","src":"5882:53:28"},"variableNames":[{"name":"value0","nativeSrc":"5872:6:28","nodeType":"YulIdentifier","src":"5872:6:28"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5623:329:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5659:9:28","nodeType":"YulTypedName","src":"5659:9:28","type":""},{"name":"dataEnd","nativeSrc":"5670:7:28","nodeType":"YulTypedName","src":"5670:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5682:6:28","nodeType":"YulTypedName","src":"5682:6:28","type":""}],"src":"5623:329:28"},{"body":{"nativeSrc":"6023:53:28","nodeType":"YulBlock","src":"6023:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6040:3:28","nodeType":"YulIdentifier","src":"6040:3:28"},{"arguments":[{"name":"value","nativeSrc":"6063:5:28","nodeType":"YulIdentifier","src":"6063:5:28"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6045:17:28","nodeType":"YulIdentifier","src":"6045:17:28"},"nativeSrc":"6045:24:28","nodeType":"YulFunctionCall","src":"6045:24:28"}],"functionName":{"name":"mstore","nativeSrc":"6033:6:28","nodeType":"YulIdentifier","src":"6033:6:28"},"nativeSrc":"6033:37:28","nodeType":"YulFunctionCall","src":"6033:37:28"},"nativeSrc":"6033:37:28","nodeType":"YulExpressionStatement","src":"6033:37:28"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5958:118:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6011:5:28","nodeType":"YulTypedName","src":"6011:5:28","type":""},{"name":"pos","nativeSrc":"6018:3:28","nodeType":"YulTypedName","src":"6018:3:28","type":""}],"src":"5958:118:28"},{"body":{"nativeSrc":"6180:124:28","nodeType":"YulBlock","src":"6180:124:28","statements":[{"nativeSrc":"6190:26:28","nodeType":"YulAssignment","src":"6190:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6202:9:28","nodeType":"YulIdentifier","src":"6202:9:28"},{"kind":"number","nativeSrc":"6213:2:28","nodeType":"YulLiteral","src":"6213:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6198:3:28","nodeType":"YulIdentifier","src":"6198:3:28"},"nativeSrc":"6198:18:28","nodeType":"YulFunctionCall","src":"6198:18:28"},"variableNames":[{"name":"tail","nativeSrc":"6190:4:28","nodeType":"YulIdentifier","src":"6190:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6270:6:28","nodeType":"YulIdentifier","src":"6270:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"6283:9:28","nodeType":"YulIdentifier","src":"6283:9:28"},{"kind":"number","nativeSrc":"6294:1:28","nodeType":"YulLiteral","src":"6294:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6279:3:28","nodeType":"YulIdentifier","src":"6279:3:28"},"nativeSrc":"6279:17:28","nodeType":"YulFunctionCall","src":"6279:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6226:43:28","nodeType":"YulIdentifier","src":"6226:43:28"},"nativeSrc":"6226:71:28","nodeType":"YulFunctionCall","src":"6226:71:28"},"nativeSrc":"6226:71:28","nodeType":"YulExpressionStatement","src":"6226:71:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6082:222:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6152:9:28","nodeType":"YulTypedName","src":"6152:9:28","type":""},{"name":"value0","nativeSrc":"6164:6:28","nodeType":"YulTypedName","src":"6164:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6175:4:28","nodeType":"YulTypedName","src":"6175:4:28","type":""}],"src":"6082:222:28"},{"body":{"nativeSrc":"6354:49:28","nodeType":"YulBlock","src":"6354:49:28","statements":[{"nativeSrc":"6364:33:28","nodeType":"YulAssignment","src":"6364:33:28","value":{"arguments":[{"name":"value","nativeSrc":"6379:5:28","nodeType":"YulIdentifier","src":"6379:5:28"},{"kind":"number","nativeSrc":"6386:10:28","nodeType":"YulLiteral","src":"6386:10:28","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"6375:3:28","nodeType":"YulIdentifier","src":"6375:3:28"},"nativeSrc":"6375:22:28","nodeType":"YulFunctionCall","src":"6375:22:28"},"variableNames":[{"name":"cleaned","nativeSrc":"6364:7:28","nodeType":"YulIdentifier","src":"6364:7:28"}]}]},"name":"cleanup_t_uint32","nativeSrc":"6310:93:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6336:5:28","nodeType":"YulTypedName","src":"6336:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6346:7:28","nodeType":"YulTypedName","src":"6346:7:28","type":""}],"src":"6310:93:28"},{"body":{"nativeSrc":"6472:52:28","nodeType":"YulBlock","src":"6472:52:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6489:3:28","nodeType":"YulIdentifier","src":"6489:3:28"},{"arguments":[{"name":"value","nativeSrc":"6511:5:28","nodeType":"YulIdentifier","src":"6511:5:28"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"6494:16:28","nodeType":"YulIdentifier","src":"6494:16:28"},"nativeSrc":"6494:23:28","nodeType":"YulFunctionCall","src":"6494:23:28"}],"functionName":{"name":"mstore","nativeSrc":"6482:6:28","nodeType":"YulIdentifier","src":"6482:6:28"},"nativeSrc":"6482:36:28","nodeType":"YulFunctionCall","src":"6482:36:28"},"nativeSrc":"6482:36:28","nodeType":"YulExpressionStatement","src":"6482:36:28"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"6409:115:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6460:5:28","nodeType":"YulTypedName","src":"6460:5:28","type":""},{"name":"pos","nativeSrc":"6467:3:28","nodeType":"YulTypedName","src":"6467:3:28","type":""}],"src":"6409:115:28"},{"body":{"nativeSrc":"6626:122:28","nodeType":"YulBlock","src":"6626:122:28","statements":[{"nativeSrc":"6636:26:28","nodeType":"YulAssignment","src":"6636:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6648:9:28","nodeType":"YulIdentifier","src":"6648:9:28"},{"kind":"number","nativeSrc":"6659:2:28","nodeType":"YulLiteral","src":"6659:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6644:3:28","nodeType":"YulIdentifier","src":"6644:3:28"},"nativeSrc":"6644:18:28","nodeType":"YulFunctionCall","src":"6644:18:28"},"variableNames":[{"name":"tail","nativeSrc":"6636:4:28","nodeType":"YulIdentifier","src":"6636:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6714:6:28","nodeType":"YulIdentifier","src":"6714:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"6727:9:28","nodeType":"YulIdentifier","src":"6727:9:28"},{"kind":"number","nativeSrc":"6738:1:28","nodeType":"YulLiteral","src":"6738:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6723:3:28","nodeType":"YulIdentifier","src":"6723:3:28"},"nativeSrc":"6723:17:28","nodeType":"YulFunctionCall","src":"6723:17:28"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"6672:41:28","nodeType":"YulIdentifier","src":"6672:41:28"},"nativeSrc":"6672:69:28","nodeType":"YulFunctionCall","src":"6672:69:28"},"nativeSrc":"6672:69:28","nodeType":"YulExpressionStatement","src":"6672:69:28"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nativeSrc":"6530:218:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6598:9:28","nodeType":"YulTypedName","src":"6598:9:28","type":""},{"name":"value0","nativeSrc":"6610:6:28","nodeType":"YulTypedName","src":"6610:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6621:4:28","nodeType":"YulTypedName","src":"6621:4:28","type":""}],"src":"6530:218:28"},{"body":{"nativeSrc":"6798:105:28","nodeType":"YulBlock","src":"6798:105:28","statements":[{"nativeSrc":"6808:89:28","nodeType":"YulAssignment","src":"6808:89:28","value":{"arguments":[{"name":"value","nativeSrc":"6823:5:28","nodeType":"YulIdentifier","src":"6823:5:28"},{"kind":"number","nativeSrc":"6830:66:28","nodeType":"YulLiteral","src":"6830:66:28","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"6819:3:28","nodeType":"YulIdentifier","src":"6819:3:28"},"nativeSrc":"6819:78:28","nodeType":"YulFunctionCall","src":"6819:78:28"},"variableNames":[{"name":"cleaned","nativeSrc":"6808:7:28","nodeType":"YulIdentifier","src":"6808:7:28"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"6754:149:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6780:5:28","nodeType":"YulTypedName","src":"6780:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6790:7:28","nodeType":"YulTypedName","src":"6790:7:28","type":""}],"src":"6754:149:28"},{"body":{"nativeSrc":"6972:52:28","nodeType":"YulBlock","src":"6972:52:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6989:3:28","nodeType":"YulIdentifier","src":"6989:3:28"},{"arguments":[{"name":"value","nativeSrc":"7011:5:28","nodeType":"YulIdentifier","src":"7011:5:28"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"6994:16:28","nodeType":"YulIdentifier","src":"6994:16:28"},"nativeSrc":"6994:23:28","nodeType":"YulFunctionCall","src":"6994:23:28"}],"functionName":{"name":"mstore","nativeSrc":"6982:6:28","nodeType":"YulIdentifier","src":"6982:6:28"},"nativeSrc":"6982:36:28","nodeType":"YulFunctionCall","src":"6982:36:28"},"nativeSrc":"6982:36:28","nodeType":"YulExpressionStatement","src":"6982:36:28"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"6909:115:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6960:5:28","nodeType":"YulTypedName","src":"6960:5:28","type":""},{"name":"pos","nativeSrc":"6967:3:28","nodeType":"YulTypedName","src":"6967:3:28","type":""}],"src":"6909:115:28"},{"body":{"nativeSrc":"7104:40:28","nodeType":"YulBlock","src":"7104:40:28","statements":[{"nativeSrc":"7115:22:28","nodeType":"YulAssignment","src":"7115:22:28","value":{"arguments":[{"name":"value","nativeSrc":"7131:5:28","nodeType":"YulIdentifier","src":"7131:5:28"}],"functionName":{"name":"mload","nativeSrc":"7125:5:28","nodeType":"YulIdentifier","src":"7125:5:28"},"nativeSrc":"7125:12:28","nodeType":"YulFunctionCall","src":"7125:12:28"},"variableNames":[{"name":"length","nativeSrc":"7115:6:28","nodeType":"YulIdentifier","src":"7115:6:28"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7030:114:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7087:5:28","nodeType":"YulTypedName","src":"7087:5:28","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7097:6:28","nodeType":"YulTypedName","src":"7097:6:28","type":""}],"src":"7030:114:28"},{"body":{"nativeSrc":"7261:73:28","nodeType":"YulBlock","src":"7261:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7278:3:28","nodeType":"YulIdentifier","src":"7278:3:28"},{"name":"length","nativeSrc":"7283:6:28","nodeType":"YulIdentifier","src":"7283:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7271:6:28","nodeType":"YulIdentifier","src":"7271:6:28"},"nativeSrc":"7271:19:28","nodeType":"YulFunctionCall","src":"7271:19:28"},"nativeSrc":"7271:19:28","nodeType":"YulExpressionStatement","src":"7271:19:28"},{"nativeSrc":"7299:29:28","nodeType":"YulAssignment","src":"7299:29:28","value":{"arguments":[{"name":"pos","nativeSrc":"7318:3:28","nodeType":"YulIdentifier","src":"7318:3:28"},{"kind":"number","nativeSrc":"7323:4:28","nodeType":"YulLiteral","src":"7323:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7314:3:28","nodeType":"YulIdentifier","src":"7314:3:28"},"nativeSrc":"7314:14:28","nodeType":"YulFunctionCall","src":"7314:14:28"},"variableNames":[{"name":"updated_pos","nativeSrc":"7299:11:28","nodeType":"YulIdentifier","src":"7299:11:28"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7150:184:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7233:3:28","nodeType":"YulTypedName","src":"7233:3:28","type":""},{"name":"length","nativeSrc":"7238:6:28","nodeType":"YulTypedName","src":"7238:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"7249:11:28","nodeType":"YulTypedName","src":"7249:11:28","type":""}],"src":"7150:184:28"},{"body":{"nativeSrc":"7412:60:28","nodeType":"YulBlock","src":"7412:60:28","statements":[{"nativeSrc":"7422:11:28","nodeType":"YulAssignment","src":"7422:11:28","value":{"name":"ptr","nativeSrc":"7430:3:28","nodeType":"YulIdentifier","src":"7430:3:28"},"variableNames":[{"name":"data","nativeSrc":"7422:4:28","nodeType":"YulIdentifier","src":"7422:4:28"}]},{"nativeSrc":"7443:22:28","nodeType":"YulAssignment","src":"7443:22:28","value":{"arguments":[{"name":"ptr","nativeSrc":"7455:3:28","nodeType":"YulIdentifier","src":"7455:3:28"},{"kind":"number","nativeSrc":"7460:4:28","nodeType":"YulLiteral","src":"7460:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7451:3:28","nodeType":"YulIdentifier","src":"7451:3:28"},"nativeSrc":"7451:14:28","nodeType":"YulFunctionCall","src":"7451:14:28"},"variableNames":[{"name":"data","nativeSrc":"7443:4:28","nodeType":"YulIdentifier","src":"7443:4:28"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7340:132:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"7399:3:28","nodeType":"YulTypedName","src":"7399:3:28","type":""}],"returnVariables":[{"name":"data","nativeSrc":"7407:4:28","nodeType":"YulTypedName","src":"7407:4:28","type":""}],"src":"7340:132:28"},{"body":{"nativeSrc":"7533:53:28","nodeType":"YulBlock","src":"7533:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7550:3:28","nodeType":"YulIdentifier","src":"7550:3:28"},{"arguments":[{"name":"value","nativeSrc":"7573:5:28","nodeType":"YulIdentifier","src":"7573:5:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7555:17:28","nodeType":"YulIdentifier","src":"7555:17:28"},"nativeSrc":"7555:24:28","nodeType":"YulFunctionCall","src":"7555:24:28"}],"functionName":{"name":"mstore","nativeSrc":"7543:6:28","nodeType":"YulIdentifier","src":"7543:6:28"},"nativeSrc":"7543:37:28","nodeType":"YulFunctionCall","src":"7543:37:28"},"nativeSrc":"7543:37:28","nodeType":"YulExpressionStatement","src":"7543:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7478:108:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7521:5:28","nodeType":"YulTypedName","src":"7521:5:28","type":""},{"name":"pos","nativeSrc":"7528:3:28","nodeType":"YulTypedName","src":"7528:3:28","type":""}],"src":"7478:108:28"},{"body":{"nativeSrc":"7672:99:28","nodeType":"YulBlock","src":"7672:99:28","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"7716:6:28","nodeType":"YulIdentifier","src":"7716:6:28"},{"name":"pos","nativeSrc":"7724:3:28","nodeType":"YulIdentifier","src":"7724:3:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7682:33:28","nodeType":"YulIdentifier","src":"7682:33:28"},"nativeSrc":"7682:46:28","nodeType":"YulFunctionCall","src":"7682:46:28"},"nativeSrc":"7682:46:28","nodeType":"YulExpressionStatement","src":"7682:46:28"},{"nativeSrc":"7737:28:28","nodeType":"YulAssignment","src":"7737:28:28","value":{"arguments":[{"name":"pos","nativeSrc":"7755:3:28","nodeType":"YulIdentifier","src":"7755:3:28"},{"kind":"number","nativeSrc":"7760:4:28","nodeType":"YulLiteral","src":"7760:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7751:3:28","nodeType":"YulIdentifier","src":"7751:3:28"},"nativeSrc":"7751:14:28","nodeType":"YulFunctionCall","src":"7751:14:28"},"variableNames":[{"name":"updatedPos","nativeSrc":"7737:10:28","nodeType":"YulIdentifier","src":"7737:10:28"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"7592:179:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"7645:6:28","nodeType":"YulTypedName","src":"7645:6:28","type":""},{"name":"pos","nativeSrc":"7653:3:28","nodeType":"YulTypedName","src":"7653:3:28","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"7661:10:28","nodeType":"YulTypedName","src":"7661:10:28","type":""}],"src":"7592:179:28"},{"body":{"nativeSrc":"7852:38:28","nodeType":"YulBlock","src":"7852:38:28","statements":[{"nativeSrc":"7862:22:28","nodeType":"YulAssignment","src":"7862:22:28","value":{"arguments":[{"name":"ptr","nativeSrc":"7874:3:28","nodeType":"YulIdentifier","src":"7874:3:28"},{"kind":"number","nativeSrc":"7879:4:28","nodeType":"YulLiteral","src":"7879:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7870:3:28","nodeType":"YulIdentifier","src":"7870:3:28"},"nativeSrc":"7870:14:28","nodeType":"YulFunctionCall","src":"7870:14:28"},"variableNames":[{"name":"next","nativeSrc":"7862:4:28","nodeType":"YulIdentifier","src":"7862:4:28"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7777:113:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"7839:3:28","nodeType":"YulTypedName","src":"7839:3:28","type":""}],"returnVariables":[{"name":"next","nativeSrc":"7847:4:28","nodeType":"YulTypedName","src":"7847:4:28","type":""}],"src":"7777:113:28"},{"body":{"nativeSrc":"8050:608:28","nodeType":"YulBlock","src":"8050:608:28","statements":[{"nativeSrc":"8060:68:28","nodeType":"YulVariableDeclaration","src":"8060:68:28","value":{"arguments":[{"name":"value","nativeSrc":"8122:5:28","nodeType":"YulIdentifier","src":"8122:5:28"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8074:47:28","nodeType":"YulIdentifier","src":"8074:47:28"},"nativeSrc":"8074:54:28","nodeType":"YulFunctionCall","src":"8074:54:28"},"variables":[{"name":"length","nativeSrc":"8064:6:28","nodeType":"YulTypedName","src":"8064:6:28","type":""}]},{"nativeSrc":"8137:93:28","nodeType":"YulAssignment","src":"8137:93:28","value":{"arguments":[{"name":"pos","nativeSrc":"8218:3:28","nodeType":"YulIdentifier","src":"8218:3:28"},{"name":"length","nativeSrc":"8223:6:28","nodeType":"YulIdentifier","src":"8223:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8144:73:28","nodeType":"YulIdentifier","src":"8144:73:28"},"nativeSrc":"8144:86:28","nodeType":"YulFunctionCall","src":"8144:86:28"},"variableNames":[{"name":"pos","nativeSrc":"8137:3:28","nodeType":"YulIdentifier","src":"8137:3:28"}]},{"nativeSrc":"8239:71:28","nodeType":"YulVariableDeclaration","src":"8239:71:28","value":{"arguments":[{"name":"value","nativeSrc":"8304:5:28","nodeType":"YulIdentifier","src":"8304:5:28"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8254:49:28","nodeType":"YulIdentifier","src":"8254:49:28"},"nativeSrc":"8254:56:28","nodeType":"YulFunctionCall","src":"8254:56:28"},"variables":[{"name":"baseRef","nativeSrc":"8243:7:28","nodeType":"YulTypedName","src":"8243:7:28","type":""}]},{"nativeSrc":"8319:21:28","nodeType":"YulVariableDeclaration","src":"8319:21:28","value":{"name":"baseRef","nativeSrc":"8333:7:28","nodeType":"YulIdentifier","src":"8333:7:28"},"variables":[{"name":"srcPtr","nativeSrc":"8323:6:28","nodeType":"YulTypedName","src":"8323:6:28","type":""}]},{"body":{"nativeSrc":"8409:224:28","nodeType":"YulBlock","src":"8409:224:28","statements":[{"nativeSrc":"8423:34:28","nodeType":"YulVariableDeclaration","src":"8423:34:28","value":{"arguments":[{"name":"srcPtr","nativeSrc":"8450:6:28","nodeType":"YulIdentifier","src":"8450:6:28"}],"functionName":{"name":"mload","nativeSrc":"8444:5:28","nodeType":"YulIdentifier","src":"8444:5:28"},"nativeSrc":"8444:13:28","nodeType":"YulFunctionCall","src":"8444:13:28"},"variables":[{"name":"elementValue0","nativeSrc":"8427:13:28","nodeType":"YulTypedName","src":"8427:13:28","type":""}]},{"nativeSrc":"8470:70:28","nodeType":"YulAssignment","src":"8470:70:28","value":{"arguments":[{"name":"elementValue0","nativeSrc":"8521:13:28","nodeType":"YulIdentifier","src":"8521:13:28"},{"name":"pos","nativeSrc":"8536:3:28","nodeType":"YulIdentifier","src":"8536:3:28"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"8477:43:28","nodeType":"YulIdentifier","src":"8477:43:28"},"nativeSrc":"8477:63:28","nodeType":"YulFunctionCall","src":"8477:63:28"},"variableNames":[{"name":"pos","nativeSrc":"8470:3:28","nodeType":"YulIdentifier","src":"8470:3:28"}]},{"nativeSrc":"8553:70:28","nodeType":"YulAssignment","src":"8553:70:28","value":{"arguments":[{"name":"srcPtr","nativeSrc":"8616:6:28","nodeType":"YulIdentifier","src":"8616:6:28"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8563:52:28","nodeType":"YulIdentifier","src":"8563:52:28"},"nativeSrc":"8563:60:28","nodeType":"YulFunctionCall","src":"8563:60:28"},"variableNames":[{"name":"srcPtr","nativeSrc":"8553:6:28","nodeType":"YulIdentifier","src":"8553:6:28"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8371:1:28","nodeType":"YulIdentifier","src":"8371:1:28"},{"name":"length","nativeSrc":"8374:6:28","nodeType":"YulIdentifier","src":"8374:6:28"}],"functionName":{"name":"lt","nativeSrc":"8368:2:28","nodeType":"YulIdentifier","src":"8368:2:28"},"nativeSrc":"8368:13:28","nodeType":"YulFunctionCall","src":"8368:13:28"},"nativeSrc":"8349:284:28","nodeType":"YulForLoop","post":{"nativeSrc":"8382:18:28","nodeType":"YulBlock","src":"8382:18:28","statements":[{"nativeSrc":"8384:14:28","nodeType":"YulAssignment","src":"8384:14:28","value":{"arguments":[{"name":"i","nativeSrc":"8393:1:28","nodeType":"YulIdentifier","src":"8393:1:28"},{"kind":"number","nativeSrc":"8396:1:28","nodeType":"YulLiteral","src":"8396:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8389:3:28","nodeType":"YulIdentifier","src":"8389:3:28"},"nativeSrc":"8389:9:28","nodeType":"YulFunctionCall","src":"8389:9:28"},"variableNames":[{"name":"i","nativeSrc":"8384:1:28","nodeType":"YulIdentifier","src":"8384:1:28"}]}]},"pre":{"nativeSrc":"8353:14:28","nodeType":"YulBlock","src":"8353:14:28","statements":[{"nativeSrc":"8355:10:28","nodeType":"YulVariableDeclaration","src":"8355:10:28","value":{"kind":"number","nativeSrc":"8364:1:28","nodeType":"YulLiteral","src":"8364:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8359:1:28","nodeType":"YulTypedName","src":"8359:1:28","type":""}]}]},"src":"8349:284:28"},{"nativeSrc":"8642:10:28","nodeType":"YulAssignment","src":"8642:10:28","value":{"name":"pos","nativeSrc":"8649:3:28","nodeType":"YulIdentifier","src":"8649:3:28"},"variableNames":[{"name":"end","nativeSrc":"8642:3:28","nodeType":"YulIdentifier","src":"8642:3:28"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7926:732:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8029:5:28","nodeType":"YulTypedName","src":"8029:5:28","type":""},{"name":"pos","nativeSrc":"8036:3:28","nodeType":"YulTypedName","src":"8036:3:28","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8045:3:28","nodeType":"YulTypedName","src":"8045:3:28","type":""}],"src":"7926:732:28"},{"body":{"nativeSrc":"9018:861:28","nodeType":"YulBlock","src":"9018:861:28","statements":[{"nativeSrc":"9028:27:28","nodeType":"YulAssignment","src":"9028:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"9040:9:28","nodeType":"YulIdentifier","src":"9040:9:28"},{"kind":"number","nativeSrc":"9051:3:28","nodeType":"YulLiteral","src":"9051:3:28","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"9036:3:28","nodeType":"YulIdentifier","src":"9036:3:28"},"nativeSrc":"9036:19:28","nodeType":"YulFunctionCall","src":"9036:19:28"},"variableNames":[{"name":"tail","nativeSrc":"9028:4:28","nodeType":"YulIdentifier","src":"9028:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9107:6:28","nodeType":"YulIdentifier","src":"9107:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"9120:9:28","nodeType":"YulIdentifier","src":"9120:9:28"},{"kind":"number","nativeSrc":"9131:1:28","nodeType":"YulLiteral","src":"9131:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9116:3:28","nodeType":"YulIdentifier","src":"9116:3:28"},"nativeSrc":"9116:17:28","nodeType":"YulFunctionCall","src":"9116:17:28"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"9065:41:28","nodeType":"YulIdentifier","src":"9065:41:28"},"nativeSrc":"9065:69:28","nodeType":"YulFunctionCall","src":"9065:69:28"},"nativeSrc":"9065:69:28","nodeType":"YulExpressionStatement","src":"9065:69:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9155:9:28","nodeType":"YulIdentifier","src":"9155:9:28"},{"kind":"number","nativeSrc":"9166:2:28","nodeType":"YulLiteral","src":"9166:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9151:3:28","nodeType":"YulIdentifier","src":"9151:3:28"},"nativeSrc":"9151:18:28","nodeType":"YulFunctionCall","src":"9151:18:28"},{"arguments":[{"name":"tail","nativeSrc":"9175:4:28","nodeType":"YulIdentifier","src":"9175:4:28"},{"name":"headStart","nativeSrc":"9181:9:28","nodeType":"YulIdentifier","src":"9181:9:28"}],"functionName":{"name":"sub","nativeSrc":"9171:3:28","nodeType":"YulIdentifier","src":"9171:3:28"},"nativeSrc":"9171:20:28","nodeType":"YulFunctionCall","src":"9171:20:28"}],"functionName":{"name":"mstore","nativeSrc":"9144:6:28","nodeType":"YulIdentifier","src":"9144:6:28"},"nativeSrc":"9144:48:28","nodeType":"YulFunctionCall","src":"9144:48:28"},"nativeSrc":"9144:48:28","nodeType":"YulExpressionStatement","src":"9144:48:28"},{"nativeSrc":"9201:86:28","nodeType":"YulAssignment","src":"9201:86:28","value":{"arguments":[{"name":"value1","nativeSrc":"9273:6:28","nodeType":"YulIdentifier","src":"9273:6:28"},{"name":"tail","nativeSrc":"9282:4:28","nodeType":"YulIdentifier","src":"9282:4:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9209:63:28","nodeType":"YulIdentifier","src":"9209:63:28"},"nativeSrc":"9209:78:28","nodeType":"YulFunctionCall","src":"9209:78:28"},"variableNames":[{"name":"tail","nativeSrc":"9201:4:28","nodeType":"YulIdentifier","src":"9201:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9308:9:28","nodeType":"YulIdentifier","src":"9308:9:28"},{"kind":"number","nativeSrc":"9319:2:28","nodeType":"YulLiteral","src":"9319:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9304:3:28","nodeType":"YulIdentifier","src":"9304:3:28"},"nativeSrc":"9304:18:28","nodeType":"YulFunctionCall","src":"9304:18:28"},{"arguments":[{"name":"tail","nativeSrc":"9328:4:28","nodeType":"YulIdentifier","src":"9328:4:28"},{"name":"headStart","nativeSrc":"9334:9:28","nodeType":"YulIdentifier","src":"9334:9:28"}],"functionName":{"name":"sub","nativeSrc":"9324:3:28","nodeType":"YulIdentifier","src":"9324:3:28"},"nativeSrc":"9324:20:28","nodeType":"YulFunctionCall","src":"9324:20:28"}],"functionName":{"name":"mstore","nativeSrc":"9297:6:28","nodeType":"YulIdentifier","src":"9297:6:28"},"nativeSrc":"9297:48:28","nodeType":"YulFunctionCall","src":"9297:48:28"},"nativeSrc":"9297:48:28","nodeType":"YulExpressionStatement","src":"9297:48:28"},{"nativeSrc":"9354:86:28","nodeType":"YulAssignment","src":"9354:86:28","value":{"arguments":[{"name":"value2","nativeSrc":"9426:6:28","nodeType":"YulIdentifier","src":"9426:6:28"},{"name":"tail","nativeSrc":"9435:4:28","nodeType":"YulIdentifier","src":"9435:4:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9362:63:28","nodeType":"YulIdentifier","src":"9362:63:28"},"nativeSrc":"9362:78:28","nodeType":"YulFunctionCall","src":"9362:78:28"},"variableNames":[{"name":"tail","nativeSrc":"9354:4:28","nodeType":"YulIdentifier","src":"9354:4:28"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"9494:6:28","nodeType":"YulIdentifier","src":"9494:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"9507:9:28","nodeType":"YulIdentifier","src":"9507:9:28"},{"kind":"number","nativeSrc":"9518:2:28","nodeType":"YulLiteral","src":"9518:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9503:3:28","nodeType":"YulIdentifier","src":"9503:3:28"},"nativeSrc":"9503:18:28","nodeType":"YulFunctionCall","src":"9503:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9450:43:28","nodeType":"YulIdentifier","src":"9450:43:28"},"nativeSrc":"9450:72:28","nodeType":"YulFunctionCall","src":"9450:72:28"},"nativeSrc":"9450:72:28","nodeType":"YulExpressionStatement","src":"9450:72:28"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"9576:6:28","nodeType":"YulIdentifier","src":"9576:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"9589:9:28","nodeType":"YulIdentifier","src":"9589:9:28"},{"kind":"number","nativeSrc":"9600:3:28","nodeType":"YulLiteral","src":"9600:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9585:3:28","nodeType":"YulIdentifier","src":"9585:3:28"},"nativeSrc":"9585:19:28","nodeType":"YulFunctionCall","src":"9585:19:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9532:43:28","nodeType":"YulIdentifier","src":"9532:43:28"},"nativeSrc":"9532:73:28","nodeType":"YulFunctionCall","src":"9532:73:28"},"nativeSrc":"9532:73:28","nodeType":"YulExpressionStatement","src":"9532:73:28"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"9659:6:28","nodeType":"YulIdentifier","src":"9659:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"9672:9:28","nodeType":"YulIdentifier","src":"9672:9:28"},{"kind":"number","nativeSrc":"9683:3:28","nodeType":"YulLiteral","src":"9683:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"9668:3:28","nodeType":"YulIdentifier","src":"9668:3:28"},"nativeSrc":"9668:19:28","nodeType":"YulFunctionCall","src":"9668:19:28"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9615:43:28","nodeType":"YulIdentifier","src":"9615:43:28"},"nativeSrc":"9615:73:28","nodeType":"YulFunctionCall","src":"9615:73:28"},"nativeSrc":"9615:73:28","nodeType":"YulExpressionStatement","src":"9615:73:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9709:9:28","nodeType":"YulIdentifier","src":"9709:9:28"},{"kind":"number","nativeSrc":"9720:3:28","nodeType":"YulLiteral","src":"9720:3:28","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"9705:3:28","nodeType":"YulIdentifier","src":"9705:3:28"},"nativeSrc":"9705:19:28","nodeType":"YulFunctionCall","src":"9705:19:28"},{"arguments":[{"name":"tail","nativeSrc":"9730:4:28","nodeType":"YulIdentifier","src":"9730:4:28"},{"name":"headStart","nativeSrc":"9736:9:28","nodeType":"YulIdentifier","src":"9736:9:28"}],"functionName":{"name":"sub","nativeSrc":"9726:3:28","nodeType":"YulIdentifier","src":"9726:3:28"},"nativeSrc":"9726:20:28","nodeType":"YulFunctionCall","src":"9726:20:28"}],"functionName":{"name":"mstore","nativeSrc":"9698:6:28","nodeType":"YulIdentifier","src":"9698:6:28"},"nativeSrc":"9698:49:28","nodeType":"YulFunctionCall","src":"9698:49:28"},"nativeSrc":"9698:49:28","nodeType":"YulExpressionStatement","src":"9698:49:28"},{"nativeSrc":"9756:116:28","nodeType":"YulAssignment","src":"9756:116:28","value":{"arguments":[{"name":"value6","nativeSrc":"9858:6:28","nodeType":"YulIdentifier","src":"9858:6:28"},{"name":"tail","nativeSrc":"9867:4:28","nodeType":"YulIdentifier","src":"9867:4:28"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9764:93:28","nodeType":"YulIdentifier","src":"9764:93:28"},"nativeSrc":"9764:108:28","nodeType":"YulFunctionCall","src":"9764:108:28"},"variableNames":[{"name":"tail","nativeSrc":"9756:4:28","nodeType":"YulIdentifier","src":"9756:4:28"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"8664:1215:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8942:9:28","nodeType":"YulTypedName","src":"8942:9:28","type":""},{"name":"value6","nativeSrc":"8954:6:28","nodeType":"YulTypedName","src":"8954:6:28","type":""},{"name":"value5","nativeSrc":"8962:6:28","nodeType":"YulTypedName","src":"8962:6:28","type":""},{"name":"value4","nativeSrc":"8970:6:28","nodeType":"YulTypedName","src":"8970:6:28","type":""},{"name":"value3","nativeSrc":"8978:6:28","nodeType":"YulTypedName","src":"8978:6:28","type":""},{"name":"value2","nativeSrc":"8986:6:28","nodeType":"YulTypedName","src":"8986:6:28","type":""},{"name":"value1","nativeSrc":"8994:6:28","nodeType":"YulTypedName","src":"8994:6:28","type":""},{"name":"value0","nativeSrc":"9002:6:28","nodeType":"YulTypedName","src":"9002:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9013:4:28","nodeType":"YulTypedName","src":"9013:4:28","type":""}],"src":"8664:1215:28"},{"body":{"nativeSrc":"9929:53:28","nodeType":"YulBlock","src":"9929:53:28","statements":[{"nativeSrc":"9939:37:28","nodeType":"YulAssignment","src":"9939:37:28","value":{"arguments":[{"name":"value","nativeSrc":"9954:5:28","nodeType":"YulIdentifier","src":"9954:5:28"},{"kind":"number","nativeSrc":"9961:14:28","nodeType":"YulLiteral","src":"9961:14:28","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nativeSrc":"9950:3:28","nodeType":"YulIdentifier","src":"9950:3:28"},"nativeSrc":"9950:26:28","nodeType":"YulFunctionCall","src":"9950:26:28"},"variableNames":[{"name":"cleaned","nativeSrc":"9939:7:28","nodeType":"YulIdentifier","src":"9939:7:28"}]}]},"name":"cleanup_t_uint48","nativeSrc":"9885:97:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9911:5:28","nodeType":"YulTypedName","src":"9911:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9921:7:28","nodeType":"YulTypedName","src":"9921:7:28","type":""}],"src":"9885:97:28"},{"body":{"nativeSrc":"10051:52:28","nodeType":"YulBlock","src":"10051:52:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10068:3:28","nodeType":"YulIdentifier","src":"10068:3:28"},{"arguments":[{"name":"value","nativeSrc":"10090:5:28","nodeType":"YulIdentifier","src":"10090:5:28"}],"functionName":{"name":"cleanup_t_uint48","nativeSrc":"10073:16:28","nodeType":"YulIdentifier","src":"10073:16:28"},"nativeSrc":"10073:23:28","nodeType":"YulFunctionCall","src":"10073:23:28"}],"functionName":{"name":"mstore","nativeSrc":"10061:6:28","nodeType":"YulIdentifier","src":"10061:6:28"},"nativeSrc":"10061:36:28","nodeType":"YulFunctionCall","src":"10061:36:28"},"nativeSrc":"10061:36:28","nodeType":"YulExpressionStatement","src":"10061:36:28"}]},"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nativeSrc":"9988:115:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10039:5:28","nodeType":"YulTypedName","src":"10039:5:28","type":""},{"name":"pos","nativeSrc":"10046:3:28","nodeType":"YulTypedName","src":"10046:3:28","type":""}],"src":"9988:115:28"},{"body":{"nativeSrc":"10205:122:28","nodeType":"YulBlock","src":"10205:122:28","statements":[{"nativeSrc":"10215:26:28","nodeType":"YulAssignment","src":"10215:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"10227:9:28","nodeType":"YulIdentifier","src":"10227:9:28"},{"kind":"number","nativeSrc":"10238:2:28","nodeType":"YulLiteral","src":"10238:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10223:3:28","nodeType":"YulIdentifier","src":"10223:3:28"},"nativeSrc":"10223:18:28","nodeType":"YulFunctionCall","src":"10223:18:28"},"variableNames":[{"name":"tail","nativeSrc":"10215:4:28","nodeType":"YulIdentifier","src":"10215:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10293:6:28","nodeType":"YulIdentifier","src":"10293:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"10306:9:28","nodeType":"YulIdentifier","src":"10306:9:28"},{"kind":"number","nativeSrc":"10317:1:28","nodeType":"YulLiteral","src":"10317:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10302:3:28","nodeType":"YulIdentifier","src":"10302:3:28"},"nativeSrc":"10302:17:28","nodeType":"YulFunctionCall","src":"10302:17:28"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nativeSrc":"10251:41:28","nodeType":"YulIdentifier","src":"10251:41:28"},"nativeSrc":"10251:69:28","nodeType":"YulFunctionCall","src":"10251:69:28"},"nativeSrc":"10251:69:28","nodeType":"YulExpressionStatement","src":"10251:69:28"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nativeSrc":"10109:218:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10177:9:28","nodeType":"YulTypedName","src":"10177:9:28","type":""},{"name":"value0","nativeSrc":"10189:6:28","nodeType":"YulTypedName","src":"10189:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10200:4:28","nodeType":"YulTypedName","src":"10200:4:28","type":""}],"src":"10109:218:28"},{"body":{"nativeSrc":"10374:77:28","nodeType":"YulBlock","src":"10374:77:28","statements":[{"body":{"nativeSrc":"10429:16:28","nodeType":"YulBlock","src":"10429:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10438:1:28","nodeType":"YulLiteral","src":"10438:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"10441:1:28","nodeType":"YulLiteral","src":"10441:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10431:6:28","nodeType":"YulIdentifier","src":"10431:6:28"},"nativeSrc":"10431:12:28","nodeType":"YulFunctionCall","src":"10431:12:28"},"nativeSrc":"10431:12:28","nodeType":"YulExpressionStatement","src":"10431:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10397:5:28","nodeType":"YulIdentifier","src":"10397:5:28"},{"arguments":[{"name":"value","nativeSrc":"10420:5:28","nodeType":"YulIdentifier","src":"10420:5:28"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"10404:15:28","nodeType":"YulIdentifier","src":"10404:15:28"},"nativeSrc":"10404:22:28","nodeType":"YulFunctionCall","src":"10404:22:28"}],"functionName":{"name":"eq","nativeSrc":"10394:2:28","nodeType":"YulIdentifier","src":"10394:2:28"},"nativeSrc":"10394:33:28","nodeType":"YulFunctionCall","src":"10394:33:28"}],"functionName":{"name":"iszero","nativeSrc":"10387:6:28","nodeType":"YulIdentifier","src":"10387:6:28"},"nativeSrc":"10387:41:28","nodeType":"YulFunctionCall","src":"10387:41:28"},"nativeSrc":"10384:61:28","nodeType":"YulIf","src":"10384:61:28"}]},"name":"validator_revert_t_uint8","nativeSrc":"10333:118:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10367:5:28","nodeType":"YulTypedName","src":"10367:5:28","type":""}],"src":"10333:118:28"},{"body":{"nativeSrc":"10507:85:28","nodeType":"YulBlock","src":"10507:85:28","statements":[{"nativeSrc":"10517:29:28","nodeType":"YulAssignment","src":"10517:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"10539:6:28","nodeType":"YulIdentifier","src":"10539:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"10526:12:28","nodeType":"YulIdentifier","src":"10526:12:28"},"nativeSrc":"10526:20:28","nodeType":"YulFunctionCall","src":"10526:20:28"},"variableNames":[{"name":"value","nativeSrc":"10517:5:28","nodeType":"YulIdentifier","src":"10517:5:28"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10580:5:28","nodeType":"YulIdentifier","src":"10580:5:28"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"10555:24:28","nodeType":"YulIdentifier","src":"10555:24:28"},"nativeSrc":"10555:31:28","nodeType":"YulFunctionCall","src":"10555:31:28"},"nativeSrc":"10555:31:28","nodeType":"YulExpressionStatement","src":"10555:31:28"}]},"name":"abi_decode_t_uint8","nativeSrc":"10457:135:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10485:6:28","nodeType":"YulTypedName","src":"10485:6:28","type":""},{"name":"end","nativeSrc":"10493:3:28","nodeType":"YulTypedName","src":"10493:3:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"10501:5:28","nodeType":"YulTypedName","src":"10501:5:28","type":""}],"src":"10457:135:28"},{"body":{"nativeSrc":"10641:79:28","nodeType":"YulBlock","src":"10641:79:28","statements":[{"body":{"nativeSrc":"10698:16:28","nodeType":"YulBlock","src":"10698:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10707:1:28","nodeType":"YulLiteral","src":"10707:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"10710:1:28","nodeType":"YulLiteral","src":"10710:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10700:6:28","nodeType":"YulIdentifier","src":"10700:6:28"},"nativeSrc":"10700:12:28","nodeType":"YulFunctionCall","src":"10700:12:28"},"nativeSrc":"10700:12:28","nodeType":"YulExpressionStatement","src":"10700:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10664:5:28","nodeType":"YulIdentifier","src":"10664:5:28"},{"arguments":[{"name":"value","nativeSrc":"10689:5:28","nodeType":"YulIdentifier","src":"10689:5:28"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"10671:17:28","nodeType":"YulIdentifier","src":"10671:17:28"},"nativeSrc":"10671:24:28","nodeType":"YulFunctionCall","src":"10671:24:28"}],"functionName":{"name":"eq","nativeSrc":"10661:2:28","nodeType":"YulIdentifier","src":"10661:2:28"},"nativeSrc":"10661:35:28","nodeType":"YulFunctionCall","src":"10661:35:28"}],"functionName":{"name":"iszero","nativeSrc":"10654:6:28","nodeType":"YulIdentifier","src":"10654:6:28"},"nativeSrc":"10654:43:28","nodeType":"YulFunctionCall","src":"10654:43:28"},"nativeSrc":"10651:63:28","nodeType":"YulIf","src":"10651:63:28"}]},"name":"validator_revert_t_bytes32","nativeSrc":"10598:122:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10634:5:28","nodeType":"YulTypedName","src":"10634:5:28","type":""}],"src":"10598:122:28"},{"body":{"nativeSrc":"10778:87:28","nodeType":"YulBlock","src":"10778:87:28","statements":[{"nativeSrc":"10788:29:28","nodeType":"YulAssignment","src":"10788:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"10810:6:28","nodeType":"YulIdentifier","src":"10810:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"10797:12:28","nodeType":"YulIdentifier","src":"10797:12:28"},"nativeSrc":"10797:20:28","nodeType":"YulFunctionCall","src":"10797:20:28"},"variableNames":[{"name":"value","nativeSrc":"10788:5:28","nodeType":"YulIdentifier","src":"10788:5:28"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10853:5:28","nodeType":"YulIdentifier","src":"10853:5:28"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"10826:26:28","nodeType":"YulIdentifier","src":"10826:26:28"},"nativeSrc":"10826:33:28","nodeType":"YulFunctionCall","src":"10826:33:28"},"nativeSrc":"10826:33:28","nodeType":"YulExpressionStatement","src":"10826:33:28"}]},"name":"abi_decode_t_bytes32","nativeSrc":"10726:139:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10756:6:28","nodeType":"YulTypedName","src":"10756:6:28","type":""},{"name":"end","nativeSrc":"10764:3:28","nodeType":"YulTypedName","src":"10764:3:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"10772:5:28","nodeType":"YulTypedName","src":"10772:5:28","type":""}],"src":"10726:139:28"},{"body":{"nativeSrc":"11020:904:28","nodeType":"YulBlock","src":"11020:904:28","statements":[{"body":{"nativeSrc":"11067:83:28","nodeType":"YulBlock","src":"11067:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11069:77:28","nodeType":"YulIdentifier","src":"11069:77:28"},"nativeSrc":"11069:79:28","nodeType":"YulFunctionCall","src":"11069:79:28"},"nativeSrc":"11069:79:28","nodeType":"YulExpressionStatement","src":"11069:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11041:7:28","nodeType":"YulIdentifier","src":"11041:7:28"},{"name":"headStart","nativeSrc":"11050:9:28","nodeType":"YulIdentifier","src":"11050:9:28"}],"functionName":{"name":"sub","nativeSrc":"11037:3:28","nodeType":"YulIdentifier","src":"11037:3:28"},"nativeSrc":"11037:23:28","nodeType":"YulFunctionCall","src":"11037:23:28"},{"kind":"number","nativeSrc":"11062:3:28","nodeType":"YulLiteral","src":"11062:3:28","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"11033:3:28","nodeType":"YulIdentifier","src":"11033:3:28"},"nativeSrc":"11033:33:28","nodeType":"YulFunctionCall","src":"11033:33:28"},"nativeSrc":"11030:120:28","nodeType":"YulIf","src":"11030:120:28"},{"nativeSrc":"11160:117:28","nodeType":"YulBlock","src":"11160:117:28","statements":[{"nativeSrc":"11175:15:28","nodeType":"YulVariableDeclaration","src":"11175:15:28","value":{"kind":"number","nativeSrc":"11189:1:28","nodeType":"YulLiteral","src":"11189:1:28","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11179:6:28","nodeType":"YulTypedName","src":"11179:6:28","type":""}]},{"nativeSrc":"11204:63:28","nodeType":"YulAssignment","src":"11204:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11239:9:28","nodeType":"YulIdentifier","src":"11239:9:28"},{"name":"offset","nativeSrc":"11250:6:28","nodeType":"YulIdentifier","src":"11250:6:28"}],"functionName":{"name":"add","nativeSrc":"11235:3:28","nodeType":"YulIdentifier","src":"11235:3:28"},"nativeSrc":"11235:22:28","nodeType":"YulFunctionCall","src":"11235:22:28"},{"name":"dataEnd","nativeSrc":"11259:7:28","nodeType":"YulIdentifier","src":"11259:7:28"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11214:20:28","nodeType":"YulIdentifier","src":"11214:20:28"},"nativeSrc":"11214:53:28","nodeType":"YulFunctionCall","src":"11214:53:28"},"variableNames":[{"name":"value0","nativeSrc":"11204:6:28","nodeType":"YulIdentifier","src":"11204:6:28"}]}]},{"nativeSrc":"11287:118:28","nodeType":"YulBlock","src":"11287:118:28","statements":[{"nativeSrc":"11302:16:28","nodeType":"YulVariableDeclaration","src":"11302:16:28","value":{"kind":"number","nativeSrc":"11316:2:28","nodeType":"YulLiteral","src":"11316:2:28","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"11306:6:28","nodeType":"YulTypedName","src":"11306:6:28","type":""}]},{"nativeSrc":"11332:63:28","nodeType":"YulAssignment","src":"11332:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11367:9:28","nodeType":"YulIdentifier","src":"11367:9:28"},{"name":"offset","nativeSrc":"11378:6:28","nodeType":"YulIdentifier","src":"11378:6:28"}],"functionName":{"name":"add","nativeSrc":"11363:3:28","nodeType":"YulIdentifier","src":"11363:3:28"},"nativeSrc":"11363:22:28","nodeType":"YulFunctionCall","src":"11363:22:28"},{"name":"dataEnd","nativeSrc":"11387:7:28","nodeType":"YulIdentifier","src":"11387:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11342:20:28","nodeType":"YulIdentifier","src":"11342:20:28"},"nativeSrc":"11342:53:28","nodeType":"YulFunctionCall","src":"11342:53:28"},"variableNames":[{"name":"value1","nativeSrc":"11332:6:28","nodeType":"YulIdentifier","src":"11332:6:28"}]}]},{"nativeSrc":"11415:118:28","nodeType":"YulBlock","src":"11415:118:28","statements":[{"nativeSrc":"11430:16:28","nodeType":"YulVariableDeclaration","src":"11430:16:28","value":{"kind":"number","nativeSrc":"11444:2:28","nodeType":"YulLiteral","src":"11444:2:28","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"11434:6:28","nodeType":"YulTypedName","src":"11434:6:28","type":""}]},{"nativeSrc":"11460:63:28","nodeType":"YulAssignment","src":"11460:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11495:9:28","nodeType":"YulIdentifier","src":"11495:9:28"},{"name":"offset","nativeSrc":"11506:6:28","nodeType":"YulIdentifier","src":"11506:6:28"}],"functionName":{"name":"add","nativeSrc":"11491:3:28","nodeType":"YulIdentifier","src":"11491:3:28"},"nativeSrc":"11491:22:28","nodeType":"YulFunctionCall","src":"11491:22:28"},{"name":"dataEnd","nativeSrc":"11515:7:28","nodeType":"YulIdentifier","src":"11515:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11470:20:28","nodeType":"YulIdentifier","src":"11470:20:28"},"nativeSrc":"11470:53:28","nodeType":"YulFunctionCall","src":"11470:53:28"},"variableNames":[{"name":"value2","nativeSrc":"11460:6:28","nodeType":"YulIdentifier","src":"11460:6:28"}]}]},{"nativeSrc":"11543:116:28","nodeType":"YulBlock","src":"11543:116:28","statements":[{"nativeSrc":"11558:16:28","nodeType":"YulVariableDeclaration","src":"11558:16:28","value":{"kind":"number","nativeSrc":"11572:2:28","nodeType":"YulLiteral","src":"11572:2:28","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"11562:6:28","nodeType":"YulTypedName","src":"11562:6:28","type":""}]},{"nativeSrc":"11588:61:28","nodeType":"YulAssignment","src":"11588:61:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11621:9:28","nodeType":"YulIdentifier","src":"11621:9:28"},{"name":"offset","nativeSrc":"11632:6:28","nodeType":"YulIdentifier","src":"11632:6:28"}],"functionName":{"name":"add","nativeSrc":"11617:3:28","nodeType":"YulIdentifier","src":"11617:3:28"},"nativeSrc":"11617:22:28","nodeType":"YulFunctionCall","src":"11617:22:28"},{"name":"dataEnd","nativeSrc":"11641:7:28","nodeType":"YulIdentifier","src":"11641:7:28"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"11598:18:28","nodeType":"YulIdentifier","src":"11598:18:28"},"nativeSrc":"11598:51:28","nodeType":"YulFunctionCall","src":"11598:51:28"},"variableNames":[{"name":"value3","nativeSrc":"11588:6:28","nodeType":"YulIdentifier","src":"11588:6:28"}]}]},{"nativeSrc":"11669:119:28","nodeType":"YulBlock","src":"11669:119:28","statements":[{"nativeSrc":"11684:17:28","nodeType":"YulVariableDeclaration","src":"11684:17:28","value":{"kind":"number","nativeSrc":"11698:3:28","nodeType":"YulLiteral","src":"11698:3:28","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"11688:6:28","nodeType":"YulTypedName","src":"11688:6:28","type":""}]},{"nativeSrc":"11715:63:28","nodeType":"YulAssignment","src":"11715:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11750:9:28","nodeType":"YulIdentifier","src":"11750:9:28"},{"name":"offset","nativeSrc":"11761:6:28","nodeType":"YulIdentifier","src":"11761:6:28"}],"functionName":{"name":"add","nativeSrc":"11746:3:28","nodeType":"YulIdentifier","src":"11746:3:28"},"nativeSrc":"11746:22:28","nodeType":"YulFunctionCall","src":"11746:22:28"},{"name":"dataEnd","nativeSrc":"11770:7:28","nodeType":"YulIdentifier","src":"11770:7:28"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"11725:20:28","nodeType":"YulIdentifier","src":"11725:20:28"},"nativeSrc":"11725:53:28","nodeType":"YulFunctionCall","src":"11725:53:28"},"variableNames":[{"name":"value4","nativeSrc":"11715:6:28","nodeType":"YulIdentifier","src":"11715:6:28"}]}]},{"nativeSrc":"11798:119:28","nodeType":"YulBlock","src":"11798:119:28","statements":[{"nativeSrc":"11813:17:28","nodeType":"YulVariableDeclaration","src":"11813:17:28","value":{"kind":"number","nativeSrc":"11827:3:28","nodeType":"YulLiteral","src":"11827:3:28","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"11817:6:28","nodeType":"YulTypedName","src":"11817:6:28","type":""}]},{"nativeSrc":"11844:63:28","nodeType":"YulAssignment","src":"11844:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11879:9:28","nodeType":"YulIdentifier","src":"11879:9:28"},{"name":"offset","nativeSrc":"11890:6:28","nodeType":"YulIdentifier","src":"11890:6:28"}],"functionName":{"name":"add","nativeSrc":"11875:3:28","nodeType":"YulIdentifier","src":"11875:3:28"},"nativeSrc":"11875:22:28","nodeType":"YulFunctionCall","src":"11875:22:28"},{"name":"dataEnd","nativeSrc":"11899:7:28","nodeType":"YulIdentifier","src":"11899:7:28"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"11854:20:28","nodeType":"YulIdentifier","src":"11854:20:28"},"nativeSrc":"11854:53:28","nodeType":"YulFunctionCall","src":"11854:53:28"},"variableNames":[{"name":"value5","nativeSrc":"11844:6:28","nodeType":"YulIdentifier","src":"11844:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"10871:1053:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10950:9:28","nodeType":"YulTypedName","src":"10950:9:28","type":""},{"name":"dataEnd","nativeSrc":"10961:7:28","nodeType":"YulTypedName","src":"10961:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10973:6:28","nodeType":"YulTypedName","src":"10973:6:28","type":""},{"name":"value1","nativeSrc":"10981:6:28","nodeType":"YulTypedName","src":"10981:6:28","type":""},{"name":"value2","nativeSrc":"10989:6:28","nodeType":"YulTypedName","src":"10989:6:28","type":""},{"name":"value3","nativeSrc":"10997:6:28","nodeType":"YulTypedName","src":"10997:6:28","type":""},{"name":"value4","nativeSrc":"11005:6:28","nodeType":"YulTypedName","src":"11005:6:28","type":""},{"name":"value5","nativeSrc":"11013:6:28","nodeType":"YulTypedName","src":"11013:6:28","type":""}],"src":"10871:1053:28"},{"body":{"nativeSrc":"12096:1033:28","nodeType":"YulBlock","src":"12096:1033:28","statements":[{"body":{"nativeSrc":"12143:83:28","nodeType":"YulBlock","src":"12143:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12145:77:28","nodeType":"YulIdentifier","src":"12145:77:28"},"nativeSrc":"12145:79:28","nodeType":"YulFunctionCall","src":"12145:79:28"},"nativeSrc":"12145:79:28","nodeType":"YulExpressionStatement","src":"12145:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12117:7:28","nodeType":"YulIdentifier","src":"12117:7:28"},{"name":"headStart","nativeSrc":"12126:9:28","nodeType":"YulIdentifier","src":"12126:9:28"}],"functionName":{"name":"sub","nativeSrc":"12113:3:28","nodeType":"YulIdentifier","src":"12113:3:28"},"nativeSrc":"12113:23:28","nodeType":"YulFunctionCall","src":"12113:23:28"},{"kind":"number","nativeSrc":"12138:3:28","nodeType":"YulLiteral","src":"12138:3:28","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"12109:3:28","nodeType":"YulIdentifier","src":"12109:3:28"},"nativeSrc":"12109:33:28","nodeType":"YulFunctionCall","src":"12109:33:28"},"nativeSrc":"12106:120:28","nodeType":"YulIf","src":"12106:120:28"},{"nativeSrc":"12236:117:28","nodeType":"YulBlock","src":"12236:117:28","statements":[{"nativeSrc":"12251:15:28","nodeType":"YulVariableDeclaration","src":"12251:15:28","value":{"kind":"number","nativeSrc":"12265:1:28","nodeType":"YulLiteral","src":"12265:1:28","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12255:6:28","nodeType":"YulTypedName","src":"12255:6:28","type":""}]},{"nativeSrc":"12280:63:28","nodeType":"YulAssignment","src":"12280:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12315:9:28","nodeType":"YulIdentifier","src":"12315:9:28"},{"name":"offset","nativeSrc":"12326:6:28","nodeType":"YulIdentifier","src":"12326:6:28"}],"functionName":{"name":"add","nativeSrc":"12311:3:28","nodeType":"YulIdentifier","src":"12311:3:28"},"nativeSrc":"12311:22:28","nodeType":"YulFunctionCall","src":"12311:22:28"},{"name":"dataEnd","nativeSrc":"12335:7:28","nodeType":"YulIdentifier","src":"12335:7:28"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12290:20:28","nodeType":"YulIdentifier","src":"12290:20:28"},"nativeSrc":"12290:53:28","nodeType":"YulFunctionCall","src":"12290:53:28"},"variableNames":[{"name":"value0","nativeSrc":"12280:6:28","nodeType":"YulIdentifier","src":"12280:6:28"}]}]},{"nativeSrc":"12363:118:28","nodeType":"YulBlock","src":"12363:118:28","statements":[{"nativeSrc":"12378:16:28","nodeType":"YulVariableDeclaration","src":"12378:16:28","value":{"kind":"number","nativeSrc":"12392:2:28","nodeType":"YulLiteral","src":"12392:2:28","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12382:6:28","nodeType":"YulTypedName","src":"12382:6:28","type":""}]},{"nativeSrc":"12408:63:28","nodeType":"YulAssignment","src":"12408:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12443:9:28","nodeType":"YulIdentifier","src":"12443:9:28"},{"name":"offset","nativeSrc":"12454:6:28","nodeType":"YulIdentifier","src":"12454:6:28"}],"functionName":{"name":"add","nativeSrc":"12439:3:28","nodeType":"YulIdentifier","src":"12439:3:28"},"nativeSrc":"12439:22:28","nodeType":"YulFunctionCall","src":"12439:22:28"},{"name":"dataEnd","nativeSrc":"12463:7:28","nodeType":"YulIdentifier","src":"12463:7:28"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12418:20:28","nodeType":"YulIdentifier","src":"12418:20:28"},"nativeSrc":"12418:53:28","nodeType":"YulFunctionCall","src":"12418:53:28"},"variableNames":[{"name":"value1","nativeSrc":"12408:6:28","nodeType":"YulIdentifier","src":"12408:6:28"}]}]},{"nativeSrc":"12491:118:28","nodeType":"YulBlock","src":"12491:118:28","statements":[{"nativeSrc":"12506:16:28","nodeType":"YulVariableDeclaration","src":"12506:16:28","value":{"kind":"number","nativeSrc":"12520:2:28","nodeType":"YulLiteral","src":"12520:2:28","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"12510:6:28","nodeType":"YulTypedName","src":"12510:6:28","type":""}]},{"nativeSrc":"12536:63:28","nodeType":"YulAssignment","src":"12536:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12571:9:28","nodeType":"YulIdentifier","src":"12571:9:28"},{"name":"offset","nativeSrc":"12582:6:28","nodeType":"YulIdentifier","src":"12582:6:28"}],"functionName":{"name":"add","nativeSrc":"12567:3:28","nodeType":"YulIdentifier","src":"12567:3:28"},"nativeSrc":"12567:22:28","nodeType":"YulFunctionCall","src":"12567:22:28"},{"name":"dataEnd","nativeSrc":"12591:7:28","nodeType":"YulIdentifier","src":"12591:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12546:20:28","nodeType":"YulIdentifier","src":"12546:20:28"},"nativeSrc":"12546:53:28","nodeType":"YulFunctionCall","src":"12546:53:28"},"variableNames":[{"name":"value2","nativeSrc":"12536:6:28","nodeType":"YulIdentifier","src":"12536:6:28"}]}]},{"nativeSrc":"12619:118:28","nodeType":"YulBlock","src":"12619:118:28","statements":[{"nativeSrc":"12634:16:28","nodeType":"YulVariableDeclaration","src":"12634:16:28","value":{"kind":"number","nativeSrc":"12648:2:28","nodeType":"YulLiteral","src":"12648:2:28","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"12638:6:28","nodeType":"YulTypedName","src":"12638:6:28","type":""}]},{"nativeSrc":"12664:63:28","nodeType":"YulAssignment","src":"12664:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12699:9:28","nodeType":"YulIdentifier","src":"12699:9:28"},{"name":"offset","nativeSrc":"12710:6:28","nodeType":"YulIdentifier","src":"12710:6:28"}],"functionName":{"name":"add","nativeSrc":"12695:3:28","nodeType":"YulIdentifier","src":"12695:3:28"},"nativeSrc":"12695:22:28","nodeType":"YulFunctionCall","src":"12695:22:28"},{"name":"dataEnd","nativeSrc":"12719:7:28","nodeType":"YulIdentifier","src":"12719:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12674:20:28","nodeType":"YulIdentifier","src":"12674:20:28"},"nativeSrc":"12674:53:28","nodeType":"YulFunctionCall","src":"12674:53:28"},"variableNames":[{"name":"value3","nativeSrc":"12664:6:28","nodeType":"YulIdentifier","src":"12664:6:28"}]}]},{"nativeSrc":"12747:117:28","nodeType":"YulBlock","src":"12747:117:28","statements":[{"nativeSrc":"12762:17:28","nodeType":"YulVariableDeclaration","src":"12762:17:28","value":{"kind":"number","nativeSrc":"12776:3:28","nodeType":"YulLiteral","src":"12776:3:28","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"12766:6:28","nodeType":"YulTypedName","src":"12766:6:28","type":""}]},{"nativeSrc":"12793:61:28","nodeType":"YulAssignment","src":"12793:61:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12826:9:28","nodeType":"YulIdentifier","src":"12826:9:28"},{"name":"offset","nativeSrc":"12837:6:28","nodeType":"YulIdentifier","src":"12837:6:28"}],"functionName":{"name":"add","nativeSrc":"12822:3:28","nodeType":"YulIdentifier","src":"12822:3:28"},"nativeSrc":"12822:22:28","nodeType":"YulFunctionCall","src":"12822:22:28"},{"name":"dataEnd","nativeSrc":"12846:7:28","nodeType":"YulIdentifier","src":"12846:7:28"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"12803:18:28","nodeType":"YulIdentifier","src":"12803:18:28"},"nativeSrc":"12803:51:28","nodeType":"YulFunctionCall","src":"12803:51:28"},"variableNames":[{"name":"value4","nativeSrc":"12793:6:28","nodeType":"YulIdentifier","src":"12793:6:28"}]}]},{"nativeSrc":"12874:119:28","nodeType":"YulBlock","src":"12874:119:28","statements":[{"nativeSrc":"12889:17:28","nodeType":"YulVariableDeclaration","src":"12889:17:28","value":{"kind":"number","nativeSrc":"12903:3:28","nodeType":"YulLiteral","src":"12903:3:28","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"12893:6:28","nodeType":"YulTypedName","src":"12893:6:28","type":""}]},{"nativeSrc":"12920:63:28","nodeType":"YulAssignment","src":"12920:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12955:9:28","nodeType":"YulIdentifier","src":"12955:9:28"},{"name":"offset","nativeSrc":"12966:6:28","nodeType":"YulIdentifier","src":"12966:6:28"}],"functionName":{"name":"add","nativeSrc":"12951:3:28","nodeType":"YulIdentifier","src":"12951:3:28"},"nativeSrc":"12951:22:28","nodeType":"YulFunctionCall","src":"12951:22:28"},{"name":"dataEnd","nativeSrc":"12975:7:28","nodeType":"YulIdentifier","src":"12975:7:28"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"12930:20:28","nodeType":"YulIdentifier","src":"12930:20:28"},"nativeSrc":"12930:53:28","nodeType":"YulFunctionCall","src":"12930:53:28"},"variableNames":[{"name":"value5","nativeSrc":"12920:6:28","nodeType":"YulIdentifier","src":"12920:6:28"}]}]},{"nativeSrc":"13003:119:28","nodeType":"YulBlock","src":"13003:119:28","statements":[{"nativeSrc":"13018:17:28","nodeType":"YulVariableDeclaration","src":"13018:17:28","value":{"kind":"number","nativeSrc":"13032:3:28","nodeType":"YulLiteral","src":"13032:3:28","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"13022:6:28","nodeType":"YulTypedName","src":"13022:6:28","type":""}]},{"nativeSrc":"13049:63:28","nodeType":"YulAssignment","src":"13049:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13084:9:28","nodeType":"YulIdentifier","src":"13084:9:28"},{"name":"offset","nativeSrc":"13095:6:28","nodeType":"YulIdentifier","src":"13095:6:28"}],"functionName":{"name":"add","nativeSrc":"13080:3:28","nodeType":"YulIdentifier","src":"13080:3:28"},"nativeSrc":"13080:22:28","nodeType":"YulFunctionCall","src":"13080:22:28"},{"name":"dataEnd","nativeSrc":"13104:7:28","nodeType":"YulIdentifier","src":"13104:7:28"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"13059:20:28","nodeType":"YulIdentifier","src":"13059:20:28"},"nativeSrc":"13059:53:28","nodeType":"YulFunctionCall","src":"13059:53:28"},"variableNames":[{"name":"value6","nativeSrc":"13049:6:28","nodeType":"YulIdentifier","src":"13049:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"11930:1199:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12018:9:28","nodeType":"YulTypedName","src":"12018:9:28","type":""},{"name":"dataEnd","nativeSrc":"12029:7:28","nodeType":"YulTypedName","src":"12029:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12041:6:28","nodeType":"YulTypedName","src":"12041:6:28","type":""},{"name":"value1","nativeSrc":"12049:6:28","nodeType":"YulTypedName","src":"12049:6:28","type":""},{"name":"value2","nativeSrc":"12057:6:28","nodeType":"YulTypedName","src":"12057:6:28","type":""},{"name":"value3","nativeSrc":"12065:6:28","nodeType":"YulTypedName","src":"12065:6:28","type":""},{"name":"value4","nativeSrc":"12073:6:28","nodeType":"YulTypedName","src":"12073:6:28","type":""},{"name":"value5","nativeSrc":"12081:6:28","nodeType":"YulTypedName","src":"12081:6:28","type":""},{"name":"value6","nativeSrc":"12089:6:28","nodeType":"YulTypedName","src":"12089:6:28","type":""}],"src":"11930:1199:28"},{"body":{"nativeSrc":"13218:391:28","nodeType":"YulBlock","src":"13218:391:28","statements":[{"body":{"nativeSrc":"13264:83:28","nodeType":"YulBlock","src":"13264:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13266:77:28","nodeType":"YulIdentifier","src":"13266:77:28"},"nativeSrc":"13266:79:28","nodeType":"YulFunctionCall","src":"13266:79:28"},"nativeSrc":"13266:79:28","nodeType":"YulExpressionStatement","src":"13266:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13239:7:28","nodeType":"YulIdentifier","src":"13239:7:28"},{"name":"headStart","nativeSrc":"13248:9:28","nodeType":"YulIdentifier","src":"13248:9:28"}],"functionName":{"name":"sub","nativeSrc":"13235:3:28","nodeType":"YulIdentifier","src":"13235:3:28"},"nativeSrc":"13235:23:28","nodeType":"YulFunctionCall","src":"13235:23:28"},{"kind":"number","nativeSrc":"13260:2:28","nodeType":"YulLiteral","src":"13260:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"13231:3:28","nodeType":"YulIdentifier","src":"13231:3:28"},"nativeSrc":"13231:32:28","nodeType":"YulFunctionCall","src":"13231:32:28"},"nativeSrc":"13228:119:28","nodeType":"YulIf","src":"13228:119:28"},{"nativeSrc":"13357:117:28","nodeType":"YulBlock","src":"13357:117:28","statements":[{"nativeSrc":"13372:15:28","nodeType":"YulVariableDeclaration","src":"13372:15:28","value":{"kind":"number","nativeSrc":"13386:1:28","nodeType":"YulLiteral","src":"13386:1:28","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13376:6:28","nodeType":"YulTypedName","src":"13376:6:28","type":""}]},{"nativeSrc":"13401:63:28","nodeType":"YulAssignment","src":"13401:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13436:9:28","nodeType":"YulIdentifier","src":"13436:9:28"},{"name":"offset","nativeSrc":"13447:6:28","nodeType":"YulIdentifier","src":"13447:6:28"}],"functionName":{"name":"add","nativeSrc":"13432:3:28","nodeType":"YulIdentifier","src":"13432:3:28"},"nativeSrc":"13432:22:28","nodeType":"YulFunctionCall","src":"13432:22:28"},{"name":"dataEnd","nativeSrc":"13456:7:28","nodeType":"YulIdentifier","src":"13456:7:28"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13411:20:28","nodeType":"YulIdentifier","src":"13411:20:28"},"nativeSrc":"13411:53:28","nodeType":"YulFunctionCall","src":"13411:53:28"},"variableNames":[{"name":"value0","nativeSrc":"13401:6:28","nodeType":"YulIdentifier","src":"13401:6:28"}]}]},{"nativeSrc":"13484:118:28","nodeType":"YulBlock","src":"13484:118:28","statements":[{"nativeSrc":"13499:16:28","nodeType":"YulVariableDeclaration","src":"13499:16:28","value":{"kind":"number","nativeSrc":"13513:2:28","nodeType":"YulLiteral","src":"13513:2:28","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"13503:6:28","nodeType":"YulTypedName","src":"13503:6:28","type":""}]},{"nativeSrc":"13529:63:28","nodeType":"YulAssignment","src":"13529:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13564:9:28","nodeType":"YulIdentifier","src":"13564:9:28"},{"name":"offset","nativeSrc":"13575:6:28","nodeType":"YulIdentifier","src":"13575:6:28"}],"functionName":{"name":"add","nativeSrc":"13560:3:28","nodeType":"YulIdentifier","src":"13560:3:28"},"nativeSrc":"13560:22:28","nodeType":"YulFunctionCall","src":"13560:22:28"},{"name":"dataEnd","nativeSrc":"13584:7:28","nodeType":"YulIdentifier","src":"13584:7:28"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13539:20:28","nodeType":"YulIdentifier","src":"13539:20:28"},"nativeSrc":"13539:53:28","nodeType":"YulFunctionCall","src":"13539:53:28"},"variableNames":[{"name":"value1","nativeSrc":"13529:6:28","nodeType":"YulIdentifier","src":"13529:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"13135:474:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13180:9:28","nodeType":"YulTypedName","src":"13180:9:28","type":""},{"name":"dataEnd","nativeSrc":"13191:7:28","nodeType":"YulTypedName","src":"13191:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13203:6:28","nodeType":"YulTypedName","src":"13203:6:28","type":""},{"name":"value1","nativeSrc":"13211:6:28","nodeType":"YulTypedName","src":"13211:6:28","type":""}],"src":"13135:474:28"},{"body":{"nativeSrc":"13657:78:28","nodeType":"YulBlock","src":"13657:78:28","statements":[{"body":{"nativeSrc":"13713:16:28","nodeType":"YulBlock","src":"13713:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13722:1:28","nodeType":"YulLiteral","src":"13722:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"13725:1:28","nodeType":"YulLiteral","src":"13725:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13715:6:28","nodeType":"YulIdentifier","src":"13715:6:28"},"nativeSrc":"13715:12:28","nodeType":"YulFunctionCall","src":"13715:12:28"},"nativeSrc":"13715:12:28","nodeType":"YulExpressionStatement","src":"13715:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13680:5:28","nodeType":"YulIdentifier","src":"13680:5:28"},{"arguments":[{"name":"value","nativeSrc":"13704:5:28","nodeType":"YulIdentifier","src":"13704:5:28"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"13687:16:28","nodeType":"YulIdentifier","src":"13687:16:28"},"nativeSrc":"13687:23:28","nodeType":"YulFunctionCall","src":"13687:23:28"}],"functionName":{"name":"eq","nativeSrc":"13677:2:28","nodeType":"YulIdentifier","src":"13677:2:28"},"nativeSrc":"13677:34:28","nodeType":"YulFunctionCall","src":"13677:34:28"}],"functionName":{"name":"iszero","nativeSrc":"13670:6:28","nodeType":"YulIdentifier","src":"13670:6:28"},"nativeSrc":"13670:42:28","nodeType":"YulFunctionCall","src":"13670:42:28"},"nativeSrc":"13667:62:28","nodeType":"YulIf","src":"13667:62:28"}]},"name":"validator_revert_t_uint32","nativeSrc":"13615:120:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13650:5:28","nodeType":"YulTypedName","src":"13650:5:28","type":""}],"src":"13615:120:28"},{"body":{"nativeSrc":"13792:86:28","nodeType":"YulBlock","src":"13792:86:28","statements":[{"nativeSrc":"13802:29:28","nodeType":"YulAssignment","src":"13802:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"13824:6:28","nodeType":"YulIdentifier","src":"13824:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"13811:12:28","nodeType":"YulIdentifier","src":"13811:12:28"},"nativeSrc":"13811:20:28","nodeType":"YulFunctionCall","src":"13811:20:28"},"variableNames":[{"name":"value","nativeSrc":"13802:5:28","nodeType":"YulIdentifier","src":"13802:5:28"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"13866:5:28","nodeType":"YulIdentifier","src":"13866:5:28"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"13840:25:28","nodeType":"YulIdentifier","src":"13840:25:28"},"nativeSrc":"13840:32:28","nodeType":"YulFunctionCall","src":"13840:32:28"},"nativeSrc":"13840:32:28","nodeType":"YulExpressionStatement","src":"13840:32:28"}]},"name":"abi_decode_t_uint32","nativeSrc":"13741:137:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"13770:6:28","nodeType":"YulTypedName","src":"13770:6:28","type":""},{"name":"end","nativeSrc":"13778:3:28","nodeType":"YulTypedName","src":"13778:3:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"13786:5:28","nodeType":"YulTypedName","src":"13786:5:28","type":""}],"src":"13741:137:28"},{"body":{"nativeSrc":"13966:390:28","nodeType":"YulBlock","src":"13966:390:28","statements":[{"body":{"nativeSrc":"14012:83:28","nodeType":"YulBlock","src":"14012:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14014:77:28","nodeType":"YulIdentifier","src":"14014:77:28"},"nativeSrc":"14014:79:28","nodeType":"YulFunctionCall","src":"14014:79:28"},"nativeSrc":"14014:79:28","nodeType":"YulExpressionStatement","src":"14014:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13987:7:28","nodeType":"YulIdentifier","src":"13987:7:28"},{"name":"headStart","nativeSrc":"13996:9:28","nodeType":"YulIdentifier","src":"13996:9:28"}],"functionName":{"name":"sub","nativeSrc":"13983:3:28","nodeType":"YulIdentifier","src":"13983:3:28"},"nativeSrc":"13983:23:28","nodeType":"YulFunctionCall","src":"13983:23:28"},{"kind":"number","nativeSrc":"14008:2:28","nodeType":"YulLiteral","src":"14008:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"13979:3:28","nodeType":"YulIdentifier","src":"13979:3:28"},"nativeSrc":"13979:32:28","nodeType":"YulFunctionCall","src":"13979:32:28"},"nativeSrc":"13976:119:28","nodeType":"YulIf","src":"13976:119:28"},{"nativeSrc":"14105:117:28","nodeType":"YulBlock","src":"14105:117:28","statements":[{"nativeSrc":"14120:15:28","nodeType":"YulVariableDeclaration","src":"14120:15:28","value":{"kind":"number","nativeSrc":"14134:1:28","nodeType":"YulLiteral","src":"14134:1:28","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14124:6:28","nodeType":"YulTypedName","src":"14124:6:28","type":""}]},{"nativeSrc":"14149:63:28","nodeType":"YulAssignment","src":"14149:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14184:9:28","nodeType":"YulIdentifier","src":"14184:9:28"},{"name":"offset","nativeSrc":"14195:6:28","nodeType":"YulIdentifier","src":"14195:6:28"}],"functionName":{"name":"add","nativeSrc":"14180:3:28","nodeType":"YulIdentifier","src":"14180:3:28"},"nativeSrc":"14180:22:28","nodeType":"YulFunctionCall","src":"14180:22:28"},{"name":"dataEnd","nativeSrc":"14204:7:28","nodeType":"YulIdentifier","src":"14204:7:28"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14159:20:28","nodeType":"YulIdentifier","src":"14159:20:28"},"nativeSrc":"14159:53:28","nodeType":"YulFunctionCall","src":"14159:53:28"},"variableNames":[{"name":"value0","nativeSrc":"14149:6:28","nodeType":"YulIdentifier","src":"14149:6:28"}]}]},{"nativeSrc":"14232:117:28","nodeType":"YulBlock","src":"14232:117:28","statements":[{"nativeSrc":"14247:16:28","nodeType":"YulVariableDeclaration","src":"14247:16:28","value":{"kind":"number","nativeSrc":"14261:2:28","nodeType":"YulLiteral","src":"14261:2:28","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"14251:6:28","nodeType":"YulTypedName","src":"14251:6:28","type":""}]},{"nativeSrc":"14277:62:28","nodeType":"YulAssignment","src":"14277:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14311:9:28","nodeType":"YulIdentifier","src":"14311:9:28"},{"name":"offset","nativeSrc":"14322:6:28","nodeType":"YulIdentifier","src":"14322:6:28"}],"functionName":{"name":"add","nativeSrc":"14307:3:28","nodeType":"YulIdentifier","src":"14307:3:28"},"nativeSrc":"14307:22:28","nodeType":"YulFunctionCall","src":"14307:22:28"},{"name":"dataEnd","nativeSrc":"14331:7:28","nodeType":"YulIdentifier","src":"14331:7:28"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"14287:19:28","nodeType":"YulIdentifier","src":"14287:19:28"},"nativeSrc":"14287:52:28","nodeType":"YulFunctionCall","src":"14287:52:28"},"variableNames":[{"name":"value1","nativeSrc":"14277:6:28","nodeType":"YulIdentifier","src":"14277:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nativeSrc":"13884:472:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13928:9:28","nodeType":"YulTypedName","src":"13928:9:28","type":""},{"name":"dataEnd","nativeSrc":"13939:7:28","nodeType":"YulTypedName","src":"13939:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13951:6:28","nodeType":"YulTypedName","src":"13951:6:28","type":""},{"name":"value1","nativeSrc":"13959:6:28","nodeType":"YulTypedName","src":"13959:6:28","type":""}],"src":"13884:472:28"},{"body":{"nativeSrc":"14415:52:28","nodeType":"YulBlock","src":"14415:52:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14432:3:28","nodeType":"YulIdentifier","src":"14432:3:28"},{"arguments":[{"name":"value","nativeSrc":"14454:5:28","nodeType":"YulIdentifier","src":"14454:5:28"}],"functionName":{"name":"cleanup_t_uint48","nativeSrc":"14437:16:28","nodeType":"YulIdentifier","src":"14437:16:28"},"nativeSrc":"14437:23:28","nodeType":"YulFunctionCall","src":"14437:23:28"}],"functionName":{"name":"mstore","nativeSrc":"14425:6:28","nodeType":"YulIdentifier","src":"14425:6:28"},"nativeSrc":"14425:36:28","nodeType":"YulFunctionCall","src":"14425:36:28"},"nativeSrc":"14425:36:28","nodeType":"YulExpressionStatement","src":"14425:36:28"}]},"name":"abi_encode_t_uint48_to_t_uint48","nativeSrc":"14362:105:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14403:5:28","nodeType":"YulTypedName","src":"14403:5:28","type":""},{"name":"pos","nativeSrc":"14410:3:28","nodeType":"YulTypedName","src":"14410:3:28","type":""}],"src":"14362:105:28"},{"body":{"nativeSrc":"14518:93:28","nodeType":"YulBlock","src":"14518:93:28","statements":[{"nativeSrc":"14528:77:28","nodeType":"YulAssignment","src":"14528:77:28","value":{"arguments":[{"name":"value","nativeSrc":"14543:5:28","nodeType":"YulIdentifier","src":"14543:5:28"},{"kind":"number","nativeSrc":"14550:54:28","nodeType":"YulLiteral","src":"14550:54:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"14539:3:28","nodeType":"YulIdentifier","src":"14539:3:28"},"nativeSrc":"14539:66:28","nodeType":"YulFunctionCall","src":"14539:66:28"},"variableNames":[{"name":"cleaned","nativeSrc":"14528:7:28","nodeType":"YulIdentifier","src":"14528:7:28"}]}]},"name":"cleanup_t_uint208","nativeSrc":"14473:138:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14500:5:28","nodeType":"YulTypedName","src":"14500:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14510:7:28","nodeType":"YulTypedName","src":"14510:7:28","type":""}],"src":"14473:138:28"},{"body":{"nativeSrc":"14672:53:28","nodeType":"YulBlock","src":"14672:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14689:3:28","nodeType":"YulIdentifier","src":"14689:3:28"},{"arguments":[{"name":"value","nativeSrc":"14712:5:28","nodeType":"YulIdentifier","src":"14712:5:28"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"14694:17:28","nodeType":"YulIdentifier","src":"14694:17:28"},"nativeSrc":"14694:24:28","nodeType":"YulFunctionCall","src":"14694:24:28"}],"functionName":{"name":"mstore","nativeSrc":"14682:6:28","nodeType":"YulIdentifier","src":"14682:6:28"},"nativeSrc":"14682:37:28","nodeType":"YulFunctionCall","src":"14682:37:28"},"nativeSrc":"14682:37:28","nodeType":"YulExpressionStatement","src":"14682:37:28"}]},"name":"abi_encode_t_uint208_to_t_uint208","nativeSrc":"14617:108:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14660:5:28","nodeType":"YulTypedName","src":"14660:5:28","type":""},{"name":"pos","nativeSrc":"14667:3:28","nodeType":"YulTypedName","src":"14667:3:28","type":""}],"src":"14617:108:28"},{"body":{"nativeSrc":"14935:391:28","nodeType":"YulBlock","src":"14935:391:28","statements":[{"nativeSrc":"14945:26:28","nodeType":"YulVariableDeclaration","src":"14945:26:28","value":{"arguments":[{"name":"pos","nativeSrc":"14961:3:28","nodeType":"YulIdentifier","src":"14961:3:28"},{"kind":"number","nativeSrc":"14966:4:28","nodeType":"YulLiteral","src":"14966:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"14957:3:28","nodeType":"YulIdentifier","src":"14957:3:28"},"nativeSrc":"14957:14:28","nodeType":"YulFunctionCall","src":"14957:14:28"},"variables":[{"name":"tail","nativeSrc":"14949:4:28","nodeType":"YulTypedName","src":"14949:4:28","type":""}]},{"nativeSrc":"14981:162:28","nodeType":"YulBlock","src":"14981:162:28","statements":[{"nativeSrc":"15016:43:28","nodeType":"YulVariableDeclaration","src":"15016:43:28","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15046:5:28","nodeType":"YulIdentifier","src":"15046:5:28"},{"kind":"number","nativeSrc":"15053:4:28","nodeType":"YulLiteral","src":"15053:4:28","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"15042:3:28","nodeType":"YulIdentifier","src":"15042:3:28"},"nativeSrc":"15042:16:28","nodeType":"YulFunctionCall","src":"15042:16:28"}],"functionName":{"name":"mload","nativeSrc":"15036:5:28","nodeType":"YulIdentifier","src":"15036:5:28"},"nativeSrc":"15036:23:28","nodeType":"YulFunctionCall","src":"15036:23:28"},"variables":[{"name":"memberValue0","nativeSrc":"15020:12:28","nodeType":"YulTypedName","src":"15020:12:28","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"15104:12:28","nodeType":"YulIdentifier","src":"15104:12:28"},{"arguments":[{"name":"pos","nativeSrc":"15122:3:28","nodeType":"YulIdentifier","src":"15122:3:28"},{"kind":"number","nativeSrc":"15127:4:28","nodeType":"YulLiteral","src":"15127:4:28","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"15118:3:28","nodeType":"YulIdentifier","src":"15118:3:28"},"nativeSrc":"15118:14:28","nodeType":"YulFunctionCall","src":"15118:14:28"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48","nativeSrc":"15072:31:28","nodeType":"YulIdentifier","src":"15072:31:28"},"nativeSrc":"15072:61:28","nodeType":"YulFunctionCall","src":"15072:61:28"},"nativeSrc":"15072:61:28","nodeType":"YulExpressionStatement","src":"15072:61:28"}]},{"nativeSrc":"15153:166:28","nodeType":"YulBlock","src":"15153:166:28","statements":[{"nativeSrc":"15190:43:28","nodeType":"YulVariableDeclaration","src":"15190:43:28","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15220:5:28","nodeType":"YulIdentifier","src":"15220:5:28"},{"kind":"number","nativeSrc":"15227:4:28","nodeType":"YulLiteral","src":"15227:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15216:3:28","nodeType":"YulIdentifier","src":"15216:3:28"},"nativeSrc":"15216:16:28","nodeType":"YulFunctionCall","src":"15216:16:28"}],"functionName":{"name":"mload","nativeSrc":"15210:5:28","nodeType":"YulIdentifier","src":"15210:5:28"},"nativeSrc":"15210:23:28","nodeType":"YulFunctionCall","src":"15210:23:28"},"variables":[{"name":"memberValue0","nativeSrc":"15194:12:28","nodeType":"YulTypedName","src":"15194:12:28","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"15280:12:28","nodeType":"YulIdentifier","src":"15280:12:28"},{"arguments":[{"name":"pos","nativeSrc":"15298:3:28","nodeType":"YulIdentifier","src":"15298:3:28"},{"kind":"number","nativeSrc":"15303:4:28","nodeType":"YulLiteral","src":"15303:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15294:3:28","nodeType":"YulIdentifier","src":"15294:3:28"},"nativeSrc":"15294:14:28","nodeType":"YulFunctionCall","src":"15294:14:28"}],"functionName":{"name":"abi_encode_t_uint208_to_t_uint208","nativeSrc":"15246:33:28","nodeType":"YulIdentifier","src":"15246:33:28"},"nativeSrc":"15246:63:28","nodeType":"YulFunctionCall","src":"15246:63:28"},"nativeSrc":"15246:63:28","nodeType":"YulExpressionStatement","src":"15246:63:28"}]}]},"name":"abi_encode_t_struct$_Checkpoint208_$6734_memory_ptr_to_t_struct$_Checkpoint208_$6734_memory_ptr_fromStack","nativeSrc":"14807:519:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14922:5:28","nodeType":"YulTypedName","src":"14922:5:28","type":""},{"name":"pos","nativeSrc":"14929:3:28","nodeType":"YulTypedName","src":"14929:3:28","type":""}],"src":"14807:519:28"},{"body":{"nativeSrc":"15492:186:28","nodeType":"YulBlock","src":"15492:186:28","statements":[{"nativeSrc":"15502:26:28","nodeType":"YulAssignment","src":"15502:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"15514:9:28","nodeType":"YulIdentifier","src":"15514:9:28"},{"kind":"number","nativeSrc":"15525:2:28","nodeType":"YulLiteral","src":"15525:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15510:3:28","nodeType":"YulIdentifier","src":"15510:3:28"},"nativeSrc":"15510:18:28","nodeType":"YulFunctionCall","src":"15510:18:28"},"variableNames":[{"name":"tail","nativeSrc":"15502:4:28","nodeType":"YulIdentifier","src":"15502:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15644:6:28","nodeType":"YulIdentifier","src":"15644:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"15657:9:28","nodeType":"YulIdentifier","src":"15657:9:28"},{"kind":"number","nativeSrc":"15668:1:28","nodeType":"YulLiteral","src":"15668:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15653:3:28","nodeType":"YulIdentifier","src":"15653:3:28"},"nativeSrc":"15653:17:28","nodeType":"YulFunctionCall","src":"15653:17:28"}],"functionName":{"name":"abi_encode_t_struct$_Checkpoint208_$6734_memory_ptr_to_t_struct$_Checkpoint208_$6734_memory_ptr_fromStack","nativeSrc":"15538:105:28","nodeType":"YulIdentifier","src":"15538:105:28"},"nativeSrc":"15538:133:28","nodeType":"YulFunctionCall","src":"15538:133:28"},"nativeSrc":"15538:133:28","nodeType":"YulExpressionStatement","src":"15538:133:28"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint208_$6734_memory_ptr__to_t_struct$_Checkpoint208_$6734_memory_ptr__fromStack_reversed","nativeSrc":"15332:346:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15464:9:28","nodeType":"YulTypedName","src":"15464:9:28","type":""},{"name":"value0","nativeSrc":"15476:6:28","nodeType":"YulTypedName","src":"15476:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15487:4:28","nodeType":"YulTypedName","src":"15487:4:28","type":""}],"src":"15332:346:28"},{"body":{"nativeSrc":"15712:152:28","nodeType":"YulBlock","src":"15712:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15729:1:28","nodeType":"YulLiteral","src":"15729:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"15732:77:28","nodeType":"YulLiteral","src":"15732:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15722:6:28","nodeType":"YulIdentifier","src":"15722:6:28"},"nativeSrc":"15722:88:28","nodeType":"YulFunctionCall","src":"15722:88:28"},"nativeSrc":"15722:88:28","nodeType":"YulExpressionStatement","src":"15722:88:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15826:1:28","nodeType":"YulLiteral","src":"15826:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"15829:4:28","nodeType":"YulLiteral","src":"15829:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"15819:6:28","nodeType":"YulIdentifier","src":"15819:6:28"},"nativeSrc":"15819:15:28","nodeType":"YulFunctionCall","src":"15819:15:28"},"nativeSrc":"15819:15:28","nodeType":"YulExpressionStatement","src":"15819:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15850:1:28","nodeType":"YulLiteral","src":"15850:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"15853:4:28","nodeType":"YulLiteral","src":"15853:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15843:6:28","nodeType":"YulIdentifier","src":"15843:6:28"},"nativeSrc":"15843:15:28","nodeType":"YulFunctionCall","src":"15843:15:28"},"nativeSrc":"15843:15:28","nodeType":"YulExpressionStatement","src":"15843:15:28"}]},"name":"panic_error_0x22","nativeSrc":"15684:180:28","nodeType":"YulFunctionDefinition","src":"15684:180:28"},{"body":{"nativeSrc":"15921:269:28","nodeType":"YulBlock","src":"15921:269:28","statements":[{"nativeSrc":"15931:22:28","nodeType":"YulAssignment","src":"15931:22:28","value":{"arguments":[{"name":"data","nativeSrc":"15945:4:28","nodeType":"YulIdentifier","src":"15945:4:28"},{"kind":"number","nativeSrc":"15951:1:28","nodeType":"YulLiteral","src":"15951:1:28","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"15941:3:28","nodeType":"YulIdentifier","src":"15941:3:28"},"nativeSrc":"15941:12:28","nodeType":"YulFunctionCall","src":"15941:12:28"},"variableNames":[{"name":"length","nativeSrc":"15931:6:28","nodeType":"YulIdentifier","src":"15931:6:28"}]},{"nativeSrc":"15962:38:28","nodeType":"YulVariableDeclaration","src":"15962:38:28","value":{"arguments":[{"name":"data","nativeSrc":"15992:4:28","nodeType":"YulIdentifier","src":"15992:4:28"},{"kind":"number","nativeSrc":"15998:1:28","nodeType":"YulLiteral","src":"15998:1:28","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"15988:3:28","nodeType":"YulIdentifier","src":"15988:3:28"},"nativeSrc":"15988:12:28","nodeType":"YulFunctionCall","src":"15988:12:28"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"15966:18:28","nodeType":"YulTypedName","src":"15966:18:28","type":""}]},{"body":{"nativeSrc":"16039:51:28","nodeType":"YulBlock","src":"16039:51:28","statements":[{"nativeSrc":"16053:27:28","nodeType":"YulAssignment","src":"16053:27:28","value":{"arguments":[{"name":"length","nativeSrc":"16067:6:28","nodeType":"YulIdentifier","src":"16067:6:28"},{"kind":"number","nativeSrc":"16075:4:28","nodeType":"YulLiteral","src":"16075:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"16063:3:28","nodeType":"YulIdentifier","src":"16063:3:28"},"nativeSrc":"16063:17:28","nodeType":"YulFunctionCall","src":"16063:17:28"},"variableNames":[{"name":"length","nativeSrc":"16053:6:28","nodeType":"YulIdentifier","src":"16053:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"16019:18:28","nodeType":"YulIdentifier","src":"16019:18:28"}],"functionName":{"name":"iszero","nativeSrc":"16012:6:28","nodeType":"YulIdentifier","src":"16012:6:28"},"nativeSrc":"16012:26:28","nodeType":"YulFunctionCall","src":"16012:26:28"},"nativeSrc":"16009:81:28","nodeType":"YulIf","src":"16009:81:28"},{"body":{"nativeSrc":"16142:42:28","nodeType":"YulBlock","src":"16142:42:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"16156:16:28","nodeType":"YulIdentifier","src":"16156:16:28"},"nativeSrc":"16156:18:28","nodeType":"YulFunctionCall","src":"16156:18:28"},"nativeSrc":"16156:18:28","nodeType":"YulExpressionStatement","src":"16156:18:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"16106:18:28","nodeType":"YulIdentifier","src":"16106:18:28"},{"arguments":[{"name":"length","nativeSrc":"16129:6:28","nodeType":"YulIdentifier","src":"16129:6:28"},{"kind":"number","nativeSrc":"16137:2:28","nodeType":"YulLiteral","src":"16137:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"16126:2:28","nodeType":"YulIdentifier","src":"16126:2:28"},"nativeSrc":"16126:14:28","nodeType":"YulFunctionCall","src":"16126:14:28"}],"functionName":{"name":"eq","nativeSrc":"16103:2:28","nodeType":"YulIdentifier","src":"16103:2:28"},"nativeSrc":"16103:38:28","nodeType":"YulFunctionCall","src":"16103:38:28"},"nativeSrc":"16100:84:28","nodeType":"YulIf","src":"16100:84:28"}]},"name":"extract_byte_array_length","nativeSrc":"15870:320:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"15905:4:28","nodeType":"YulTypedName","src":"15905:4:28","type":""}],"returnVariables":[{"name":"length","nativeSrc":"15914:6:28","nodeType":"YulTypedName","src":"15914:6:28","type":""}],"src":"15870:320:28"},{"body":{"nativeSrc":"16320:204:28","nodeType":"YulBlock","src":"16320:204:28","statements":[{"nativeSrc":"16330:26:28","nodeType":"YulAssignment","src":"16330:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"16342:9:28","nodeType":"YulIdentifier","src":"16342:9:28"},{"kind":"number","nativeSrc":"16353:2:28","nodeType":"YulLiteral","src":"16353:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16338:3:28","nodeType":"YulIdentifier","src":"16338:3:28"},"nativeSrc":"16338:18:28","nodeType":"YulFunctionCall","src":"16338:18:28"},"variableNames":[{"name":"tail","nativeSrc":"16330:4:28","nodeType":"YulIdentifier","src":"16330:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16410:6:28","nodeType":"YulIdentifier","src":"16410:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"16423:9:28","nodeType":"YulIdentifier","src":"16423:9:28"},{"kind":"number","nativeSrc":"16434:1:28","nodeType":"YulLiteral","src":"16434:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16419:3:28","nodeType":"YulIdentifier","src":"16419:3:28"},"nativeSrc":"16419:17:28","nodeType":"YulFunctionCall","src":"16419:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16366:43:28","nodeType":"YulIdentifier","src":"16366:43:28"},"nativeSrc":"16366:71:28","nodeType":"YulFunctionCall","src":"16366:71:28"},"nativeSrc":"16366:71:28","nodeType":"YulExpressionStatement","src":"16366:71:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"16489:6:28","nodeType":"YulIdentifier","src":"16489:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"16502:9:28","nodeType":"YulIdentifier","src":"16502:9:28"},{"kind":"number","nativeSrc":"16513:2:28","nodeType":"YulLiteral","src":"16513:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16498:3:28","nodeType":"YulIdentifier","src":"16498:3:28"},"nativeSrc":"16498:18:28","nodeType":"YulFunctionCall","src":"16498:18:28"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nativeSrc":"16447:41:28","nodeType":"YulIdentifier","src":"16447:41:28"},"nativeSrc":"16447:70:28","nodeType":"YulFunctionCall","src":"16447:70:28"},"nativeSrc":"16447:70:28","nodeType":"YulExpressionStatement","src":"16447:70:28"}]},"name":"abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed","nativeSrc":"16196:328:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16284:9:28","nodeType":"YulTypedName","src":"16284:9:28","type":""},{"name":"value1","nativeSrc":"16296:6:28","nodeType":"YulTypedName","src":"16296:6:28","type":""},{"name":"value0","nativeSrc":"16304:6:28","nodeType":"YulTypedName","src":"16304:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16315:4:28","nodeType":"YulTypedName","src":"16315:4:28","type":""}],"src":"16196:328:28"},{"body":{"nativeSrc":"16558:152:28","nodeType":"YulBlock","src":"16558:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16575:1:28","nodeType":"YulLiteral","src":"16575:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"16578:77:28","nodeType":"YulLiteral","src":"16578:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16568:6:28","nodeType":"YulIdentifier","src":"16568:6:28"},"nativeSrc":"16568:88:28","nodeType":"YulFunctionCall","src":"16568:88:28"},"nativeSrc":"16568:88:28","nodeType":"YulExpressionStatement","src":"16568:88:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16672:1:28","nodeType":"YulLiteral","src":"16672:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"16675:4:28","nodeType":"YulLiteral","src":"16675:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"16665:6:28","nodeType":"YulIdentifier","src":"16665:6:28"},"nativeSrc":"16665:15:28","nodeType":"YulFunctionCall","src":"16665:15:28"},"nativeSrc":"16665:15:28","nodeType":"YulExpressionStatement","src":"16665:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16696:1:28","nodeType":"YulLiteral","src":"16696:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"16699:4:28","nodeType":"YulLiteral","src":"16699:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16689:6:28","nodeType":"YulIdentifier","src":"16689:6:28"},"nativeSrc":"16689:15:28","nodeType":"YulFunctionCall","src":"16689:15:28"},"nativeSrc":"16689:15:28","nodeType":"YulExpressionStatement","src":"16689:15:28"}]},"name":"panic_error_0x41","nativeSrc":"16530:180:28","nodeType":"YulFunctionDefinition","src":"16530:180:28"},{"body":{"nativeSrc":"16898:371:28","nodeType":"YulBlock","src":"16898:371:28","statements":[{"nativeSrc":"16908:27:28","nodeType":"YulAssignment","src":"16908:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"16920:9:28","nodeType":"YulIdentifier","src":"16920:9:28"},{"kind":"number","nativeSrc":"16931:3:28","nodeType":"YulLiteral","src":"16931:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"16916:3:28","nodeType":"YulIdentifier","src":"16916:3:28"},"nativeSrc":"16916:19:28","nodeType":"YulFunctionCall","src":"16916:19:28"},"variableNames":[{"name":"tail","nativeSrc":"16908:4:28","nodeType":"YulIdentifier","src":"16908:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16989:6:28","nodeType":"YulIdentifier","src":"16989:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"17002:9:28","nodeType":"YulIdentifier","src":"17002:9:28"},{"kind":"number","nativeSrc":"17013:1:28","nodeType":"YulLiteral","src":"17013:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16998:3:28","nodeType":"YulIdentifier","src":"16998:3:28"},"nativeSrc":"16998:17:28","nodeType":"YulFunctionCall","src":"16998:17:28"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"16945:43:28","nodeType":"YulIdentifier","src":"16945:43:28"},"nativeSrc":"16945:71:28","nodeType":"YulFunctionCall","src":"16945:71:28"},"nativeSrc":"16945:71:28","nodeType":"YulExpressionStatement","src":"16945:71:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"17070:6:28","nodeType":"YulIdentifier","src":"17070:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"17083:9:28","nodeType":"YulIdentifier","src":"17083:9:28"},{"kind":"number","nativeSrc":"17094:2:28","nodeType":"YulLiteral","src":"17094:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17079:3:28","nodeType":"YulIdentifier","src":"17079:3:28"},"nativeSrc":"17079:18:28","nodeType":"YulFunctionCall","src":"17079:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"17026:43:28","nodeType":"YulIdentifier","src":"17026:43:28"},"nativeSrc":"17026:72:28","nodeType":"YulFunctionCall","src":"17026:72:28"},"nativeSrc":"17026:72:28","nodeType":"YulExpressionStatement","src":"17026:72:28"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"17152:6:28","nodeType":"YulIdentifier","src":"17152:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"17165:9:28","nodeType":"YulIdentifier","src":"17165:9:28"},{"kind":"number","nativeSrc":"17176:2:28","nodeType":"YulLiteral","src":"17176:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17161:3:28","nodeType":"YulIdentifier","src":"17161:3:28"},"nativeSrc":"17161:18:28","nodeType":"YulFunctionCall","src":"17161:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17108:43:28","nodeType":"YulIdentifier","src":"17108:43:28"},"nativeSrc":"17108:72:28","nodeType":"YulFunctionCall","src":"17108:72:28"},"nativeSrc":"17108:72:28","nodeType":"YulExpressionStatement","src":"17108:72:28"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"17234:6:28","nodeType":"YulIdentifier","src":"17234:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"17247:9:28","nodeType":"YulIdentifier","src":"17247:9:28"},{"kind":"number","nativeSrc":"17258:2:28","nodeType":"YulLiteral","src":"17258:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17243:3:28","nodeType":"YulIdentifier","src":"17243:3:28"},"nativeSrc":"17243:18:28","nodeType":"YulFunctionCall","src":"17243:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17190:43:28","nodeType":"YulIdentifier","src":"17190:43:28"},"nativeSrc":"17190:72:28","nodeType":"YulFunctionCall","src":"17190:72:28"},"nativeSrc":"17190:72:28","nodeType":"YulExpressionStatement","src":"17190:72:28"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"16716:553:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16846:9:28","nodeType":"YulTypedName","src":"16846:9:28","type":""},{"name":"value3","nativeSrc":"16858:6:28","nodeType":"YulTypedName","src":"16858:6:28","type":""},{"name":"value2","nativeSrc":"16866:6:28","nodeType":"YulTypedName","src":"16866:6:28","type":""},{"name":"value1","nativeSrc":"16874:6:28","nodeType":"YulTypedName","src":"16874:6:28","type":""},{"name":"value0","nativeSrc":"16882:6:28","nodeType":"YulTypedName","src":"16882:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16893:4:28","nodeType":"YulTypedName","src":"16893:4:28","type":""}],"src":"16716:553:28"},{"body":{"nativeSrc":"17513:537:28","nodeType":"YulBlock","src":"17513:537:28","statements":[{"nativeSrc":"17523:27:28","nodeType":"YulAssignment","src":"17523:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"17535:9:28","nodeType":"YulIdentifier","src":"17535:9:28"},{"kind":"number","nativeSrc":"17546:3:28","nodeType":"YulLiteral","src":"17546:3:28","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"17531:3:28","nodeType":"YulIdentifier","src":"17531:3:28"},"nativeSrc":"17531:19:28","nodeType":"YulFunctionCall","src":"17531:19:28"},"variableNames":[{"name":"tail","nativeSrc":"17523:4:28","nodeType":"YulIdentifier","src":"17523:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"17604:6:28","nodeType":"YulIdentifier","src":"17604:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"17617:9:28","nodeType":"YulIdentifier","src":"17617:9:28"},{"kind":"number","nativeSrc":"17628:1:28","nodeType":"YulLiteral","src":"17628:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17613:3:28","nodeType":"YulIdentifier","src":"17613:3:28"},"nativeSrc":"17613:17:28","nodeType":"YulFunctionCall","src":"17613:17:28"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"17560:43:28","nodeType":"YulIdentifier","src":"17560:43:28"},"nativeSrc":"17560:71:28","nodeType":"YulFunctionCall","src":"17560:71:28"},"nativeSrc":"17560:71:28","nodeType":"YulExpressionStatement","src":"17560:71:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"17685:6:28","nodeType":"YulIdentifier","src":"17685:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"17698:9:28","nodeType":"YulIdentifier","src":"17698:9:28"},{"kind":"number","nativeSrc":"17709:2:28","nodeType":"YulLiteral","src":"17709:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17694:3:28","nodeType":"YulIdentifier","src":"17694:3:28"},"nativeSrc":"17694:18:28","nodeType":"YulFunctionCall","src":"17694:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"17641:43:28","nodeType":"YulIdentifier","src":"17641:43:28"},"nativeSrc":"17641:72:28","nodeType":"YulFunctionCall","src":"17641:72:28"},"nativeSrc":"17641:72:28","nodeType":"YulExpressionStatement","src":"17641:72:28"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"17767:6:28","nodeType":"YulIdentifier","src":"17767:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"17780:9:28","nodeType":"YulIdentifier","src":"17780:9:28"},{"kind":"number","nativeSrc":"17791:2:28","nodeType":"YulLiteral","src":"17791:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17776:3:28","nodeType":"YulIdentifier","src":"17776:3:28"},"nativeSrc":"17776:18:28","nodeType":"YulFunctionCall","src":"17776:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"17723:43:28","nodeType":"YulIdentifier","src":"17723:43:28"},"nativeSrc":"17723:72:28","nodeType":"YulFunctionCall","src":"17723:72:28"},"nativeSrc":"17723:72:28","nodeType":"YulExpressionStatement","src":"17723:72:28"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"17849:6:28","nodeType":"YulIdentifier","src":"17849:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"17862:9:28","nodeType":"YulIdentifier","src":"17862:9:28"},{"kind":"number","nativeSrc":"17873:2:28","nodeType":"YulLiteral","src":"17873:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17858:3:28","nodeType":"YulIdentifier","src":"17858:3:28"},"nativeSrc":"17858:18:28","nodeType":"YulFunctionCall","src":"17858:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17805:43:28","nodeType":"YulIdentifier","src":"17805:43:28"},"nativeSrc":"17805:72:28","nodeType":"YulFunctionCall","src":"17805:72:28"},"nativeSrc":"17805:72:28","nodeType":"YulExpressionStatement","src":"17805:72:28"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"17931:6:28","nodeType":"YulIdentifier","src":"17931:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"17944:9:28","nodeType":"YulIdentifier","src":"17944:9:28"},{"kind":"number","nativeSrc":"17955:3:28","nodeType":"YulLiteral","src":"17955:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"17940:3:28","nodeType":"YulIdentifier","src":"17940:3:28"},"nativeSrc":"17940:19:28","nodeType":"YulFunctionCall","src":"17940:19:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17887:43:28","nodeType":"YulIdentifier","src":"17887:43:28"},"nativeSrc":"17887:73:28","nodeType":"YulFunctionCall","src":"17887:73:28"},"nativeSrc":"17887:73:28","nodeType":"YulExpressionStatement","src":"17887:73:28"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"18014:6:28","nodeType":"YulIdentifier","src":"18014:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"18027:9:28","nodeType":"YulIdentifier","src":"18027:9:28"},{"kind":"number","nativeSrc":"18038:3:28","nodeType":"YulLiteral","src":"18038:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"18023:3:28","nodeType":"YulIdentifier","src":"18023:3:28"},"nativeSrc":"18023:19:28","nodeType":"YulFunctionCall","src":"18023:19:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17970:43:28","nodeType":"YulIdentifier","src":"17970:43:28"},"nativeSrc":"17970:73:28","nodeType":"YulFunctionCall","src":"17970:73:28"},"nativeSrc":"17970:73:28","nodeType":"YulExpressionStatement","src":"17970:73:28"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"17275:775:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17445:9:28","nodeType":"YulTypedName","src":"17445:9:28","type":""},{"name":"value5","nativeSrc":"17457:6:28","nodeType":"YulTypedName","src":"17457:6:28","type":""},{"name":"value4","nativeSrc":"17465:6:28","nodeType":"YulTypedName","src":"17465:6:28","type":""},{"name":"value3","nativeSrc":"17473:6:28","nodeType":"YulTypedName","src":"17473:6:28","type":""},{"name":"value2","nativeSrc":"17481:6:28","nodeType":"YulTypedName","src":"17481:6:28","type":""},{"name":"value1","nativeSrc":"17489:6:28","nodeType":"YulTypedName","src":"17489:6:28","type":""},{"name":"value0","nativeSrc":"17497:6:28","nodeType":"YulTypedName","src":"17497:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17508:4:28","nodeType":"YulTypedName","src":"17508:4:28","type":""}],"src":"17275:775:28"},{"body":{"nativeSrc":"18182:206:28","nodeType":"YulBlock","src":"18182:206:28","statements":[{"nativeSrc":"18192:26:28","nodeType":"YulAssignment","src":"18192:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"18204:9:28","nodeType":"YulIdentifier","src":"18204:9:28"},{"kind":"number","nativeSrc":"18215:2:28","nodeType":"YulLiteral","src":"18215:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18200:3:28","nodeType":"YulIdentifier","src":"18200:3:28"},"nativeSrc":"18200:18:28","nodeType":"YulFunctionCall","src":"18200:18:28"},"variableNames":[{"name":"tail","nativeSrc":"18192:4:28","nodeType":"YulIdentifier","src":"18192:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"18272:6:28","nodeType":"YulIdentifier","src":"18272:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"18285:9:28","nodeType":"YulIdentifier","src":"18285:9:28"},{"kind":"number","nativeSrc":"18296:1:28","nodeType":"YulLiteral","src":"18296:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18281:3:28","nodeType":"YulIdentifier","src":"18281:3:28"},"nativeSrc":"18281:17:28","nodeType":"YulFunctionCall","src":"18281:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"18228:43:28","nodeType":"YulIdentifier","src":"18228:43:28"},"nativeSrc":"18228:71:28","nodeType":"YulFunctionCall","src":"18228:71:28"},"nativeSrc":"18228:71:28","nodeType":"YulExpressionStatement","src":"18228:71:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"18353:6:28","nodeType":"YulIdentifier","src":"18353:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"18366:9:28","nodeType":"YulIdentifier","src":"18366:9:28"},{"kind":"number","nativeSrc":"18377:2:28","nodeType":"YulLiteral","src":"18377:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18362:3:28","nodeType":"YulIdentifier","src":"18362:3:28"},"nativeSrc":"18362:18:28","nodeType":"YulFunctionCall","src":"18362:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"18309:43:28","nodeType":"YulIdentifier","src":"18309:43:28"},"nativeSrc":"18309:72:28","nodeType":"YulFunctionCall","src":"18309:72:28"},"nativeSrc":"18309:72:28","nodeType":"YulExpressionStatement","src":"18309:72:28"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"18056:332:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18146:9:28","nodeType":"YulTypedName","src":"18146:9:28","type":""},{"name":"value1","nativeSrc":"18158:6:28","nodeType":"YulTypedName","src":"18158:6:28","type":""},{"name":"value0","nativeSrc":"18166:6:28","nodeType":"YulTypedName","src":"18166:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18177:4:28","nodeType":"YulTypedName","src":"18177:4:28","type":""}],"src":"18056:332:28"},{"body":{"nativeSrc":"18422:152:28","nodeType":"YulBlock","src":"18422:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18439:1:28","nodeType":"YulLiteral","src":"18439:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"18442:77:28","nodeType":"YulLiteral","src":"18442:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"18432:6:28","nodeType":"YulIdentifier","src":"18432:6:28"},"nativeSrc":"18432:88:28","nodeType":"YulFunctionCall","src":"18432:88:28"},"nativeSrc":"18432:88:28","nodeType":"YulExpressionStatement","src":"18432:88:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18536:1:28","nodeType":"YulLiteral","src":"18536:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"18539:4:28","nodeType":"YulLiteral","src":"18539:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"18529:6:28","nodeType":"YulIdentifier","src":"18529:6:28"},"nativeSrc":"18529:15:28","nodeType":"YulFunctionCall","src":"18529:15:28"},"nativeSrc":"18529:15:28","nodeType":"YulExpressionStatement","src":"18529:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:1:28","nodeType":"YulLiteral","src":"18560:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"18563:4:28","nodeType":"YulLiteral","src":"18563:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"18553:6:28","nodeType":"YulIdentifier","src":"18553:6:28"},"nativeSrc":"18553:15:28","nodeType":"YulFunctionCall","src":"18553:15:28"},"nativeSrc":"18553:15:28","nodeType":"YulExpressionStatement","src":"18553:15:28"}]},"name":"panic_error_0x11","nativeSrc":"18394:180:28","nodeType":"YulFunctionDefinition","src":"18394:180:28"},{"body":{"nativeSrc":"18624:200:28","nodeType":"YulBlock","src":"18624:200:28","statements":[{"nativeSrc":"18634:25:28","nodeType":"YulAssignment","src":"18634:25:28","value":{"arguments":[{"name":"x","nativeSrc":"18657:1:28","nodeType":"YulIdentifier","src":"18657:1:28"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"18639:17:28","nodeType":"YulIdentifier","src":"18639:17:28"},"nativeSrc":"18639:20:28","nodeType":"YulFunctionCall","src":"18639:20:28"},"variableNames":[{"name":"x","nativeSrc":"18634:1:28","nodeType":"YulIdentifier","src":"18634:1:28"}]},{"nativeSrc":"18668:25:28","nodeType":"YulAssignment","src":"18668:25:28","value":{"arguments":[{"name":"y","nativeSrc":"18691:1:28","nodeType":"YulIdentifier","src":"18691:1:28"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"18673:17:28","nodeType":"YulIdentifier","src":"18673:17:28"},"nativeSrc":"18673:20:28","nodeType":"YulFunctionCall","src":"18673:20:28"},"variableNames":[{"name":"y","nativeSrc":"18668:1:28","nodeType":"YulIdentifier","src":"18668:1:28"}]},{"nativeSrc":"18702:16:28","nodeType":"YulAssignment","src":"18702:16:28","value":{"arguments":[{"name":"x","nativeSrc":"18713:1:28","nodeType":"YulIdentifier","src":"18713:1:28"},{"name":"y","nativeSrc":"18716:1:28","nodeType":"YulIdentifier","src":"18716:1:28"}],"functionName":{"name":"add","nativeSrc":"18709:3:28","nodeType":"YulIdentifier","src":"18709:3:28"},"nativeSrc":"18709:9:28","nodeType":"YulFunctionCall","src":"18709:9:28"},"variableNames":[{"name":"sum","nativeSrc":"18702:3:28","nodeType":"YulIdentifier","src":"18702:3:28"}]},{"body":{"nativeSrc":"18795:22:28","nodeType":"YulBlock","src":"18795:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"18797:16:28","nodeType":"YulIdentifier","src":"18797:16:28"},"nativeSrc":"18797:18:28","nodeType":"YulFunctionCall","src":"18797:18:28"},"nativeSrc":"18797:18:28","nodeType":"YulExpressionStatement","src":"18797:18:28"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"18734:3:28","nodeType":"YulIdentifier","src":"18734:3:28"},{"kind":"number","nativeSrc":"18739:54:28","nodeType":"YulLiteral","src":"18739:54:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"18731:2:28","nodeType":"YulIdentifier","src":"18731:2:28"},"nativeSrc":"18731:63:28","nodeType":"YulFunctionCall","src":"18731:63:28"},"nativeSrc":"18728:89:28","nodeType":"YulIf","src":"18728:89:28"}]},"name":"checked_add_t_uint208","nativeSrc":"18580:244:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"18611:1:28","nodeType":"YulTypedName","src":"18611:1:28","type":""},{"name":"y","nativeSrc":"18614:1:28","nodeType":"YulTypedName","src":"18614:1:28","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"18620:3:28","nodeType":"YulTypedName","src":"18620:3:28","type":""}],"src":"18580:244:28"},{"body":{"nativeSrc":"18875:202:28","nodeType":"YulBlock","src":"18875:202:28","statements":[{"nativeSrc":"18885:25:28","nodeType":"YulAssignment","src":"18885:25:28","value":{"arguments":[{"name":"x","nativeSrc":"18908:1:28","nodeType":"YulIdentifier","src":"18908:1:28"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"18890:17:28","nodeType":"YulIdentifier","src":"18890:17:28"},"nativeSrc":"18890:20:28","nodeType":"YulFunctionCall","src":"18890:20:28"},"variableNames":[{"name":"x","nativeSrc":"18885:1:28","nodeType":"YulIdentifier","src":"18885:1:28"}]},{"nativeSrc":"18919:25:28","nodeType":"YulAssignment","src":"18919:25:28","value":{"arguments":[{"name":"y","nativeSrc":"18942:1:28","nodeType":"YulIdentifier","src":"18942:1:28"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"18924:17:28","nodeType":"YulIdentifier","src":"18924:17:28"},"nativeSrc":"18924:20:28","nodeType":"YulFunctionCall","src":"18924:20:28"},"variableNames":[{"name":"y","nativeSrc":"18919:1:28","nodeType":"YulIdentifier","src":"18919:1:28"}]},{"nativeSrc":"18953:17:28","nodeType":"YulAssignment","src":"18953:17:28","value":{"arguments":[{"name":"x","nativeSrc":"18965:1:28","nodeType":"YulIdentifier","src":"18965:1:28"},{"name":"y","nativeSrc":"18968:1:28","nodeType":"YulIdentifier","src":"18968:1:28"}],"functionName":{"name":"sub","nativeSrc":"18961:3:28","nodeType":"YulIdentifier","src":"18961:3:28"},"nativeSrc":"18961:9:28","nodeType":"YulFunctionCall","src":"18961:9:28"},"variableNames":[{"name":"diff","nativeSrc":"18953:4:28","nodeType":"YulIdentifier","src":"18953:4:28"}]},{"body":{"nativeSrc":"19048:22:28","nodeType":"YulBlock","src":"19048:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"19050:16:28","nodeType":"YulIdentifier","src":"19050:16:28"},"nativeSrc":"19050:18:28","nodeType":"YulFunctionCall","src":"19050:18:28"},"nativeSrc":"19050:18:28","nodeType":"YulExpressionStatement","src":"19050:18:28"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"18986:4:28","nodeType":"YulIdentifier","src":"18986:4:28"},{"kind":"number","nativeSrc":"18992:54:28","nodeType":"YulLiteral","src":"18992:54:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"18983:2:28","nodeType":"YulIdentifier","src":"18983:2:28"},"nativeSrc":"18983:64:28","nodeType":"YulFunctionCall","src":"18983:64:28"},"nativeSrc":"18980:90:28","nodeType":"YulIf","src":"18980:90:28"}]},"name":"checked_sub_t_uint208","nativeSrc":"18830:247:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"18861:1:28","nodeType":"YulTypedName","src":"18861:1:28","type":""},{"name":"y","nativeSrc":"18864:1:28","nodeType":"YulTypedName","src":"18864:1:28","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"18870:4:28","nodeType":"YulTypedName","src":"18870:4:28","type":""}],"src":"18830:247:28"},{"body":{"nativeSrc":"19237:288:28","nodeType":"YulBlock","src":"19237:288:28","statements":[{"nativeSrc":"19247:26:28","nodeType":"YulAssignment","src":"19247:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"19259:9:28","nodeType":"YulIdentifier","src":"19259:9:28"},{"kind":"number","nativeSrc":"19270:2:28","nodeType":"YulLiteral","src":"19270:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19255:3:28","nodeType":"YulIdentifier","src":"19255:3:28"},"nativeSrc":"19255:18:28","nodeType":"YulFunctionCall","src":"19255:18:28"},"variableNames":[{"name":"tail","nativeSrc":"19247:4:28","nodeType":"YulIdentifier","src":"19247:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"19327:6:28","nodeType":"YulIdentifier","src":"19327:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"19340:9:28","nodeType":"YulIdentifier","src":"19340:9:28"},{"kind":"number","nativeSrc":"19351:1:28","nodeType":"YulLiteral","src":"19351:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19336:3:28","nodeType":"YulIdentifier","src":"19336:3:28"},"nativeSrc":"19336:17:28","nodeType":"YulFunctionCall","src":"19336:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19283:43:28","nodeType":"YulIdentifier","src":"19283:43:28"},"nativeSrc":"19283:71:28","nodeType":"YulFunctionCall","src":"19283:71:28"},"nativeSrc":"19283:71:28","nodeType":"YulExpressionStatement","src":"19283:71:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"19408:6:28","nodeType":"YulIdentifier","src":"19408:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"19421:9:28","nodeType":"YulIdentifier","src":"19421:9:28"},{"kind":"number","nativeSrc":"19432:2:28","nodeType":"YulLiteral","src":"19432:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19417:3:28","nodeType":"YulIdentifier","src":"19417:3:28"},"nativeSrc":"19417:18:28","nodeType":"YulFunctionCall","src":"19417:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"19364:43:28","nodeType":"YulIdentifier","src":"19364:43:28"},"nativeSrc":"19364:72:28","nodeType":"YulFunctionCall","src":"19364:72:28"},"nativeSrc":"19364:72:28","nodeType":"YulExpressionStatement","src":"19364:72:28"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"19490:6:28","nodeType":"YulIdentifier","src":"19490:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"19503:9:28","nodeType":"YulIdentifier","src":"19503:9:28"},{"kind":"number","nativeSrc":"19514:2:28","nodeType":"YulLiteral","src":"19514:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19499:3:28","nodeType":"YulIdentifier","src":"19499:3:28"},"nativeSrc":"19499:18:28","nodeType":"YulFunctionCall","src":"19499:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"19446:43:28","nodeType":"YulIdentifier","src":"19446:43:28"},"nativeSrc":"19446:72:28","nodeType":"YulFunctionCall","src":"19446:72:28"},"nativeSrc":"19446:72:28","nodeType":"YulExpressionStatement","src":"19446:72:28"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"19083:442:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19193:9:28","nodeType":"YulTypedName","src":"19193:9:28","type":""},{"name":"value2","nativeSrc":"19205:6:28","nodeType":"YulTypedName","src":"19205:6:28","type":""},{"name":"value1","nativeSrc":"19213:6:28","nodeType":"YulTypedName","src":"19213:6:28","type":""},{"name":"value0","nativeSrc":"19221:6:28","nodeType":"YulTypedName","src":"19221:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19232:4:28","nodeType":"YulTypedName","src":"19232:4:28","type":""}],"src":"19083:442:28"},{"body":{"nativeSrc":"19585:32:28","nodeType":"YulBlock","src":"19585:32:28","statements":[{"nativeSrc":"19595:16:28","nodeType":"YulAssignment","src":"19595:16:28","value":{"name":"value","nativeSrc":"19606:5:28","nodeType":"YulIdentifier","src":"19606:5:28"},"variableNames":[{"name":"cleaned","nativeSrc":"19595:7:28","nodeType":"YulIdentifier","src":"19595:7:28"}]}]},"name":"cleanup_t_rational_48_by_1","nativeSrc":"19531:86:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19567:5:28","nodeType":"YulTypedName","src":"19567:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"19577:7:28","nodeType":"YulTypedName","src":"19577:7:28","type":""}],"src":"19531:86:28"},{"body":{"nativeSrc":"19655:28:28","nodeType":"YulBlock","src":"19655:28:28","statements":[{"nativeSrc":"19665:12:28","nodeType":"YulAssignment","src":"19665:12:28","value":{"name":"value","nativeSrc":"19672:5:28","nodeType":"YulIdentifier","src":"19672:5:28"},"variableNames":[{"name":"ret","nativeSrc":"19665:3:28","nodeType":"YulIdentifier","src":"19665:3:28"}]}]},"name":"identity","nativeSrc":"19623:60:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19641:5:28","nodeType":"YulTypedName","src":"19641:5:28","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"19651:3:28","nodeType":"YulTypedName","src":"19651:3:28","type":""}],"src":"19623:60:28"},{"body":{"nativeSrc":"19756:89:28","nodeType":"YulBlock","src":"19756:89:28","statements":[{"nativeSrc":"19766:73:28","nodeType":"YulAssignment","src":"19766:73:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19831:5:28","nodeType":"YulIdentifier","src":"19831:5:28"}],"functionName":{"name":"cleanup_t_rational_48_by_1","nativeSrc":"19804:26:28","nodeType":"YulIdentifier","src":"19804:26:28"},"nativeSrc":"19804:33:28","nodeType":"YulFunctionCall","src":"19804:33:28"}],"functionName":{"name":"identity","nativeSrc":"19795:8:28","nodeType":"YulIdentifier","src":"19795:8:28"},"nativeSrc":"19795:43:28","nodeType":"YulFunctionCall","src":"19795:43:28"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"19779:15:28","nodeType":"YulIdentifier","src":"19779:15:28"},"nativeSrc":"19779:60:28","nodeType":"YulFunctionCall","src":"19779:60:28"},"variableNames":[{"name":"converted","nativeSrc":"19766:9:28","nodeType":"YulIdentifier","src":"19766:9:28"}]}]},"name":"convert_t_rational_48_by_1_to_t_uint8","nativeSrc":"19689:156:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19736:5:28","nodeType":"YulTypedName","src":"19736:5:28","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"19746:9:28","nodeType":"YulTypedName","src":"19746:9:28","type":""}],"src":"19689:156:28"},{"body":{"nativeSrc":"19923:73:28","nodeType":"YulBlock","src":"19923:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"19940:3:28","nodeType":"YulIdentifier","src":"19940:3:28"},{"arguments":[{"name":"value","nativeSrc":"19983:5:28","nodeType":"YulIdentifier","src":"19983:5:28"}],"functionName":{"name":"convert_t_rational_48_by_1_to_t_uint8","nativeSrc":"19945:37:28","nodeType":"YulIdentifier","src":"19945:37:28"},"nativeSrc":"19945:44:28","nodeType":"YulFunctionCall","src":"19945:44:28"}],"functionName":{"name":"mstore","nativeSrc":"19933:6:28","nodeType":"YulIdentifier","src":"19933:6:28"},"nativeSrc":"19933:57:28","nodeType":"YulFunctionCall","src":"19933:57:28"},"nativeSrc":"19933:57:28","nodeType":"YulExpressionStatement","src":"19933:57:28"}]},"name":"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack","nativeSrc":"19851:145:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19911:5:28","nodeType":"YulTypedName","src":"19911:5:28","type":""},{"name":"pos","nativeSrc":"19918:3:28","nodeType":"YulTypedName","src":"19918:3:28","type":""}],"src":"19851:145:28"},{"body":{"nativeSrc":"20135:213:28","nodeType":"YulBlock","src":"20135:213:28","statements":[{"nativeSrc":"20145:26:28","nodeType":"YulAssignment","src":"20145:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"20157:9:28","nodeType":"YulIdentifier","src":"20157:9:28"},{"kind":"number","nativeSrc":"20168:2:28","nodeType":"YulLiteral","src":"20168:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20153:3:28","nodeType":"YulIdentifier","src":"20153:3:28"},"nativeSrc":"20153:18:28","nodeType":"YulFunctionCall","src":"20153:18:28"},"variableNames":[{"name":"tail","nativeSrc":"20145:4:28","nodeType":"YulIdentifier","src":"20145:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20232:6:28","nodeType":"YulIdentifier","src":"20232:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"20245:9:28","nodeType":"YulIdentifier","src":"20245:9:28"},{"kind":"number","nativeSrc":"20256:1:28","nodeType":"YulLiteral","src":"20256:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20241:3:28","nodeType":"YulIdentifier","src":"20241:3:28"},"nativeSrc":"20241:17:28","nodeType":"YulFunctionCall","src":"20241:17:28"}],"functionName":{"name":"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack","nativeSrc":"20181:50:28","nodeType":"YulIdentifier","src":"20181:50:28"},"nativeSrc":"20181:78:28","nodeType":"YulFunctionCall","src":"20181:78:28"},"nativeSrc":"20181:78:28","nodeType":"YulExpressionStatement","src":"20181:78:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20313:6:28","nodeType":"YulIdentifier","src":"20313:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"20326:9:28","nodeType":"YulIdentifier","src":"20326:9:28"},{"kind":"number","nativeSrc":"20337:2:28","nodeType":"YulLiteral","src":"20337:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20322:3:28","nodeType":"YulIdentifier","src":"20322:3:28"},"nativeSrc":"20322:18:28","nodeType":"YulFunctionCall","src":"20322:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20269:43:28","nodeType":"YulIdentifier","src":"20269:43:28"},"nativeSrc":"20269:72:28","nodeType":"YulFunctionCall","src":"20269:72:28"},"nativeSrc":"20269:72:28","nodeType":"YulExpressionStatement","src":"20269:72:28"}]},"name":"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"20002:346:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20099:9:28","nodeType":"YulTypedName","src":"20099:9:28","type":""},{"name":"value1","nativeSrc":"20111:6:28","nodeType":"YulTypedName","src":"20111:6:28","type":""},{"name":"value0","nativeSrc":"20119:6:28","nodeType":"YulTypedName","src":"20119:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20130:4:28","nodeType":"YulTypedName","src":"20130:4:28","type":""}],"src":"20002:346:28"},{"body":{"nativeSrc":"20399:149:28","nodeType":"YulBlock","src":"20399:149:28","statements":[{"nativeSrc":"20409:25:28","nodeType":"YulAssignment","src":"20409:25:28","value":{"arguments":[{"name":"x","nativeSrc":"20432:1:28","nodeType":"YulIdentifier","src":"20432:1:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20414:17:28","nodeType":"YulIdentifier","src":"20414:17:28"},"nativeSrc":"20414:20:28","nodeType":"YulFunctionCall","src":"20414:20:28"},"variableNames":[{"name":"x","nativeSrc":"20409:1:28","nodeType":"YulIdentifier","src":"20409:1:28"}]},{"nativeSrc":"20443:25:28","nodeType":"YulAssignment","src":"20443:25:28","value":{"arguments":[{"name":"y","nativeSrc":"20466:1:28","nodeType":"YulIdentifier","src":"20466:1:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20448:17:28","nodeType":"YulIdentifier","src":"20448:17:28"},"nativeSrc":"20448:20:28","nodeType":"YulFunctionCall","src":"20448:20:28"},"variableNames":[{"name":"y","nativeSrc":"20443:1:28","nodeType":"YulIdentifier","src":"20443:1:28"}]},{"nativeSrc":"20477:17:28","nodeType":"YulAssignment","src":"20477:17:28","value":{"arguments":[{"name":"x","nativeSrc":"20489:1:28","nodeType":"YulIdentifier","src":"20489:1:28"},{"name":"y","nativeSrc":"20492:1:28","nodeType":"YulIdentifier","src":"20492:1:28"}],"functionName":{"name":"sub","nativeSrc":"20485:3:28","nodeType":"YulIdentifier","src":"20485:3:28"},"nativeSrc":"20485:9:28","nodeType":"YulFunctionCall","src":"20485:9:28"},"variableNames":[{"name":"diff","nativeSrc":"20477:4:28","nodeType":"YulIdentifier","src":"20477:4:28"}]},{"body":{"nativeSrc":"20519:22:28","nodeType":"YulBlock","src":"20519:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20521:16:28","nodeType":"YulIdentifier","src":"20521:16:28"},"nativeSrc":"20521:18:28","nodeType":"YulFunctionCall","src":"20521:18:28"},"nativeSrc":"20521:18:28","nodeType":"YulExpressionStatement","src":"20521:18:28"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"20510:4:28","nodeType":"YulIdentifier","src":"20510:4:28"},{"name":"x","nativeSrc":"20516:1:28","nodeType":"YulIdentifier","src":"20516:1:28"}],"functionName":{"name":"gt","nativeSrc":"20507:2:28","nodeType":"YulIdentifier","src":"20507:2:28"},"nativeSrc":"20507:11:28","nodeType":"YulFunctionCall","src":"20507:11:28"},"nativeSrc":"20504:37:28","nodeType":"YulIf","src":"20504:37:28"}]},"name":"checked_sub_t_uint256","nativeSrc":"20354:194:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"20385:1:28","nodeType":"YulTypedName","src":"20385:1:28","type":""},{"name":"y","nativeSrc":"20388:1:28","nodeType":"YulTypedName","src":"20388:1:28","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"20394:4:28","nodeType":"YulTypedName","src":"20394:4:28","type":""}],"src":"20354:194:28"},{"body":{"nativeSrc":"20598:147:28","nodeType":"YulBlock","src":"20598:147:28","statements":[{"nativeSrc":"20608:25:28","nodeType":"YulAssignment","src":"20608:25:28","value":{"arguments":[{"name":"x","nativeSrc":"20631:1:28","nodeType":"YulIdentifier","src":"20631:1:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20613:17:28","nodeType":"YulIdentifier","src":"20613:17:28"},"nativeSrc":"20613:20:28","nodeType":"YulFunctionCall","src":"20613:20:28"},"variableNames":[{"name":"x","nativeSrc":"20608:1:28","nodeType":"YulIdentifier","src":"20608:1:28"}]},{"nativeSrc":"20642:25:28","nodeType":"YulAssignment","src":"20642:25:28","value":{"arguments":[{"name":"y","nativeSrc":"20665:1:28","nodeType":"YulIdentifier","src":"20665:1:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20647:17:28","nodeType":"YulIdentifier","src":"20647:17:28"},"nativeSrc":"20647:20:28","nodeType":"YulFunctionCall","src":"20647:20:28"},"variableNames":[{"name":"y","nativeSrc":"20642:1:28","nodeType":"YulIdentifier","src":"20642:1:28"}]},{"nativeSrc":"20676:16:28","nodeType":"YulAssignment","src":"20676:16:28","value":{"arguments":[{"name":"x","nativeSrc":"20687:1:28","nodeType":"YulIdentifier","src":"20687:1:28"},{"name":"y","nativeSrc":"20690:1:28","nodeType":"YulIdentifier","src":"20690:1:28"}],"functionName":{"name":"add","nativeSrc":"20683:3:28","nodeType":"YulIdentifier","src":"20683:3:28"},"nativeSrc":"20683:9:28","nodeType":"YulFunctionCall","src":"20683:9:28"},"variableNames":[{"name":"sum","nativeSrc":"20676:3:28","nodeType":"YulIdentifier","src":"20676:3:28"}]},{"body":{"nativeSrc":"20716:22:28","nodeType":"YulBlock","src":"20716:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20718:16:28","nodeType":"YulIdentifier","src":"20718:16:28"},"nativeSrc":"20718:18:28","nodeType":"YulFunctionCall","src":"20718:18:28"},"nativeSrc":"20718:18:28","nodeType":"YulExpressionStatement","src":"20718:18:28"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"20708:1:28","nodeType":"YulIdentifier","src":"20708:1:28"},{"name":"sum","nativeSrc":"20711:3:28","nodeType":"YulIdentifier","src":"20711:3:28"}],"functionName":{"name":"gt","nativeSrc":"20705:2:28","nodeType":"YulIdentifier","src":"20705:2:28"},"nativeSrc":"20705:10:28","nodeType":"YulFunctionCall","src":"20705:10:28"},"nativeSrc":"20702:36:28","nodeType":"YulIf","src":"20702:36:28"}]},"name":"checked_add_t_uint256","nativeSrc":"20554:191:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"20585:1:28","nodeType":"YulTypedName","src":"20585:1:28","type":""},{"name":"y","nativeSrc":"20588:1:28","nodeType":"YulTypedName","src":"20588:1:28","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"20594:3:28","nodeType":"YulTypedName","src":"20594:3:28","type":""}],"src":"20554:191:28"},{"body":{"nativeSrc":"20877:206:28","nodeType":"YulBlock","src":"20877:206:28","statements":[{"nativeSrc":"20887:26:28","nodeType":"YulAssignment","src":"20887:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"20899:9:28","nodeType":"YulIdentifier","src":"20899:9:28"},{"kind":"number","nativeSrc":"20910:2:28","nodeType":"YulLiteral","src":"20910:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20895:3:28","nodeType":"YulIdentifier","src":"20895:3:28"},"nativeSrc":"20895:18:28","nodeType":"YulFunctionCall","src":"20895:18:28"},"variableNames":[{"name":"tail","nativeSrc":"20887:4:28","nodeType":"YulIdentifier","src":"20887:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20967:6:28","nodeType":"YulIdentifier","src":"20967:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"20980:9:28","nodeType":"YulIdentifier","src":"20980:9:28"},{"kind":"number","nativeSrc":"20991:1:28","nodeType":"YulLiteral","src":"20991:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20976:3:28","nodeType":"YulIdentifier","src":"20976:3:28"},"nativeSrc":"20976:17:28","nodeType":"YulFunctionCall","src":"20976:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20923:43:28","nodeType":"YulIdentifier","src":"20923:43:28"},"nativeSrc":"20923:71:28","nodeType":"YulFunctionCall","src":"20923:71:28"},"nativeSrc":"20923:71:28","nodeType":"YulExpressionStatement","src":"20923:71:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21048:6:28","nodeType":"YulIdentifier","src":"21048:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"21061:9:28","nodeType":"YulIdentifier","src":"21061:9:28"},{"kind":"number","nativeSrc":"21072:2:28","nodeType":"YulLiteral","src":"21072:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21057:3:28","nodeType":"YulIdentifier","src":"21057:3:28"},"nativeSrc":"21057:18:28","nodeType":"YulFunctionCall","src":"21057:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21004:43:28","nodeType":"YulIdentifier","src":"21004:43:28"},"nativeSrc":"21004:72:28","nodeType":"YulFunctionCall","src":"21004:72:28"},"nativeSrc":"21004:72:28","nodeType":"YulExpressionStatement","src":"21004:72:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"20751:332:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20841:9:28","nodeType":"YulTypedName","src":"20841:9:28","type":""},{"name":"value1","nativeSrc":"20853:6:28","nodeType":"YulTypedName","src":"20853:6:28","type":""},{"name":"value0","nativeSrc":"20861:6:28","nodeType":"YulTypedName","src":"20861:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20872:4:28","nodeType":"YulTypedName","src":"20872:4:28","type":""}],"src":"20751:332:28"},{"body":{"nativeSrc":"21299:454:28","nodeType":"YulBlock","src":"21299:454:28","statements":[{"nativeSrc":"21309:27:28","nodeType":"YulAssignment","src":"21309:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"21321:9:28","nodeType":"YulIdentifier","src":"21321:9:28"},{"kind":"number","nativeSrc":"21332:3:28","nodeType":"YulLiteral","src":"21332:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"21317:3:28","nodeType":"YulIdentifier","src":"21317:3:28"},"nativeSrc":"21317:19:28","nodeType":"YulFunctionCall","src":"21317:19:28"},"variableNames":[{"name":"tail","nativeSrc":"21309:4:28","nodeType":"YulIdentifier","src":"21309:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21390:6:28","nodeType":"YulIdentifier","src":"21390:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"21403:9:28","nodeType":"YulIdentifier","src":"21403:9:28"},{"kind":"number","nativeSrc":"21414:1:28","nodeType":"YulLiteral","src":"21414:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21399:3:28","nodeType":"YulIdentifier","src":"21399:3:28"},"nativeSrc":"21399:17:28","nodeType":"YulFunctionCall","src":"21399:17:28"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21346:43:28","nodeType":"YulIdentifier","src":"21346:43:28"},"nativeSrc":"21346:71:28","nodeType":"YulFunctionCall","src":"21346:71:28"},"nativeSrc":"21346:71:28","nodeType":"YulExpressionStatement","src":"21346:71:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21471:6:28","nodeType":"YulIdentifier","src":"21471:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"21484:9:28","nodeType":"YulIdentifier","src":"21484:9:28"},{"kind":"number","nativeSrc":"21495:2:28","nodeType":"YulLiteral","src":"21495:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21480:3:28","nodeType":"YulIdentifier","src":"21480:3:28"},"nativeSrc":"21480:18:28","nodeType":"YulFunctionCall","src":"21480:18:28"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21427:43:28","nodeType":"YulIdentifier","src":"21427:43:28"},"nativeSrc":"21427:72:28","nodeType":"YulFunctionCall","src":"21427:72:28"},"nativeSrc":"21427:72:28","nodeType":"YulExpressionStatement","src":"21427:72:28"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"21553:6:28","nodeType":"YulIdentifier","src":"21553:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"21566:9:28","nodeType":"YulIdentifier","src":"21566:9:28"},{"kind":"number","nativeSrc":"21577:2:28","nodeType":"YulLiteral","src":"21577:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21562:3:28","nodeType":"YulIdentifier","src":"21562:3:28"},"nativeSrc":"21562:18:28","nodeType":"YulFunctionCall","src":"21562:18:28"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21509:43:28","nodeType":"YulIdentifier","src":"21509:43:28"},"nativeSrc":"21509:72:28","nodeType":"YulFunctionCall","src":"21509:72:28"},"nativeSrc":"21509:72:28","nodeType":"YulExpressionStatement","src":"21509:72:28"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"21635:6:28","nodeType":"YulIdentifier","src":"21635:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"21648:9:28","nodeType":"YulIdentifier","src":"21648:9:28"},{"kind":"number","nativeSrc":"21659:2:28","nodeType":"YulLiteral","src":"21659:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21644:3:28","nodeType":"YulIdentifier","src":"21644:3:28"},"nativeSrc":"21644:18:28","nodeType":"YulFunctionCall","src":"21644:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21591:43:28","nodeType":"YulIdentifier","src":"21591:43:28"},"nativeSrc":"21591:72:28","nodeType":"YulFunctionCall","src":"21591:72:28"},"nativeSrc":"21591:72:28","nodeType":"YulExpressionStatement","src":"21591:72:28"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"21717:6:28","nodeType":"YulIdentifier","src":"21717:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"21730:9:28","nodeType":"YulIdentifier","src":"21730:9:28"},{"kind":"number","nativeSrc":"21741:3:28","nodeType":"YulLiteral","src":"21741:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"21726:3:28","nodeType":"YulIdentifier","src":"21726:3:28"},"nativeSrc":"21726:19:28","nodeType":"YulFunctionCall","src":"21726:19:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"21673:43:28","nodeType":"YulIdentifier","src":"21673:43:28"},"nativeSrc":"21673:73:28","nodeType":"YulFunctionCall","src":"21673:73:28"},"nativeSrc":"21673:73:28","nodeType":"YulExpressionStatement","src":"21673:73:28"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"21089:664:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21239:9:28","nodeType":"YulTypedName","src":"21239:9:28","type":""},{"name":"value4","nativeSrc":"21251:6:28","nodeType":"YulTypedName","src":"21251:6:28","type":""},{"name":"value3","nativeSrc":"21259:6:28","nodeType":"YulTypedName","src":"21259:6:28","type":""},{"name":"value2","nativeSrc":"21267:6:28","nodeType":"YulTypedName","src":"21267:6:28","type":""},{"name":"value1","nativeSrc":"21275:6:28","nodeType":"YulTypedName","src":"21275:6:28","type":""},{"name":"value0","nativeSrc":"21283:6:28","nodeType":"YulTypedName","src":"21283:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21294:4:28","nodeType":"YulTypedName","src":"21294:4:28","type":""}],"src":"21089:664:28"},{"body":{"nativeSrc":"21787:152:28","nodeType":"YulBlock","src":"21787:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21804:1:28","nodeType":"YulLiteral","src":"21804:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"21807:77:28","nodeType":"YulLiteral","src":"21807:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"21797:6:28","nodeType":"YulIdentifier","src":"21797:6:28"},"nativeSrc":"21797:88:28","nodeType":"YulFunctionCall","src":"21797:88:28"},"nativeSrc":"21797:88:28","nodeType":"YulExpressionStatement","src":"21797:88:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21901:1:28","nodeType":"YulLiteral","src":"21901:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"21904:4:28","nodeType":"YulLiteral","src":"21904:4:28","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"21894:6:28","nodeType":"YulIdentifier","src":"21894:6:28"},"nativeSrc":"21894:15:28","nodeType":"YulFunctionCall","src":"21894:15:28"},"nativeSrc":"21894:15:28","nodeType":"YulExpressionStatement","src":"21894:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21925:1:28","nodeType":"YulLiteral","src":"21925:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"21928:4:28","nodeType":"YulLiteral","src":"21928:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"21918:6:28","nodeType":"YulIdentifier","src":"21918:6:28"},"nativeSrc":"21918:15:28","nodeType":"YulFunctionCall","src":"21918:15:28"},"nativeSrc":"21918:15:28","nodeType":"YulExpressionStatement","src":"21918:15:28"}]},"name":"panic_error_0x12","nativeSrc":"21759:180:28","nodeType":"YulFunctionDefinition","src":"21759:180:28"},{"body":{"nativeSrc":"22071:206:28","nodeType":"YulBlock","src":"22071:206:28","statements":[{"nativeSrc":"22081:26:28","nodeType":"YulAssignment","src":"22081:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"22093:9:28","nodeType":"YulIdentifier","src":"22093:9:28"},{"kind":"number","nativeSrc":"22104:2:28","nodeType":"YulLiteral","src":"22104:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22089:3:28","nodeType":"YulIdentifier","src":"22089:3:28"},"nativeSrc":"22089:18:28","nodeType":"YulFunctionCall","src":"22089:18:28"},"variableNames":[{"name":"tail","nativeSrc":"22081:4:28","nodeType":"YulIdentifier","src":"22081:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22161:6:28","nodeType":"YulIdentifier","src":"22161:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"22174:9:28","nodeType":"YulIdentifier","src":"22174:9:28"},{"kind":"number","nativeSrc":"22185:1:28","nodeType":"YulLiteral","src":"22185:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22170:3:28","nodeType":"YulIdentifier","src":"22170:3:28"},"nativeSrc":"22170:17:28","nodeType":"YulFunctionCall","src":"22170:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22117:43:28","nodeType":"YulIdentifier","src":"22117:43:28"},"nativeSrc":"22117:71:28","nodeType":"YulFunctionCall","src":"22117:71:28"},"nativeSrc":"22117:71:28","nodeType":"YulExpressionStatement","src":"22117:71:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22242:6:28","nodeType":"YulIdentifier","src":"22242:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"22255:9:28","nodeType":"YulIdentifier","src":"22255:9:28"},{"kind":"number","nativeSrc":"22266:2:28","nodeType":"YulLiteral","src":"22266:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22251:3:28","nodeType":"YulIdentifier","src":"22251:3:28"},"nativeSrc":"22251:18:28","nodeType":"YulFunctionCall","src":"22251:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22198:43:28","nodeType":"YulIdentifier","src":"22198:43:28"},"nativeSrc":"22198:72:28","nodeType":"YulFunctionCall","src":"22198:72:28"},"nativeSrc":"22198:72:28","nodeType":"YulExpressionStatement","src":"22198:72:28"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"21945:332:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22035:9:28","nodeType":"YulTypedName","src":"22035:9:28","type":""},{"name":"value1","nativeSrc":"22047:6:28","nodeType":"YulTypedName","src":"22047:6:28","type":""},{"name":"value0","nativeSrc":"22055:6:28","nodeType":"YulTypedName","src":"22055:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22066:4:28","nodeType":"YulTypedName","src":"22066:4:28","type":""}],"src":"21945:332:28"},{"body":{"nativeSrc":"22337:32:28","nodeType":"YulBlock","src":"22337:32:28","statements":[{"nativeSrc":"22347:16:28","nodeType":"YulAssignment","src":"22347:16:28","value":{"name":"value","nativeSrc":"22358:5:28","nodeType":"YulIdentifier","src":"22358:5:28"},"variableNames":[{"name":"cleaned","nativeSrc":"22347:7:28","nodeType":"YulIdentifier","src":"22347:7:28"}]}]},"name":"cleanup_t_rational_32_by_1","nativeSrc":"22283:86:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22319:5:28","nodeType":"YulTypedName","src":"22319:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"22329:7:28","nodeType":"YulTypedName","src":"22329:7:28","type":""}],"src":"22283:86:28"},{"body":{"nativeSrc":"22442:89:28","nodeType":"YulBlock","src":"22442:89:28","statements":[{"nativeSrc":"22452:73:28","nodeType":"YulAssignment","src":"22452:73:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"22517:5:28","nodeType":"YulIdentifier","src":"22517:5:28"}],"functionName":{"name":"cleanup_t_rational_32_by_1","nativeSrc":"22490:26:28","nodeType":"YulIdentifier","src":"22490:26:28"},"nativeSrc":"22490:33:28","nodeType":"YulFunctionCall","src":"22490:33:28"}],"functionName":{"name":"identity","nativeSrc":"22481:8:28","nodeType":"YulIdentifier","src":"22481:8:28"},"nativeSrc":"22481:43:28","nodeType":"YulFunctionCall","src":"22481:43:28"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"22465:15:28","nodeType":"YulIdentifier","src":"22465:15:28"},"nativeSrc":"22465:60:28","nodeType":"YulFunctionCall","src":"22465:60:28"},"variableNames":[{"name":"converted","nativeSrc":"22452:9:28","nodeType":"YulIdentifier","src":"22452:9:28"}]}]},"name":"convert_t_rational_32_by_1_to_t_uint8","nativeSrc":"22375:156:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22422:5:28","nodeType":"YulTypedName","src":"22422:5:28","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"22432:9:28","nodeType":"YulTypedName","src":"22432:9:28","type":""}],"src":"22375:156:28"},{"body":{"nativeSrc":"22609:73:28","nodeType":"YulBlock","src":"22609:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"22626:3:28","nodeType":"YulIdentifier","src":"22626:3:28"},{"arguments":[{"name":"value","nativeSrc":"22669:5:28","nodeType":"YulIdentifier","src":"22669:5:28"}],"functionName":{"name":"convert_t_rational_32_by_1_to_t_uint8","nativeSrc":"22631:37:28","nodeType":"YulIdentifier","src":"22631:37:28"},"nativeSrc":"22631:44:28","nodeType":"YulFunctionCall","src":"22631:44:28"}],"functionName":{"name":"mstore","nativeSrc":"22619:6:28","nodeType":"YulIdentifier","src":"22619:6:28"},"nativeSrc":"22619:57:28","nodeType":"YulFunctionCall","src":"22619:57:28"},"nativeSrc":"22619:57:28","nodeType":"YulExpressionStatement","src":"22619:57:28"}]},"name":"abi_encode_t_rational_32_by_1_to_t_uint8_fromStack","nativeSrc":"22537:145:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22597:5:28","nodeType":"YulTypedName","src":"22597:5:28","type":""},{"name":"pos","nativeSrc":"22604:3:28","nodeType":"YulTypedName","src":"22604:3:28","type":""}],"src":"22537:145:28"},{"body":{"nativeSrc":"22821:213:28","nodeType":"YulBlock","src":"22821:213:28","statements":[{"nativeSrc":"22831:26:28","nodeType":"YulAssignment","src":"22831:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"22843:9:28","nodeType":"YulIdentifier","src":"22843:9:28"},{"kind":"number","nativeSrc":"22854:2:28","nodeType":"YulLiteral","src":"22854:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22839:3:28","nodeType":"YulIdentifier","src":"22839:3:28"},"nativeSrc":"22839:18:28","nodeType":"YulFunctionCall","src":"22839:18:28"},"variableNames":[{"name":"tail","nativeSrc":"22831:4:28","nodeType":"YulIdentifier","src":"22831:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22918:6:28","nodeType":"YulIdentifier","src":"22918:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"22931:9:28","nodeType":"YulIdentifier","src":"22931:9:28"},{"kind":"number","nativeSrc":"22942:1:28","nodeType":"YulLiteral","src":"22942:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22927:3:28","nodeType":"YulIdentifier","src":"22927:3:28"},"nativeSrc":"22927:17:28","nodeType":"YulFunctionCall","src":"22927:17:28"}],"functionName":{"name":"abi_encode_t_rational_32_by_1_to_t_uint8_fromStack","nativeSrc":"22867:50:28","nodeType":"YulIdentifier","src":"22867:50:28"},"nativeSrc":"22867:78:28","nodeType":"YulFunctionCall","src":"22867:78:28"},"nativeSrc":"22867:78:28","nodeType":"YulExpressionStatement","src":"22867:78:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22999:6:28","nodeType":"YulIdentifier","src":"22999:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"23012:9:28","nodeType":"YulIdentifier","src":"23012:9:28"},{"kind":"number","nativeSrc":"23023:2:28","nodeType":"YulLiteral","src":"23023:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23008:3:28","nodeType":"YulIdentifier","src":"23008:3:28"},"nativeSrc":"23008:18:28","nodeType":"YulFunctionCall","src":"23008:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22955:43:28","nodeType":"YulIdentifier","src":"22955:43:28"},"nativeSrc":"22955:72:28","nodeType":"YulFunctionCall","src":"22955:72:28"},"nativeSrc":"22955:72:28","nodeType":"YulExpressionStatement","src":"22955:72:28"}]},"name":"abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"22688:346:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22785:9:28","nodeType":"YulTypedName","src":"22785:9:28","type":""},{"name":"value1","nativeSrc":"22797:6:28","nodeType":"YulTypedName","src":"22797:6:28","type":""},{"name":"value0","nativeSrc":"22805:6:28","nodeType":"YulTypedName","src":"22805:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22816:4:28","nodeType":"YulTypedName","src":"22816:4:28","type":""}],"src":"22688:346:28"},{"body":{"nativeSrc":"23218:367:28","nodeType":"YulBlock","src":"23218:367:28","statements":[{"nativeSrc":"23228:27:28","nodeType":"YulAssignment","src":"23228:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"23240:9:28","nodeType":"YulIdentifier","src":"23240:9:28"},{"kind":"number","nativeSrc":"23251:3:28","nodeType":"YulLiteral","src":"23251:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"23236:3:28","nodeType":"YulIdentifier","src":"23236:3:28"},"nativeSrc":"23236:19:28","nodeType":"YulFunctionCall","src":"23236:19:28"},"variableNames":[{"name":"tail","nativeSrc":"23228:4:28","nodeType":"YulIdentifier","src":"23228:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"23309:6:28","nodeType":"YulIdentifier","src":"23309:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"23322:9:28","nodeType":"YulIdentifier","src":"23322:9:28"},{"kind":"number","nativeSrc":"23333:1:28","nodeType":"YulLiteral","src":"23333:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23318:3:28","nodeType":"YulIdentifier","src":"23318:3:28"},"nativeSrc":"23318:17:28","nodeType":"YulFunctionCall","src":"23318:17:28"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"23265:43:28","nodeType":"YulIdentifier","src":"23265:43:28"},"nativeSrc":"23265:71:28","nodeType":"YulFunctionCall","src":"23265:71:28"},"nativeSrc":"23265:71:28","nodeType":"YulExpressionStatement","src":"23265:71:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"23386:6:28","nodeType":"YulIdentifier","src":"23386:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"23399:9:28","nodeType":"YulIdentifier","src":"23399:9:28"},{"kind":"number","nativeSrc":"23410:2:28","nodeType":"YulLiteral","src":"23410:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23395:3:28","nodeType":"YulIdentifier","src":"23395:3:28"},"nativeSrc":"23395:18:28","nodeType":"YulFunctionCall","src":"23395:18:28"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"23346:39:28","nodeType":"YulIdentifier","src":"23346:39:28"},"nativeSrc":"23346:68:28","nodeType":"YulFunctionCall","src":"23346:68:28"},"nativeSrc":"23346:68:28","nodeType":"YulExpressionStatement","src":"23346:68:28"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"23468:6:28","nodeType":"YulIdentifier","src":"23468:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"23481:9:28","nodeType":"YulIdentifier","src":"23481:9:28"},{"kind":"number","nativeSrc":"23492:2:28","nodeType":"YulLiteral","src":"23492:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23477:3:28","nodeType":"YulIdentifier","src":"23477:3:28"},"nativeSrc":"23477:18:28","nodeType":"YulFunctionCall","src":"23477:18:28"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"23424:43:28","nodeType":"YulIdentifier","src":"23424:43:28"},"nativeSrc":"23424:72:28","nodeType":"YulFunctionCall","src":"23424:72:28"},"nativeSrc":"23424:72:28","nodeType":"YulExpressionStatement","src":"23424:72:28"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"23550:6:28","nodeType":"YulIdentifier","src":"23550:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"23563:9:28","nodeType":"YulIdentifier","src":"23563:9:28"},{"kind":"number","nativeSrc":"23574:2:28","nodeType":"YulLiteral","src":"23574:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23559:3:28","nodeType":"YulIdentifier","src":"23559:3:28"},"nativeSrc":"23559:18:28","nodeType":"YulFunctionCall","src":"23559:18:28"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"23506:43:28","nodeType":"YulIdentifier","src":"23506:43:28"},"nativeSrc":"23506:72:28","nodeType":"YulFunctionCall","src":"23506:72:28"},"nativeSrc":"23506:72:28","nodeType":"YulExpressionStatement","src":"23506:72:28"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"23040:545:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23166:9:28","nodeType":"YulTypedName","src":"23166:9:28","type":""},{"name":"value3","nativeSrc":"23178:6:28","nodeType":"YulTypedName","src":"23178:6:28","type":""},{"name":"value2","nativeSrc":"23186:6:28","nodeType":"YulTypedName","src":"23186:6:28","type":""},{"name":"value1","nativeSrc":"23194:6:28","nodeType":"YulTypedName","src":"23194:6:28","type":""},{"name":"value0","nativeSrc":"23202:6:28","nodeType":"YulTypedName","src":"23202:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23213:4:28","nodeType":"YulTypedName","src":"23213:4:28","type":""}],"src":"23040:545:28"},{"body":{"nativeSrc":"23619:152:28","nodeType":"YulBlock","src":"23619:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23636:1:28","nodeType":"YulLiteral","src":"23636:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"23639:77:28","nodeType":"YulLiteral","src":"23639:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"23629:6:28","nodeType":"YulIdentifier","src":"23629:6:28"},"nativeSrc":"23629:88:28","nodeType":"YulFunctionCall","src":"23629:88:28"},"nativeSrc":"23629:88:28","nodeType":"YulExpressionStatement","src":"23629:88:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23733:1:28","nodeType":"YulLiteral","src":"23733:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"23736:4:28","nodeType":"YulLiteral","src":"23736:4:28","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"23726:6:28","nodeType":"YulIdentifier","src":"23726:6:28"},"nativeSrc":"23726:15:28","nodeType":"YulFunctionCall","src":"23726:15:28"},"nativeSrc":"23726:15:28","nodeType":"YulExpressionStatement","src":"23726:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23757:1:28","nodeType":"YulLiteral","src":"23757:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"23760:4:28","nodeType":"YulLiteral","src":"23760:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"23750:6:28","nodeType":"YulIdentifier","src":"23750:6:28"},"nativeSrc":"23750:15:28","nodeType":"YulFunctionCall","src":"23750:15:28"},"nativeSrc":"23750:15:28","nodeType":"YulExpressionStatement","src":"23750:15:28"}]},"name":"panic_error_0x21","nativeSrc":"23591:180:28","nodeType":"YulFunctionDefinition","src":"23591:180:28"},{"body":{"nativeSrc":"23805:152:28","nodeType":"YulBlock","src":"23805:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23822:1:28","nodeType":"YulLiteral","src":"23822:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"23825:77:28","nodeType":"YulLiteral","src":"23825:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"23815:6:28","nodeType":"YulIdentifier","src":"23815:6:28"},"nativeSrc":"23815:88:28","nodeType":"YulFunctionCall","src":"23815:88:28"},"nativeSrc":"23815:88:28","nodeType":"YulExpressionStatement","src":"23815:88:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23919:1:28","nodeType":"YulLiteral","src":"23919:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"23922:4:28","nodeType":"YulLiteral","src":"23922:4:28","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"23912:6:28","nodeType":"YulIdentifier","src":"23912:6:28"},"nativeSrc":"23912:15:28","nodeType":"YulFunctionCall","src":"23912:15:28"},"nativeSrc":"23912:15:28","nodeType":"YulExpressionStatement","src":"23912:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23943:1:28","nodeType":"YulLiteral","src":"23943:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"23946:4:28","nodeType":"YulLiteral","src":"23946:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"23936:6:28","nodeType":"YulIdentifier","src":"23936:6:28"},"nativeSrc":"23936:15:28","nodeType":"YulFunctionCall","src":"23936:15:28"},"nativeSrc":"23936:15:28","nodeType":"YulExpressionStatement","src":"23936:15:28"}]},"name":"panic_error_0x32","nativeSrc":"23777:180:28","nodeType":"YulFunctionDefinition","src":"23777:180:28"},{"body":{"nativeSrc":"24005:143:28","nodeType":"YulBlock","src":"24005:143:28","statements":[{"nativeSrc":"24015:25:28","nodeType":"YulAssignment","src":"24015:25:28","value":{"arguments":[{"name":"x","nativeSrc":"24038:1:28","nodeType":"YulIdentifier","src":"24038:1:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"24020:17:28","nodeType":"YulIdentifier","src":"24020:17:28"},"nativeSrc":"24020:20:28","nodeType":"YulFunctionCall","src":"24020:20:28"},"variableNames":[{"name":"x","nativeSrc":"24015:1:28","nodeType":"YulIdentifier","src":"24015:1:28"}]},{"nativeSrc":"24049:25:28","nodeType":"YulAssignment","src":"24049:25:28","value":{"arguments":[{"name":"y","nativeSrc":"24072:1:28","nodeType":"YulIdentifier","src":"24072:1:28"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"24054:17:28","nodeType":"YulIdentifier","src":"24054:17:28"},"nativeSrc":"24054:20:28","nodeType":"YulFunctionCall","src":"24054:20:28"},"variableNames":[{"name":"y","nativeSrc":"24049:1:28","nodeType":"YulIdentifier","src":"24049:1:28"}]},{"body":{"nativeSrc":"24096:22:28","nodeType":"YulBlock","src":"24096:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"24098:16:28","nodeType":"YulIdentifier","src":"24098:16:28"},"nativeSrc":"24098:18:28","nodeType":"YulFunctionCall","src":"24098:18:28"},"nativeSrc":"24098:18:28","nodeType":"YulExpressionStatement","src":"24098:18:28"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"24093:1:28","nodeType":"YulIdentifier","src":"24093:1:28"}],"functionName":{"name":"iszero","nativeSrc":"24086:6:28","nodeType":"YulIdentifier","src":"24086:6:28"},"nativeSrc":"24086:9:28","nodeType":"YulFunctionCall","src":"24086:9:28"},"nativeSrc":"24083:35:28","nodeType":"YulIf","src":"24083:35:28"},{"nativeSrc":"24128:14:28","nodeType":"YulAssignment","src":"24128:14:28","value":{"arguments":[{"name":"x","nativeSrc":"24137:1:28","nodeType":"YulIdentifier","src":"24137:1:28"},{"name":"y","nativeSrc":"24140:1:28","nodeType":"YulIdentifier","src":"24140:1:28"}],"functionName":{"name":"div","nativeSrc":"24133:3:28","nodeType":"YulIdentifier","src":"24133:3:28"},"nativeSrc":"24133:9:28","nodeType":"YulFunctionCall","src":"24133:9:28"},"variableNames":[{"name":"r","nativeSrc":"24128:1:28","nodeType":"YulIdentifier","src":"24128:1:28"}]}]},"name":"checked_div_t_uint256","nativeSrc":"23963:185:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"23994:1:28","nodeType":"YulTypedName","src":"23994:1:28","type":""},{"name":"y","nativeSrc":"23997:1:28","nodeType":"YulTypedName","src":"23997:1:28","type":""}],"returnVariables":[{"name":"r","nativeSrc":"24003:1:28","nodeType":"YulTypedName","src":"24003:1:28","type":""}],"src":"23963:185:28"},{"body":{"nativeSrc":"24209:32:28","nodeType":"YulBlock","src":"24209:32:28","statements":[{"nativeSrc":"24219:16:28","nodeType":"YulAssignment","src":"24219:16:28","value":{"name":"value","nativeSrc":"24230:5:28","nodeType":"YulIdentifier","src":"24230:5:28"},"variableNames":[{"name":"cleaned","nativeSrc":"24219:7:28","nodeType":"YulIdentifier","src":"24219:7:28"}]}]},"name":"cleanup_t_rational_208_by_1","nativeSrc":"24154:87:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24191:5:28","nodeType":"YulTypedName","src":"24191:5:28","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"24201:7:28","nodeType":"YulTypedName","src":"24201:7:28","type":""}],"src":"24154:87:28"},{"body":{"nativeSrc":"24315:90:28","nodeType":"YulBlock","src":"24315:90:28","statements":[{"nativeSrc":"24325:74:28","nodeType":"YulAssignment","src":"24325:74:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"24391:5:28","nodeType":"YulIdentifier","src":"24391:5:28"}],"functionName":{"name":"cleanup_t_rational_208_by_1","nativeSrc":"24363:27:28","nodeType":"YulIdentifier","src":"24363:27:28"},"nativeSrc":"24363:34:28","nodeType":"YulFunctionCall","src":"24363:34:28"}],"functionName":{"name":"identity","nativeSrc":"24354:8:28","nodeType":"YulIdentifier","src":"24354:8:28"},"nativeSrc":"24354:44:28","nodeType":"YulFunctionCall","src":"24354:44:28"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"24338:15:28","nodeType":"YulIdentifier","src":"24338:15:28"},"nativeSrc":"24338:61:28","nodeType":"YulFunctionCall","src":"24338:61:28"},"variableNames":[{"name":"converted","nativeSrc":"24325:9:28","nodeType":"YulIdentifier","src":"24325:9:28"}]}]},"name":"convert_t_rational_208_by_1_to_t_uint8","nativeSrc":"24247:158:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24295:5:28","nodeType":"YulTypedName","src":"24295:5:28","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"24305:9:28","nodeType":"YulTypedName","src":"24305:9:28","type":""}],"src":"24247:158:28"},{"body":{"nativeSrc":"24484:74:28","nodeType":"YulBlock","src":"24484:74:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"24501:3:28","nodeType":"YulIdentifier","src":"24501:3:28"},{"arguments":[{"name":"value","nativeSrc":"24545:5:28","nodeType":"YulIdentifier","src":"24545:5:28"}],"functionName":{"name":"convert_t_rational_208_by_1_to_t_uint8","nativeSrc":"24506:38:28","nodeType":"YulIdentifier","src":"24506:38:28"},"nativeSrc":"24506:45:28","nodeType":"YulFunctionCall","src":"24506:45:28"}],"functionName":{"name":"mstore","nativeSrc":"24494:6:28","nodeType":"YulIdentifier","src":"24494:6:28"},"nativeSrc":"24494:58:28","nodeType":"YulFunctionCall","src":"24494:58:28"},"nativeSrc":"24494:58:28","nodeType":"YulExpressionStatement","src":"24494:58:28"}]},"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nativeSrc":"24411:147:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24472:5:28","nodeType":"YulTypedName","src":"24472:5:28","type":""},{"name":"pos","nativeSrc":"24479:3:28","nodeType":"YulTypedName","src":"24479:3:28","type":""}],"src":"24411:147:28"},{"body":{"nativeSrc":"24698:214:28","nodeType":"YulBlock","src":"24698:214:28","statements":[{"nativeSrc":"24708:26:28","nodeType":"YulAssignment","src":"24708:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"24720:9:28","nodeType":"YulIdentifier","src":"24720:9:28"},{"kind":"number","nativeSrc":"24731:2:28","nodeType":"YulLiteral","src":"24731:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24716:3:28","nodeType":"YulIdentifier","src":"24716:3:28"},"nativeSrc":"24716:18:28","nodeType":"YulFunctionCall","src":"24716:18:28"},"variableNames":[{"name":"tail","nativeSrc":"24708:4:28","nodeType":"YulIdentifier","src":"24708:4:28"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24796:6:28","nodeType":"YulIdentifier","src":"24796:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"24809:9:28","nodeType":"YulIdentifier","src":"24809:9:28"},{"kind":"number","nativeSrc":"24820:1:28","nodeType":"YulLiteral","src":"24820:1:28","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24805:3:28","nodeType":"YulIdentifier","src":"24805:3:28"},"nativeSrc":"24805:17:28","nodeType":"YulFunctionCall","src":"24805:17:28"}],"functionName":{"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nativeSrc":"24744:51:28","nodeType":"YulIdentifier","src":"24744:51:28"},"nativeSrc":"24744:79:28","nodeType":"YulFunctionCall","src":"24744:79:28"},"nativeSrc":"24744:79:28","nodeType":"YulExpressionStatement","src":"24744:79:28"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"24877:6:28","nodeType":"YulIdentifier","src":"24877:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"24890:9:28","nodeType":"YulIdentifier","src":"24890:9:28"},{"kind":"number","nativeSrc":"24901:2:28","nodeType":"YulLiteral","src":"24901:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24886:3:28","nodeType":"YulIdentifier","src":"24886:3:28"},"nativeSrc":"24886:18:28","nodeType":"YulFunctionCall","src":"24886:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24833:43:28","nodeType":"YulIdentifier","src":"24833:43:28"},"nativeSrc":"24833:72:28","nodeType":"YulFunctionCall","src":"24833:72:28"},"nativeSrc":"24833:72:28","nodeType":"YulExpressionStatement","src":"24833:72:28"}]},"name":"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"24564:348:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24662:9:28","nodeType":"YulTypedName","src":"24662:9:28","type":""},{"name":"value1","nativeSrc":"24674:6:28","nodeType":"YulTypedName","src":"24674:6:28","type":""},{"name":"value0","nativeSrc":"24682:6:28","nodeType":"YulTypedName","src":"24682:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24693:4:28","nodeType":"YulTypedName","src":"24693:4:28","type":""}],"src":"24564:348:28"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint48_to_t_uint48(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function cleanup_t_uint208(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint208_to_t_uint208(value, pos) {\n        mstore(pos, cleanup_t_uint208(value))\n    }\n\n    // struct Checkpoints.Checkpoint208 -> struct Checkpoints.Checkpoint208\n    function abi_encode_t_struct$_Checkpoint208_$6734_memory_ptr_to_t_struct$_Checkpoint208_$6734_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // _key\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint48_to_t_uint48(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // _value\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint208_to_t_uint208(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Checkpoint208_$6734_memory_ptr__to_t_struct$_Checkpoint208_$6734_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Checkpoint208_$6734_memory_ptr_to_t_struct$_Checkpoint208_$6734_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint208(x, y) -> sum {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint208(x, y) -> diff {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_rational_48_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_48_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_48_by_1(value)))\n    }\n\n    function abi_encode_t_rational_48_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_48_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_48_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_32_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_32_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_32_by_1(value)))\n    }\n\n    function abi_encode_t_rational_32_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_32_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_32_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_rational_208_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_208_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_208_by_1(value)))\n    }\n\n    function abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_208_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3001":[{"length":32,"start":4477}],"3003":[{"length":32,"start":4436}],"3005":[{"length":32,"start":4350}],"3007":[{"length":32,"start":6936}],"3009":[{"length":32,"start":6969}],"3012":[{"length":32,"start":5853}],"3015":[{"length":32,"start":5912}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063715018a61161010457806395d89b41116100a2578063d505accf11610071578063d505accf1461055e578063dd62ed3e1461057a578063f1127ed8146105aa578063f2fde38b146105da576101cf565b806395d89b41146104c45780639ab24eb0146104e2578063a9059cbb14610512578063c3cda52014610542576101cf565b806384b0196e116100de57806384b0196e146104345780638da5cb5b146104585780638e539e8c1461047657806391ddadf4146104a6576101cf565b8063715018a6146103de57806379cc6790146103e85780637ecebe0014610404576101cf565b806340c10f1911610171578063587cde1e1161014b578063587cde1e146103325780635c19a95c146103625780636fcfff451461037e57806370a08231146103ae576101cf565b806340c10f19146102dc57806342966c68146102f85780634bf5d7e914610314576101cf565b806323b872dd116101ad57806323b872dd14610240578063313ce567146102705780633644e5151461028e5780633a46b1a8146102ac576101cf565b806306fdde03146101d4578063095ea7b3146101f257806318160ddd14610222575b600080fd5b6101dc6105f6565b6040516101e99190612f1d565b60405180910390f35b61020c60048036038101906102079190612fd8565b610688565b6040516102199190613033565b60405180910390f35b61022a6106ab565b604051610237919061305d565b60405180910390f35b61025a60048036038101906102559190613078565b6106b5565b6040516102679190613033565b60405180910390f35b6102786106e4565b60405161028591906130e7565b60405180910390f35b6102966106ed565b6040516102a3919061311b565b60405180910390f35b6102c660048036038101906102c19190612fd8565b6106fc565b6040516102d3919061305d565b60405180910390f35b6102f660048036038101906102f19190612fd8565b6107d5565b005b610312600480360381019061030d9190613136565b6107eb565b005b61031c6107ff565b6040516103299190612f1d565b60405180910390f35b61034c60048036038101906103479190613163565b61083c565b604051610359919061319f565b60405180910390f35b61037c60048036038101906103779190613163565b6108a5565b005b61039860048036038101906103939190613163565b6108bf565b6040516103a591906131d9565b60405180910390f35b6103c860048036038101906103c39190613163565b6108d1565b6040516103d5919061305d565b60405180910390f35b6103e6610919565b005b61040260048036038101906103fd9190612fd8565b61092d565b005b61041e60048036038101906104199190613163565b61094d565b60405161042b919061305d565b60405180910390f35b61043c61095f565b60405161044f97969594939291906132ed565b60405180910390f35b610460610a09565b60405161046d919061319f565b60405180910390f35b610490600480360381019061048b9190613136565b610a33565b60405161049d919061305d565b60405180910390f35b6104ae610ace565b6040516104bb9190613392565b60405180910390f35b6104cc610ad6565b6040516104d99190612f1d565b60405180910390f35b6104fc60048036038101906104f79190613163565b610b68565b604051610509919061305d565b60405180910390f35b61052c60048036038101906105279190612fd8565b610bd4565b6040516105399190613033565b60405180910390f35b61055c60048036038101906105579190613405565b610bf7565b005b61057860048036038101906105739190613492565b610cbd565b005b610594600480360381019061058f9190613534565b610e05565b6040516105a1919061305d565b60405180910390f35b6105c460048036038101906105bf91906135a0565b610e8c565b6040516105d19190613653565b60405180910390f35b6105f460048036038101906105ef9190613163565b610ea6565b005b6060600380546106059061369d565b80601f01602080910402602001604051908101604052809291908181526020018280546106319061369d565b801561067e5780601f106106535761010080835404028352916020019161067e565b820191906000526020600020905b81548152906001019060200180831161066157829003601f168201915b5050505050905090565b600080610693610f58565b90506106a0818585610f60565b600191505092915050565b6000600254905090565b6000806106c0610f58565b90506106cd858285610f72565b6106d8858585611006565b60019150509392505050565b60006012905090565b60006106f76110fa565b905090565b600080610707610ace565b90508065ffffffffffff1683106107575782816040517fecd3f81e00000000000000000000000000000000000000000000000000000000815260040161074e9291906136ce565b60405180910390fd5b6107b0610763846111b1565b600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061120b90919063ffffffff16565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1691505092915050565b6107dd611305565b6107e7828261138c565b5050565b6107fc6107f6610f58565b8261140e565b50565b60606040518060400160405280600e81526020017f6d6f64653d74696d657374616d70000000000000000000000000000000000000815250905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006108af610f58565b90506108bb8183611490565b5050565b60006108ca826115a4565b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610921611305565b61092b60006115fc565b565b61093f82610939610f58565b83610f72565b610949828261140e565b5050565b6000610958826116c2565b9050919050565b6000606080600080600060606109736116d4565b61097b61170f565b46306000801b600067ffffffffffffffff81111561099c5761099b6136f7565b5b6040519080825280602002602001820160405280156109ca5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080610a3e610ace565b90508065ffffffffffff168310610a8e5782816040517fecd3f81e000000000000000000000000000000000000000000000000000000008152600401610a859291906136ce565b60405180910390fd5b610aaa610a9a846111b1565b600b61120b90919063ffffffff16565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b600042905090565b606060048054610ae59061369d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b119061369d565b8015610b5e5780601f10610b3357610100808354040283529160200191610b5e565b820191906000526020600020905b815481529060010190602001808311610b4157829003601f168201915b5050505050905090565b6000610bb1600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061174a565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff169050919050565b600080610bdf610f58565b9050610bec818585611006565b600191505092915050565b83421115610c3c57836040517f4683af0e000000000000000000000000000000000000000000000000000000008152600401610c33919061305d565b60405180910390fd5b6000610c9e610c967fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf898989604051602001610c7b9493929190613726565b604051602081830303815290604052805190602001206117b2565b8585856117cc565b9050610caa81876117fc565b610cb48188611490565b50505050505050565b83421115610d0257836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610cf9919061305d565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d318c611854565b89604051602001610d479695949392919061376b565b6040516020818303038152906040528051906020012090506000610d6a826117b2565b90506000610d7a828787876117cc565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610dee57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610de59291906137cc565b60405180910390fd5b610df98a8a8a610f60565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610e94612e4f565b610e9e83836118ab565b905092915050565b610eae611305565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f205760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f17919061319f565b60405180910390fd5b610f29816115fc565b50565b60008183610f3a9190613824565b905092915050565b60008183610f509190613872565b905092915050565b600033905090565b610f6d838383600161190c565b505050565b6000610f7e8484610e05565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110005781811015610ff0578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610fe7939291906138c0565b60405180910390fd5b610fff8484848403600061190c565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110785760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161106f919061319f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110ea5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110e1919061319f565b60405180910390fd5b6110f5838383611ae3565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561117657507f000000000000000000000000000000000000000000000000000000000000000046145b156111a3577f000000000000000000000000000000000000000000000000000000000000000090506111ae565b6111ab611af3565b90505b90565b600065ffffffffffff8016821115611203576030826040517f6dfcc6500000000000000000000000000000000000000000000000000000000081526004016111fa92919061393c565b60405180910390fd5b819050919050565b60008083600001805490509050600080829050600583111561129357600061123284611b89565b8461123d9190613965565b905061124c8760000182611c82565b60000160009054906101000a900465ffffffffffff1665ffffffffffff168665ffffffffffff16101561128157809150611291565b60018161128e9190613999565b92505b505b60006112a487600001878585611c97565b9050600081146112f6576112c7876000016001836112c29190613965565b611c82565b60000160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff166112f9565b60005b94505050505092915050565b61130d610f58565b73ffffffffffffffffffffffffffffffffffffffff1661132b610a09565b73ffffffffffffffffffffffffffffffffffffffff161461138a5761134e610f58565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611381919061319f565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113fe5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113f5919061319f565b60405180910390fd5b61140a60008383611ae3565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114805760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611477919061319f565b60405180910390fd5b61148c82600083611ae3565b5050565b600061149b8361083c565b905081600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a461159f818361159a86611d10565b611d22565b505050565b60006115f56115f0600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611f9b565b611fac565b9050919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006116cd82612004565b9050919050565b606061170a60067f000000000000000000000000000000000000000000000000000000000000000061204d90919063ffffffff16565b905090565b606061174560077f000000000000000000000000000000000000000000000000000000000000000061204d90919063ffffffff16565b905090565b60008082600001805490509050600081146117a757611778836000016001836117739190613965565b611c82565b60000160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff166117aa565b60005b915050919050565b60006117c56117bf6110fa565b836120fd565b9050919050565b6000806000806117de8888888861213e565b9250925092506117ee8282612232565b829350505050949350505050565b600061180783611854565b905080821461184f5782816040517f752d88c00000000000000000000000000000000000000000000000000000000081526004016118469291906139cd565b60405180910390fd5b505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b6118b3612e4f565b61190482600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061239690919063ffffffff16565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361197e5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611975919061319f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119f05760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016119e7919061319f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611add578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611ad4919061305d565b60405180910390a35b50505050565b611aee83838361246b565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611b6e9594939291906139f6565b60405160208183030381529060405280519060200120905090565b6000808203611b9b5760009050611c7d565b60006001611ba88461251c565b901c6001901b90506001818481611bc257611bc1613a49565b5b048201901c90506001818481611bdb57611bda613a49565b5b048201901c90506001818481611bf457611bf3613a49565b5b048201901c90506001818481611c0d57611c0c613a49565b5b048201901c90506001818481611c2657611c25613a49565b5b048201901c90506001818481611c3f57611c3e613a49565b5b048201901c90506001818481611c5857611c57613a49565b5b048201901c9050611c7981828581611c7357611c72613a49565b5b046125fd565b9150505b919050565b60008260005281602060002001905092915050565b60005b81831015611d05576000611cae8484612616565b90508465ffffffffffff16611cc38783611c82565b60000160009054906101000a900465ffffffffffff1665ffffffffffff161115611cef57809250611cff565b600181611cfc9190613999565b93505b50611c9a565b819050949350505050565b6000611d1b826108d1565b9050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611d5e5750600081115b15611f9657600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611e7c57600080611ded600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610f42611de88661263c565b6126aa565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915079ffffffffffffffffffffffffffffffffffffffffffffffffffff1691508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611e71929190613a78565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611f9557600080611f06600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610f2c611f018661263c565b6126aa565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915079ffffffffffffffffffffffffffffffffffffffffffffffffffff1691508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611f8a929190613a78565b60405180910390a250505b5b505050565b600081600001805490509050919050565b600063ffffffff8016821115611ffc576020826040517f6dfcc650000000000000000000000000000000000000000000000000000000008152600401611ff3929190613adc565b60405180910390fd5b819050919050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060ff60001b831461206a57612063836126ea565b90506120f7565b8180546120769061369d565b80601f01602080910402602001604051908101604052809291908181526020018280546120a29061369d565b80156120ef5780601f106120c4576101008083540402835291602001916120ef565b820191906000526020600020905b8154815290600101906020018083116120d257829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561217e576000600385925092509250612228565b6000600188888888604051600081526020016040526040516121a39493929190613b05565b6020604051602081039080840390855afa1580156121c5573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361221957600060016000801b93509350935050612228565b8060008060001b935093509350505b9450945094915050565b6000600381111561224657612245613b4a565b5b82600381111561225957612258613b4a565b5b0315612392576001600381111561227357612272613b4a565b5b82600381111561228657612285613b4a565b5b036122bd576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156122d1576122d0613b4a565b5b8260038111156122e4576122e3613b4a565b5b03612329578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401612320919061305d565b60405180910390fd5b60038081111561233c5761233b613b4a565b5b82600381111561234f5761234e613b4a565b5b0361239157806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401612388919061311b565b60405180910390fd5b5b5050565b61239e612e4f565b826000018263ffffffff16815481106123ba576123b9613b79565b5b906000526020600020016040518060400160405290816000820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016000820160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b61247683838361275e565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361250c5760006124b46106ab565b905060006124c0612983565b9050808211156125095781816040517f1cb15d26000000000000000000000000000000000000000000000000000000008152600401612500929190613a78565b60405180910390fd5b50505b6125178383836129a7565b505050565b600080600090506000608084901c111561253e57608083901c92506080810190505b6000604084901c111561255957604083901c92506040810190505b6000602084901c111561257457602083901c92506020810190505b6000601084901c111561258f57601083901c92506010810190505b6000600884901c11156125aa57600883901c92506008810190505b6000600484901c11156125c557600483901c92506004810190505b6000600284901c11156125e057600283901c92506002810190505b6000600184901c11156125f4576001810190505b80915050919050565b600081831061260c578161260e565b825b905092915050565b600060028284186126279190613ba8565b8284166126349190613999565b905092915050565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff80168211156126a25760d0826040517f6dfcc650000000000000000000000000000000000000000000000000000000008152600401612699929190613c14565b60405180910390fd5b819050919050565b6000806126de6126b8610ace565b6126ce6126c48861174a565b868863ffffffff16565b87612a619092919063ffffffff16565b91509150935093915050565b606060006126f783612a7e565b90506000602067ffffffffffffffff811115612716576127156136f7565b5b6040519080825280601f01601f1916602001820160405280156127485781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036127b05780600260008282546127a49190613999565b92505081905550612883565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561283c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401612833939291906138c0565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036128cc5780600260008282540392505081905550612919565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612976919061305d565b60405180910390a3505050565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff8016905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036129f4576129f1600b610f2c6129ec8461263c565b6126aa565b50505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612a4157612a3e600b610f42612a398461263c565b6126aa565b50505b612a5c612a4d8461083c565b612a568461083c565b83611d22565b505050565b600080612a72856000018585612ace565b91509150935093915050565b60008060ff8360001c169050601f811115612ac5576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b6000806000858054905090506000811115612d5f576000612afb87600184612af69190613965565b611c82565b6040518060400160405290816000820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016000820160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff168152505090508565ffffffffffff16816000015165ffffffffffff161115612bea576040517f2520601d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8565ffffffffffff16816000015165ffffffffffff1603612c6e5784612c1c88600185612c179190613965565b611c82565b60000160066101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550612d4e565b8660405180604001604052808865ffffffffffff1681526020018779ffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060208201518160000160066101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b806020015185935093505050612e47565b8560405180604001604052808765ffffffffffff1681526020018679ffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060208201518160000160066101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550505060008492509250505b935093915050565b6040518060400160405280600065ffffffffffff168152602001600079ffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b83811015612ec7578082015181840152602081019050612eac565b60008484015250505050565b6000601f19601f8301169050919050565b6000612eef82612e8d565b612ef98185612e98565b9350612f09818560208601612ea9565b612f1281612ed3565b840191505092915050565b60006020820190508181036000830152612f378184612ee4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612f6f82612f44565b9050919050565b612f7f81612f64565b8114612f8a57600080fd5b50565b600081359050612f9c81612f76565b92915050565b6000819050919050565b612fb581612fa2565b8114612fc057600080fd5b50565b600081359050612fd281612fac565b92915050565b60008060408385031215612fef57612fee612f3f565b5b6000612ffd85828601612f8d565b925050602061300e85828601612fc3565b9150509250929050565b60008115159050919050565b61302d81613018565b82525050565b60006020820190506130486000830184613024565b92915050565b61305781612fa2565b82525050565b6000602082019050613072600083018461304e565b92915050565b60008060006060848603121561309157613090612f3f565b5b600061309f86828701612f8d565b93505060206130b086828701612f8d565b92505060406130c186828701612fc3565b9150509250925092565b600060ff82169050919050565b6130e1816130cb565b82525050565b60006020820190506130fc60008301846130d8565b92915050565b6000819050919050565b61311581613102565b82525050565b6000602082019050613130600083018461310c565b92915050565b60006020828403121561314c5761314b612f3f565b5b600061315a84828501612fc3565b91505092915050565b60006020828403121561317957613178612f3f565b5b600061318784828501612f8d565b91505092915050565b61319981612f64565b82525050565b60006020820190506131b46000830184613190565b92915050565b600063ffffffff82169050919050565b6131d3816131ba565b82525050565b60006020820190506131ee60008301846131ca565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b613229816131f4565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61326481612fa2565b82525050565b6000613276838361325b565b60208301905092915050565b6000602082019050919050565b600061329a8261322f565b6132a4818561323a565b93506132af8361324b565b8060005b838110156132e05781516132c7888261326a565b97506132d283613282565b9250506001810190506132b3565b5085935050505092915050565b600060e082019050613302600083018a613220565b81810360208301526133148189612ee4565b905081810360408301526133288188612ee4565b9050613337606083018761304e565b6133446080830186613190565b61335160a083018561310c565b81810360c0830152613363818461328f565b905098975050505050505050565b600065ffffffffffff82169050919050565b61338c81613371565b82525050565b60006020820190506133a76000830184613383565b92915050565b6133b6816130cb565b81146133c157600080fd5b50565b6000813590506133d3816133ad565b92915050565b6133e281613102565b81146133ed57600080fd5b50565b6000813590506133ff816133d9565b92915050565b60008060008060008060c0878903121561342257613421612f3f565b5b600061343089828a01612f8d565b965050602061344189828a01612fc3565b955050604061345289828a01612fc3565b945050606061346389828a016133c4565b935050608061347489828a016133f0565b92505060a061348589828a016133f0565b9150509295509295509295565b600080600080600080600060e0888a0312156134b1576134b0612f3f565b5b60006134bf8a828b01612f8d565b97505060206134d08a828b01612f8d565b96505060406134e18a828b01612fc3565b95505060606134f28a828b01612fc3565b94505060806135038a828b016133c4565b93505060a06135148a828b016133f0565b92505060c06135258a828b016133f0565b91505092959891949750929550565b6000806040838503121561354b5761354a612f3f565b5b600061355985828601612f8d565b925050602061356a85828601612f8d565b9150509250929050565b61357d816131ba565b811461358857600080fd5b50565b60008135905061359a81613574565b92915050565b600080604083850312156135b7576135b6612f3f565b5b60006135c585828601612f8d565b92505060206135d68582860161358b565b9150509250929050565b6135e981613371565b82525050565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b61361e816135ef565b82525050565b60408201600082015161363a60008501826135e0565b50602082015161364d6020850182613615565b50505050565b60006040820190506136686000830184613624565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806136b557607f821691505b6020821081036136c8576136c761366e565b5b50919050565b60006040820190506136e3600083018561304e565b6136f06020830184613383565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060808201905061373b600083018761310c565b6137486020830186613190565b613755604083018561304e565b613762606083018461304e565b95945050505050565b600060c082019050613780600083018961310c565b61378d6020830188613190565b61379a6040830187613190565b6137a7606083018661304e565b6137b4608083018561304e565b6137c160a083018461304e565b979650505050505050565b60006040820190506137e16000830185613190565b6137ee6020830184613190565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061382f826135ef565b915061383a836135ef565b9250828201905079ffffffffffffffffffffffffffffffffffffffffffffffffffff81111561386c5761386b6137f5565b5b92915050565b600061387d826135ef565b9150613888836135ef565b9250828203905079ffffffffffffffffffffffffffffffffffffffffffffffffffff8111156138ba576138b96137f5565b5b92915050565b60006060820190506138d56000830186613190565b6138e2602083018561304e565b6138ef604083018461304e565b949350505050565b6000819050919050565b6000819050919050565b600061392661392161391c846138f7565b613901565b6130cb565b9050919050565b6139368161390b565b82525050565b6000604082019050613951600083018561392d565b61395e602083018461304e565b9392505050565b600061397082612fa2565b915061397b83612fa2565b9250828203905081811115613993576139926137f5565b5b92915050565b60006139a482612fa2565b91506139af83612fa2565b92508282019050808211156139c7576139c66137f5565b5b92915050565b60006040820190506139e26000830185613190565b6139ef602083018461304e565b9392505050565b600060a082019050613a0b600083018861310c565b613a18602083018761310c565b613a25604083018661310c565b613a32606083018561304e565b613a3f6080830184613190565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050613a8d600083018561304e565b613a9a602083018461304e565b9392505050565b6000819050919050565b6000613ac6613ac1613abc84613aa1565b613901565b6130cb565b9050919050565b613ad681613aab565b82525050565b6000604082019050613af16000830185613acd565b613afe602083018461304e565b9392505050565b6000608082019050613b1a600083018761310c565b613b2760208301866130d8565b613b34604083018561310c565b613b41606083018461310c565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613bb382612fa2565b9150613bbe83612fa2565b925082613bce57613bcd613a49565b5b828204905092915050565b6000819050919050565b6000613bfe613bf9613bf484613bd9565b613901565b6130cb565b9050919050565b613c0e81613be3565b82525050565b6000604082019050613c296000830185613c05565b613c36602083018461304e565b939250505056fea264697066735822122079026863f2b91960328183d0208385ff1b238a7b7728c21f4c82a7e4317b1a5864736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x55E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DA JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x542 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x4A6 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x404 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x587CDE1E GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3AE JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x314 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2AC JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x3033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x3033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x30E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x311B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x7D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x3136 JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31C PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x2F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x31D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E6 PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x402 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43C PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x460 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x3136 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AE PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x3392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CC PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x2F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x3033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x578 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x3492 JUMP JUMPDEST PUSH2 0xCBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x594 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58F SWAP2 SWAP1 PUSH2 0x3534 JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH2 0xEA6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x605 SWAP1 PUSH2 0x369D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x631 SWAP1 PUSH2 0x369D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x653 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x661 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x693 PUSH2 0xF58 JUMP JUMPDEST SWAP1 POP PUSH2 0x6A0 DUP2 DUP6 DUP6 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C0 PUSH2 0xF58 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CD DUP6 DUP3 DUP6 PUSH2 0xF72 JUMP JUMPDEST PUSH2 0x6D8 DUP6 DUP6 DUP6 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F7 PUSH2 0x10FA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x707 PUSH2 0xACE JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0x757 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74E SWAP3 SWAP2 SWAP1 PUSH2 0x36CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B0 PUSH2 0x763 DUP5 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x120B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7DD PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x7E7 DUP3 DUP3 PUSH2 0x138C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7FC PUSH2 0x7F6 PUSH2 0xF58 JUMP JUMPDEST DUP3 PUSH2 0x140E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D74696D657374616D70000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AF PUSH2 0xF58 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BB DUP2 DUP4 PUSH2 0x1490 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CA DUP3 PUSH2 0x15A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x92B PUSH1 0x0 PUSH2 0x15FC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x93F DUP3 PUSH2 0x939 PUSH2 0xF58 JUMP JUMPDEST DUP4 PUSH2 0xF72 JUMP JUMPDEST PUSH2 0x949 DUP3 DUP3 PUSH2 0x140E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x958 DUP3 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x973 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x97B PUSH2 0x170F JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99C JUMPI PUSH2 0x99B PUSH2 0x36F7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9CA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA3E PUSH2 0xACE JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0xA8E JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA85 SWAP3 SWAP2 SWAP1 PUSH2 0x36CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAAA PUSH2 0xA9A DUP5 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0xB PUSH2 0x120B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAE5 SWAP1 PUSH2 0x369D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB11 SWAP1 PUSH2 0x369D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB5E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB33 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB5E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB41 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x174A JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBDF PUSH2 0xF58 JUMP JUMPDEST SWAP1 POP PUSH2 0xBEC DUP2 DUP6 DUP6 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xC3C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9E PUSH2 0xC96 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC7B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x17B2 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x17CC JUMP JUMPDEST SWAP1 POP PUSH2 0xCAA DUP2 DUP8 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0xCB4 DUP2 DUP9 PUSH2 0x1490 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xD02 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xD31 DUP13 PUSH2 0x1854 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD47 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x376B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xD6A DUP3 PUSH2 0x17B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD7A DUP3 DUP8 DUP8 DUP8 PUSH2 0x17CC JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDEE JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE5 SWAP3 SWAP2 SWAP1 PUSH2 0x37CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDF9 DUP11 DUP11 DUP11 PUSH2 0xF60 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE94 PUSH2 0x2E4F JUMP JUMPDEST PUSH2 0xE9E DUP4 DUP4 PUSH2 0x18AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEAE PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF20 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF17 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF29 DUP2 PUSH2 0x15FC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x3824 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x3872 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF6D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x190C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7E DUP5 DUP5 PUSH2 0xE05 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1000 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFF0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFF DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x190C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1078 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106F SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10EA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F5 DUP4 DUP4 DUP4 PUSH2 0x1AE3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1176 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x11A3 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x11AB PUSH2 0x1AF3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x30 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FA SWAP3 SWAP2 SWAP1 PUSH2 0x393C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1293 JUMPI PUSH1 0x0 PUSH2 0x1232 DUP5 PUSH2 0x1B89 JUMP JUMPDEST DUP5 PUSH2 0x123D SWAP2 SWAP1 PUSH2 0x3965 JUMP JUMPDEST SWAP1 POP PUSH2 0x124C DUP8 PUSH1 0x0 ADD DUP3 PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP7 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1281 JUMPI DUP1 SWAP2 POP PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x3999 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x12A4 DUP8 PUSH1 0x0 ADD DUP8 DUP6 DUP6 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x12F6 JUMPI PUSH2 0x12C7 DUP8 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x12C2 SWAP2 SWAP1 PUSH2 0x3965 JUMP JUMPDEST PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x130D PUSH2 0xF58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x132B PUSH2 0xA09 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x138A JUMPI PUSH2 0x134E PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1381 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13FE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F5 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x140A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1AE3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1480 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1477 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148C DUP3 PUSH1 0x0 DUP4 PUSH2 0x1AE3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149B DUP4 PUSH2 0x83C JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x159F DUP2 DUP4 PUSH2 0x159A DUP7 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x1D22 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F5 PUSH2 0x15F0 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1F9B JUMP JUMPDEST PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CD DUP3 PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x170A PUSH1 0x6 PUSH32 0x0 PUSH2 0x204D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1745 PUSH1 0x7 PUSH32 0x0 PUSH2 0x204D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x17A7 JUMPI PUSH2 0x1778 DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1773 SWAP2 SWAP1 PUSH2 0x3965 JUMP JUMPDEST PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C5 PUSH2 0x17BF PUSH2 0x10FA JUMP JUMPDEST DUP4 PUSH2 0x20FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x17DE DUP9 DUP9 DUP9 DUP9 PUSH2 0x213E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x17EE DUP3 DUP3 PUSH2 0x2232 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1807 DUP4 PUSH2 0x1854 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x184F JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1846 SWAP3 SWAP2 SWAP1 PUSH2 0x39CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B3 PUSH2 0x2E4F JUMP JUMPDEST PUSH2 0x1904 DUP3 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2396 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x197E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1975 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19F0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E7 SWAP2 SWAP1 PUSH2 0x319F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1ADD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1AD4 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1AEE DUP4 DUP4 DUP4 PUSH2 0x246B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B6E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x1B9B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1BA8 DUP5 PUSH2 0x251C JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BC2 JUMPI PUSH2 0x1BC1 PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BDB JUMPI PUSH2 0x1BDA PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BF4 JUMPI PUSH2 0x1BF3 PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C0D JUMPI PUSH2 0x1C0C PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C26 JUMPI PUSH2 0x1C25 PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C3F JUMPI PUSH2 0x1C3E PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1C79 DUP2 DUP3 DUP6 DUP2 PUSH2 0x1C73 JUMPI PUSH2 0x1C72 PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DIV PUSH2 0x25FD JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1D05 JUMPI PUSH1 0x0 PUSH2 0x1CAE DUP5 DUP5 PUSH2 0x2616 JUMP JUMPDEST SWAP1 POP DUP5 PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x1CC3 DUP8 DUP4 PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1CEF JUMPI DUP1 SWAP3 POP PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1CFC SWAP2 SWAP1 PUSH2 0x3999 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x1C9A JUMP JUMPDEST DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1B DUP3 PUSH2 0x8D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1D5E JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1F96 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E7C JUMPI PUSH1 0x0 DUP1 PUSH2 0x1DED PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF42 PUSH2 0x1DE8 DUP7 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x26AA JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E71 SWAP3 SWAP2 SWAP1 PUSH2 0x3A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F95 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1F06 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF2C PUSH2 0x1F01 DUP7 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x26AA JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F8A SWAP3 SWAP2 SWAP1 PUSH2 0x3A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1FFC JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF3 SWAP3 SWAP2 SWAP1 PUSH2 0x3ADC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x206A JUMPI PUSH2 0x2063 DUP4 PUSH2 0x26EA JUMP JUMPDEST SWAP1 POP PUSH2 0x20F7 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x2076 SWAP1 PUSH2 0x369D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20A2 SWAP1 PUSH2 0x369D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x217E JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2228 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x21A3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2219 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x2228 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2246 JUMPI PUSH2 0x2245 PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2259 JUMPI PUSH2 0x2258 PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2392 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2273 JUMPI PUSH2 0x2272 PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2286 JUMPI PUSH2 0x2285 PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x22BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22D1 JUMPI PUSH2 0x22D0 PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22E4 JUMPI PUSH2 0x22E3 PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2329 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2320 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x233C JUMPI PUSH2 0x233B PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x234F JUMPI PUSH2 0x234E PUSH2 0x3B4A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2391 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2388 SWAP2 SWAP1 PUSH2 0x311B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x239E PUSH2 0x2E4F JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x23BA JUMPI PUSH2 0x23B9 PUSH2 0x3B79 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2476 DUP4 DUP4 DUP4 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x250C JUMPI PUSH1 0x0 PUSH2 0x24B4 PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24C0 PUSH2 0x2983 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2509 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x1CB15D2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2500 SWAP3 SWAP2 SWAP1 PUSH2 0x3A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST PUSH2 0x2517 DUP4 DUP4 DUP4 PUSH2 0x29A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x253E JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2559 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2574 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x258F JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x25AA JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x25C5 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x25E0 JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x25F4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x260C JUMPI DUP2 PUSH2 0x260E JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2627 SWAP2 SWAP1 PUSH2 0x3BA8 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2634 SWAP2 SWAP1 PUSH2 0x3999 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x26A2 JUMPI PUSH1 0xD0 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2699 SWAP3 SWAP2 SWAP1 PUSH2 0x3C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x26DE PUSH2 0x26B8 PUSH2 0xACE JUMP JUMPDEST PUSH2 0x26CE PUSH2 0x26C4 DUP9 PUSH2 0x174A JUMP JUMPDEST DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x2A61 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x26F7 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2716 JUMPI PUSH2 0x2715 PUSH2 0x36F7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2748 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x27B0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x27A4 SWAP2 SWAP1 PUSH2 0x3999 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2883 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x283C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2833 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28CC JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2919 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2976 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x29F4 JUMPI PUSH2 0x29F1 PUSH1 0xB PUSH2 0xF2C PUSH2 0x29EC DUP5 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x26AA JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A41 JUMPI PUSH2 0x2A3E PUSH1 0xB PUSH2 0xF42 PUSH2 0x2A39 DUP5 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x26AA JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x2A5C PUSH2 0x2A4D DUP5 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x2A56 DUP5 PUSH2 0x83C JUMP JUMPDEST DUP4 PUSH2 0x1D22 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2A72 DUP6 PUSH1 0x0 ADD DUP6 DUP6 PUSH2 0x2ACE JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2AC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2D5F JUMPI PUSH1 0x0 PUSH2 0x2AFB DUP8 PUSH1 0x1 DUP5 PUSH2 0x2AF6 SWAP2 SWAP1 PUSH2 0x3965 JUMP JUMPDEST PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2BEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x2C6E JUMPI DUP5 PUSH2 0x2C1C DUP9 PUSH1 0x1 DUP6 PUSH2 0x2C17 SWAP2 SWAP1 PUSH2 0x3965 JUMP JUMPDEST PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2D4E JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 SWAP4 POP SWAP4 POP POP POP PUSH2 0x2E47 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EC7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2EAC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EEF DUP3 PUSH2 0x2E8D JUMP JUMPDEST PUSH2 0x2EF9 DUP2 DUP6 PUSH2 0x2E98 JUMP JUMPDEST SWAP4 POP PUSH2 0x2F09 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2EA9 JUMP JUMPDEST PUSH2 0x2F12 DUP2 PUSH2 0x2ED3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F37 DUP2 DUP5 PUSH2 0x2EE4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6F DUP3 PUSH2 0x2F44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F7F DUP2 PUSH2 0x2F64 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F9C DUP2 PUSH2 0x2F76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FB5 DUP2 PUSH2 0x2FA2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FD2 DUP2 PUSH2 0x2FAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FEF JUMPI PUSH2 0x2FEE PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FFD DUP6 DUP3 DUP7 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x300E DUP6 DUP3 DUP7 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x302D DUP2 PUSH2 0x3018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3048 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3057 DUP2 PUSH2 0x2FA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3072 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3091 JUMPI PUSH2 0x3090 PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x309F DUP7 DUP3 DUP8 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x30B0 DUP7 DUP3 DUP8 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x30C1 DUP7 DUP3 DUP8 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30E1 DUP2 PUSH2 0x30CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3115 DUP2 PUSH2 0x3102 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3130 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x310C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x314C JUMPI PUSH2 0x314B PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x315A DUP5 DUP3 DUP6 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3179 JUMPI PUSH2 0x3178 PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3187 DUP5 DUP3 DUP6 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3199 DUP2 PUSH2 0x2F64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31D3 DUP2 PUSH2 0x31BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3229 DUP2 PUSH2 0x31F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3264 DUP2 PUSH2 0x2FA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3276 DUP4 DUP4 PUSH2 0x325B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x329A DUP3 PUSH2 0x322F JUMP JUMPDEST PUSH2 0x32A4 DUP2 DUP6 PUSH2 0x323A JUMP JUMPDEST SWAP4 POP PUSH2 0x32AF DUP4 PUSH2 0x324B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32E0 JUMPI DUP2 MLOAD PUSH2 0x32C7 DUP9 DUP3 PUSH2 0x326A JUMP JUMPDEST SWAP8 POP PUSH2 0x32D2 DUP4 PUSH2 0x3282 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x32B3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x3302 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x3220 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3314 DUP2 DUP10 PUSH2 0x2EE4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3328 DUP2 DUP9 PUSH2 0x2EE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3337 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x3344 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x3351 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x310C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x3363 DUP2 DUP5 PUSH2 0x328F JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x338C DUP2 PUSH2 0x3371 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3383 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33B6 DUP2 PUSH2 0x30CB JUMP JUMPDEST DUP2 EQ PUSH2 0x33C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33D3 DUP2 PUSH2 0x33AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33E2 DUP2 PUSH2 0x3102 JUMP JUMPDEST DUP2 EQ PUSH2 0x33ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33FF DUP2 PUSH2 0x33D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3422 JUMPI PUSH2 0x3421 PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3430 DUP10 DUP3 DUP11 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3441 DUP10 DUP3 DUP11 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3452 DUP10 DUP3 DUP11 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3463 DUP10 DUP3 DUP11 ADD PUSH2 0x33C4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3474 DUP10 DUP3 DUP11 ADD PUSH2 0x33F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3485 DUP10 DUP3 DUP11 ADD PUSH2 0x33F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x34B1 JUMPI PUSH2 0x34B0 PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34BF DUP11 DUP3 DUP12 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x34D0 DUP11 DUP3 DUP12 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x34E1 DUP11 DUP3 DUP12 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x34F2 DUP11 DUP3 DUP12 ADD PUSH2 0x2FC3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3503 DUP11 DUP3 DUP12 ADD PUSH2 0x33C4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3514 DUP11 DUP3 DUP12 ADD PUSH2 0x33F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3525 DUP11 DUP3 DUP12 ADD PUSH2 0x33F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x354B JUMPI PUSH2 0x354A PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3559 DUP6 DUP3 DUP7 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x356A DUP6 DUP3 DUP7 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x357D DUP2 PUSH2 0x31BA JUMP JUMPDEST DUP2 EQ PUSH2 0x3588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x359A DUP2 PUSH2 0x3574 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35B7 JUMPI PUSH2 0x35B6 PUSH2 0x2F3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35C5 DUP6 DUP3 DUP7 ADD PUSH2 0x2F8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35D6 DUP6 DUP3 DUP7 ADD PUSH2 0x358B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x35E9 DUP2 PUSH2 0x3371 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x361E DUP2 PUSH2 0x35EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x363A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x35E0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x364D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3615 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3668 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x36B5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x36C8 JUMPI PUSH2 0x36C7 PUSH2 0x366E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x36E3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x36F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3383 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x373B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x3748 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x3755 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x3762 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3780 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x378D PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x379A PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x37A7 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x37B4 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x37C1 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x37E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x37EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3190 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x382F DUP3 PUSH2 0x35EF JUMP JUMPDEST SWAP2 POP PUSH2 0x383A DUP4 PUSH2 0x35EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x386C JUMPI PUSH2 0x386B PUSH2 0x37F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x387D DUP3 PUSH2 0x35EF JUMP JUMPDEST SWAP2 POP PUSH2 0x3888 DUP4 PUSH2 0x35EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38BA JUMPI PUSH2 0x38B9 PUSH2 0x37F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x38D5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x38E2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x38EF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3926 PUSH2 0x3921 PUSH2 0x391C DUP5 PUSH2 0x38F7 JUMP JUMPDEST PUSH2 0x3901 JUMP JUMPDEST PUSH2 0x30CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3936 DUP2 PUSH2 0x390B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3951 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x392D JUMP JUMPDEST PUSH2 0x395E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3970 DUP3 PUSH2 0x2FA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x397B DUP4 PUSH2 0x2FA2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3993 JUMPI PUSH2 0x3992 PUSH2 0x37F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39A4 DUP3 PUSH2 0x2FA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x39AF DUP4 PUSH2 0x2FA2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x39C7 JUMPI PUSH2 0x39C6 PUSH2 0x37F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x39E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3190 JUMP JUMPDEST PUSH2 0x39EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3A0B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x3A18 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x3A25 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x3A32 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x3A3F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3190 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A8D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x3A9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AC6 PUSH2 0x3AC1 PUSH2 0x3ABC DUP5 PUSH2 0x3AA1 JUMP JUMPDEST PUSH2 0x3901 JUMP JUMPDEST PUSH2 0x30CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AD6 DUP2 PUSH2 0x3AAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3AF1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3ACD JUMP JUMPDEST PUSH2 0x3AFE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3B1A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x3B27 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x30D8 JUMP JUMPDEST PUSH2 0x3B34 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x3B41 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x310C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BB3 DUP3 PUSH2 0x2FA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BBE DUP4 PUSH2 0x2FA2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3BCE JUMPI PUSH2 0x3BCD PUSH2 0x3A49 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BFE PUSH2 0x3BF9 PUSH2 0x3BF4 DUP5 PUSH2 0x3BD9 JUMP JUMPDEST PUSH2 0x3901 JUMP JUMPDEST PUSH2 0x30CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C0E DUP2 PUSH2 0x3BE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C29 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C05 JUMP JUMPDEST PUSH2 0x3C36 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x304E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x26863F2B91960328183D0208385FF1B238A7B7728C21F4C82A7 0xE4 BALANCE PUSH28 0x1A5864736F6C63430008180033000000000000000000000000000000 ","sourceMap":"439:1082:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3922:364:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;740:93:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1000:107:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5539:117:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5738:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3208:126:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1349:170:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:20;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4922:341:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;839:102:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3402:135:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5954:554:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1680:672:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3411:163:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:7;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:10:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;3922:364:2:-;4009:7;4028:23;4054:7;:5;:7::i;:::-;4028:33;;4088:16;4075:29;;:9;:29;4071:115;;4147:9;4158:16;4127:48;;;;;;;;;;;;:::i;:::-;;;;;;;;4071:115;4202:77;4250:28;4268:9;4250:17;:28::i;:::-;4202:20;:29;4223:7;4202:29;;;;;;;;;;;;;;;:47;;:77;;;;:::i;:::-;4195:84;;;;;3922:364;;;;:::o;740:93:27:-;1531:13:0;:11;:13::i;:::-;809:17:27::1;815:2;819:6;809:5;:17::i;:::-;740:93:::0;;:::o;618:87:9:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;1000:107:27:-;1052:13;1077:23;;;;;;;;;;;;;;;;;;;1000:107;:::o;5539:117:2:-;5604:7;5630:10;:19;5641:7;5630:19;;;;;;;;;;;;;;;;;;;;;;;;;5623:26;;5539:117;;;:::o;5738:138::-;5800:15;5818:12;:10;:12::i;:::-;5800:30;;5840:29;5850:7;5859:9;5840;:29::i;:::-;5790:86;5738:138;:::o;3208:126:11:-;3278:6;3303:24;3319:7;3303:15;:24::i;:::-;3296:31;;3208:126;;;:::o;3299:116:7:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:9:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1349:170:27:-;1463:7;1493:19;1506:5;1493:12;:19::i;:::-;1486:26;;1349:170;;;:::o;5144:557:20:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4922:341:2:-;4998:7;5017:23;5043:7;:5;:7::i;:::-;5017:33;;5077:16;5064:29;;:9;:29;5060:115;;5136:9;5147:16;5116:48;;;;;;;;;;;;:::i;:::-;;;;;;;;5060:115;5191:65;5227:28;5245:9;5227:17;:28::i;:::-;5191:17;:35;;:65;;;;:::i;:::-;5184:72;;;;;4922:341;;;:::o;839:102:27:-;886:6;918:15;904:30;;839:102;:::o;2276:93:7:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3402:135:2:-;3466:7;3492:38;:20;:29;3513:7;3492:29;;;;;;;;;;;;;;;:36;:38::i;:::-;3485:45;;;;3402:135;;;:::o;3610:178:7:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;5954:554:2:-;6159:6;6141:15;:24;6137:91;;;6210:6;6188:29;;;;;;;;;;;:::i;:::-;;;;;;;;6137:91;6237:14;6254:168;6281:86;2063:71;6340:9;6351:5;6358:6;6308:57;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6298:68;;;;;;6281:16;:86::i;:::-;6381:1;6396;6411;6254:13;:168::i;:::-;6237:185;;6432:31;6449:6;6457:5;6432:16;:31::i;:::-;6473:28;6483:6;6491:9;6473;:28::i;:::-;6127:381;5954:554;;;;;;:::o;1680:672:10:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:7:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;3411:163:11:-;3490:32;;:::i;:::-;3541:26;3554:7;3563:3;3541:12;:26::i;:::-;3534:33;;3411:163;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;9277:96:2:-;9335:7;9365:1;9361;:5;;;;:::i;:::-;9354:12;;9277:96;;;;:::o;9379:101::-;9442:7;9472:1;9468;:5;;;;:::i;:::-;9461:12;;9379:101;;;;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;8989:128:7:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:20:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;14291:213:23:-;14347:6;14377:16;14369:24;;:5;:24;14365:103;;;14447:2;14451:5;14416:41;;;;;;;;;;;;:::i;:::-;;;;;;;;14365:103;14491:5;14477:20;;14291:213;;;:::o;9441:606:25:-;9526:7;9545:11;9559:4;:17;;:24;;;;9545:38;;9594:11;9619:12;9634:3;9619:18;;9658:1;9652:3;:7;9648:234;;;9675:11;9695:14;9705:3;9695:9;:14::i;:::-;9689:3;:20;;;;:::i;:::-;9675:34;;9733:37;9747:4;:17;;9766:3;9733:13;:37::i;:::-;:42;;;;;;;;;;;;9727:48;;:3;:48;;;9723:149;;;9802:3;9795:10;;9723:149;;;9856:1;9850:3;:7;;;;:::i;:::-;9844:13;;9723:149;9661:221;9648:234;9892:11;9906:53;9925:4;:17;;9944:3;9949;9954:4;9906:18;:53::i;:::-;9892:67;;9984:1;9977:3;:8;:63;;9992:41;10006:4;:17;;10031:1;10025:3;:7;;;;:::i;:::-;9992:13;:41::i;:::-;:48;;;;;;;;;;;;9977:63;;;9988:1;9977:63;9970:70;;;;;;9441:606;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:7:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;6686:312:2:-;6768:19;6790:18;6800:7;6790:9;:18::i;:::-;6768:40;;6840:9;6818:10;:19;6829:7;6818:19;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;6903:9;6865:48;;6890:11;6865:48;;6881:7;6865:48;;;;;;;;;;;;6923:68;6942:11;6955:9;6966:24;6982:7;6966:15;:24::i;:::-;6923:18;:68::i;:::-;6758:240;6686:312;;:::o;8572:162::-;8645:6;8670:57;8688:38;:20;:29;8709:7;8688:29;;;;;;;;;;;;;;;:36;:38::i;:::-;8670:17;:57::i;:::-;8663:64;;8572:162;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2406:143:10:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;6021:126:20:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;10167:206:25:-;10229:7;10248:11;10262:4;:17;;:24;;;;10248:38;;10310:1;10303:3;:8;:63;;10318:41;10332:4;:17;;10357:1;10351:3;:7;;;;:::i;:::-;10318:13;:41::i;:::-;:48;;;;;;;;;;;;10303:63;;;10314:1;10303:63;10296:70;;;10167:206;;;:::o;4917:176:20:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:19:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;1265:222:15:-;1348:15;1366:16;1376:5;1366:9;:16::i;:::-;1348:34;;1405:7;1396:5;:16;1392:89;;1455:5;1462:7;1435:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1392:89;1338:149;1265:222;;:::o;759:395::-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;8811:199:2:-;8915:32;;:::i;:::-;8966:37;8999:3;8966:20;:29;8987:7;8966:29;;;;;;;;;;;;;;;:32;;:37;;;;:::i;:::-;8959:44;;8811:199;;;;:::o;9949:432:7:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;1181:162:27:-;1306:30;1320:4;1326:2;1330:5;1306:13;:30::i;:::-;1181:162;;;:::o;4113:179:20:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;8587:1642:22:-;8635:7;8663:1;8658;:6;8654:45;;8687:1;8680:8;;;;8654:45;9378:14;9412:1;9401:7;9406:1;9401:4;:7::i;:::-;:12;;9395:1;:19;;9378:36;;9873:1;9862:6;9858:1;:10;;;;;:::i;:::-;;;9849:6;:19;9848:26;;9839:35;;9922:1;9911:6;9907:1;:10;;;;;:::i;:::-;;;9898:6;:19;9897:26;;9888:35;;9971:1;9960:6;9956:1;:10;;;;;:::i;:::-;;;9947:6;:19;9946:26;;9937:35;;10020:1;10009:6;10005:1;:10;;;;;:::i;:::-;;;9996:6;:19;9995:26;;9986:35;;10069:1;10058:6;10054:1;:10;;;;;:::i;:::-;;;10045:6;:19;10044:26;;10035:35;;10118:1;10107:6;10103:1;:10;;;;;:::i;:::-;;;10094:6;:19;10093:26;;10084:35;;10167:1;10156:6;10152:1;:10;;;;;:::i;:::-;;;10143:6;:19;10142:26;;10133:35;;10189:23;10193:6;10205;10201:1;:10;;;;;:::i;:::-;;;10189:3;:23::i;:::-;10182:30;;;8587:1642;;;;:::o;14099:265:25:-;14209:28;14282:9;14279:1;14272:20;14344:3;14337:4;14334:1;14324:18;14320:28;14305:43;;14099:265;;;;:::o;12736:433::-;12893:7;12912:230;12925:4;12919:3;:10;12912:230;;;12945:11;12959:23;12972:3;12977:4;12959:12;:23::i;:::-;12945:37;;13032:3;13000:35;;:24;13014:4;13020:3;13000:13;:24::i;:::-;:29;;;;;;;;;;;;:35;;;12996:136;;;13062:3;13055:10;;12996:136;;;13116:1;13110:3;:7;;;;:::i;:::-;13104:13;;12996:136;12931:211;12912:230;;;13158:4;13151:11;;12736:433;;;;;;:::o;3000:133:11:-;3082:7;3108:18;3118:7;3108:9;:18::i;:::-;3101:25;;3000:133;;;:::o;7717:780:2:-;7817:2;7809:10;;:4;:10;;;;:24;;;;;7832:1;7823:6;:10;7809:24;7805:686;;;7869:1;7853:18;;:4;:18;;;7849:315;;7892:16;7910;7930:150;7957:20;:26;7978:4;7957:26;;;;;;;;;;;;;;;8005:9;8036:26;8055:6;8036:18;:26::i;:::-;7930:5;:150::i;:::-;7891:189;;;;;;;;8124:4;8103:46;;;8130:8;8140;8103:46;;;;;;;:::i;:::-;;;;;;;;7873:291;;7849:315;8195:1;8181:16;;:2;:16;;;8177:304;;8218:16;8236;8256:143;8283:20;:24;8304:2;8283:24;;;;;;;;;;;;;;;8329:4;8355:26;8374:6;8355:18;:26::i;:::-;8256:5;:143::i;:::-;8217:182;;;;;;;;8443:2;8422:44;;;8447:8;8457;8422:44;;;;;;;:::i;:::-;;;;;;;;8199:282;;8177:304;7805:686;7717:780;;;:::o;11008:119:25:-;11070:7;11096:4;:17;;:24;;;;11089:31;;11008:119;;;:::o;15291:213:23:-;15347:6;15377:16;15369:24;;:5;:24;15365:103;;;15447:2;15451:5;15416:41;;;;;;;;;;;;:::i;:::-;;;;;;;;15365:103;15491:5;15477:20;;15291:213;;;:::o;538:107:15:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;3385:267:16:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:21:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:19:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;11199:138:25:-;11269:20;;:::i;:::-;11308:4;:17;;11326:3;11308:22;;;;;;;;;;:::i;:::-;;;;;;;;;11301:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11199:138;;;;:::o;2327:413:11:-;2421:30;2435:4;2441:2;2445:5;2421:13;:30::i;:::-;2481:1;2465:18;;:4;:18;;;2461:226;;2499:14;2516:13;:11;:13::i;:::-;2499:30;;2543:11;2557:12;:10;:12::i;:::-;2543:26;;2596:3;2587:6;:12;2583:94;;;2650:6;2658:3;2626:36;;;;;;;;;;;;:::i;:::-;;;;;;;;2583:94;2485:202;;2461:226;2696:37;2717:4;2723:2;2727:5;2696:20;:37::i;:::-;2327:413;;;:::o;10699:983:22:-;10751:7;10770:14;10787:1;10770:18;;10841:1;10835:3;10826:5;:12;;:16;10822:99;;;10872:3;10862:13;;;;;10903:3;10893:13;;;;10822:99;10952:1;10947:2;10938:5;:11;;:15;10934:96;;;10983:2;10973:12;;;;;11013:2;11003:12;;;;10934:96;11061:1;11056:2;11047:5;:11;;:15;11043:96;;;11092:2;11082:12;;;;;11122:2;11112:12;;;;11043:96;11170:1;11165:2;11156:5;:11;;:15;11152:96;;;11201:2;11191:12;;;;;11231:2;11221:12;;;;11152:96;11278:1;11274;11265:5;:10;;:14;11261:93;;;11309:1;11299:11;;;;;11338:1;11328:11;;;;11261:93;11384:1;11380;11371:5;:10;;:14;11367:93;;;11415:1;11405:11;;;;;11444:1;11434:11;;;;11367:93;11490:1;11486;11477:5;:10;;:14;11473:93;;;11521:1;11511:11;;;;;11550:1;11540:11;;;;11473:93;11596:1;11592;11583:5;:10;;:14;11579:64;;;11627:1;11617:11;;;;11579:64;11669:6;11662:13;;;10699:983;;;:::o;2557:104::-;2615:7;2645:1;2641;:5;:13;;2653:1;2641:13;;;2649:1;2641:13;2634:20;;2557:104;;;;:::o;2774:153::-;2836:7;2919:1;2914;2910;:5;2909:11;;;;:::i;:::-;2904:1;2900;:5;2899:21;;;;:::i;:::-;2892:28;;2774:153;;;;:::o;4169:218:23:-;4226:7;4257:17;4249:25;;:5;:25;4245:105;;;4328:3;4333:5;4297:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4245:105;4374:5;4359:21;;4169:218;;;:::o;9016:255:2:-;9183:7;9192;9218:46;9229:7;:5;:7::i;:::-;9238:25;9241:14;:5;:12;:14::i;:::-;9257:5;9238:2;:25;;:::i;:::-;9218:5;:10;;:46;;;;;:::i;:::-;9211:53;;;;9016:255;;;;;;:::o;2078:405:16:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;6271:1107:7:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;2084:103:11:-;2137:7;2163:17;2156:24;;;;2084:103;:::o;7232:399:2:-;7351:1;7335:18;;:4;:18;;;7331:107;;7369:58;7375:17;7394:4;7400:26;7419:6;7400:18;:26::i;:::-;7369:5;:58::i;:::-;;;7331:107;7465:1;7451:16;;:2;:16;;;7447:110;;7483:63;7489:17;7508:9;7519:26;7538:6;7519:18;:26::i;:::-;7483:5;:63::i;:::-;;;7447:110;7566:58;7585:15;7595:4;7585:9;:15::i;:::-;7602:13;7612:2;7602:9;:13::i;:::-;7617:6;7566:18;:58::i;:::-;7232:399;;;:::o;8050:162:25:-;8132:7;8141;8167:38;8175:4;:17;;8194:3;8199:5;8167:7;:38::i;:::-;8160:45;;;;8050:162;;;;;;:::o;2555:245:16:-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;11513:870:25:-;11604:7;11613;11632:11;11646:4;:11;;;;11632:25;;11678:1;11672:3;:7;11668:709;;;11747:25;11775:28;11789:4;11801:1;11795:3;:7;;;;:::i;:::-;11775:13;:28::i;:::-;11747:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11889:3;11877:15;;:4;:9;;;:15;;;11873:91;;;11919:30;;;;;;;;;;;;;;11873:91;12040:3;12027:16;;:4;:9;;;:16;;;12023:189;;12101:5;12063:28;12077:4;12089:1;12083:3;:7;;;;:::i;:::-;12063:13;:28::i;:::-;:35;;;:43;;;;;;;;;;;;;;;;;;12023:189;;;12145:4;12155:41;;;;;;;;12176:3;12155:41;;;;;;12189:5;12155:41;;;;;12145:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12023:189;12233:4;:11;;;12246:5;12225:27;;;;;;;;11668:709;12283:4;12293:41;;;;;;;;12314:3;12293:41;;;;;;12327:5;12293:41;;;;;12283:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12357:1;12360:5;12349:17;;;;;11513:870;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:28:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:::-;5682:6;5731:2;5719:9;5710:7;5706:23;5702:32;5699:119;;;5737:79;;:::i;:::-;5699:119;5857:1;5882:53;5927:7;5918:6;5907:9;5903:22;5882:53;:::i;:::-;5872:63;;5828:117;5623:329;;;;:::o;5958:118::-;6045:24;6063:5;6045:24;:::i;:::-;6040:3;6033:37;5958:118;;:::o;6082:222::-;6175:4;6213:2;6202:9;6198:18;6190:26;;6226:71;6294:1;6283:9;6279:17;6270:6;6226:71;:::i;:::-;6082:222;;;;:::o;6310:93::-;6346:7;6386:10;6379:5;6375:22;6364:33;;6310:93;;;:::o;6409:115::-;6494:23;6511:5;6494:23;:::i;:::-;6489:3;6482:36;6409:115;;:::o;6530:218::-;6621:4;6659:2;6648:9;6644:18;6636:26;;6672:69;6738:1;6727:9;6723:17;6714:6;6672:69;:::i;:::-;6530:218;;;;:::o;6754:149::-;6790:7;6830:66;6823:5;6819:78;6808:89;;6754:149;;;:::o;6909:115::-;6994:23;7011:5;6994:23;:::i;:::-;6989:3;6982:36;6909:115;;:::o;7030:114::-;7097:6;7131:5;7125:12;7115:22;;7030:114;;;:::o;7150:184::-;7249:11;7283:6;7278:3;7271:19;7323:4;7318:3;7314:14;7299:29;;7150:184;;;;:::o;7340:132::-;7407:4;7430:3;7422:11;;7460:4;7455:3;7451:14;7443:22;;7340:132;;;:::o;7478:108::-;7555:24;7573:5;7555:24;:::i;:::-;7550:3;7543:37;7478:108;;:::o;7592:179::-;7661:10;7682:46;7724:3;7716:6;7682:46;:::i;:::-;7760:4;7755:3;7751:14;7737:28;;7592:179;;;;:::o;7777:113::-;7847:4;7879;7874:3;7870:14;7862:22;;7777:113;;;:::o;7926:732::-;8045:3;8074:54;8122:5;8074:54;:::i;:::-;8144:86;8223:6;8218:3;8144:86;:::i;:::-;8137:93;;8254:56;8304:5;8254:56;:::i;:::-;8333:7;8364:1;8349:284;8374:6;8371:1;8368:13;8349:284;;;8450:6;8444:13;8477:63;8536:3;8521:13;8477:63;:::i;:::-;8470:70;;8563:60;8616:6;8563:60;:::i;:::-;8553:70;;8409:224;8396:1;8393;8389:9;8384:14;;8349:284;;;8353:14;8649:3;8642:10;;8050:608;;;7926:732;;;;:::o;8664:1215::-;9013:4;9051:3;9040:9;9036:19;9028:27;;9065:69;9131:1;9120:9;9116:17;9107:6;9065:69;:::i;:::-;9181:9;9175:4;9171:20;9166:2;9155:9;9151:18;9144:48;9209:78;9282:4;9273:6;9209:78;:::i;:::-;9201:86;;9334:9;9328:4;9324:20;9319:2;9308:9;9304:18;9297:48;9362:78;9435:4;9426:6;9362:78;:::i;:::-;9354:86;;9450:72;9518:2;9507:9;9503:18;9494:6;9450:72;:::i;:::-;9532:73;9600:3;9589:9;9585:19;9576:6;9532:73;:::i;:::-;9615;9683:3;9672:9;9668:19;9659:6;9615:73;:::i;:::-;9736:9;9730:4;9726:20;9720:3;9709:9;9705:19;9698:49;9764:108;9867:4;9858:6;9764:108;:::i;:::-;9756:116;;8664:1215;;;;;;;;;;:::o;9885:97::-;9921:7;9961:14;9954:5;9950:26;9939:37;;9885:97;;;:::o;9988:115::-;10073:23;10090:5;10073:23;:::i;:::-;10068:3;10061:36;9988:115;;:::o;10109:218::-;10200:4;10238:2;10227:9;10223:18;10215:26;;10251:69;10317:1;10306:9;10302:17;10293:6;10251:69;:::i;:::-;10109:218;;;;:::o;10333:118::-;10404:22;10420:5;10404:22;:::i;:::-;10397:5;10394:33;10384:61;;10441:1;10438;10431:12;10384:61;10333:118;:::o;10457:135::-;10501:5;10539:6;10526:20;10517:29;;10555:31;10580:5;10555:31;:::i;:::-;10457:135;;;;:::o;10598:122::-;10671:24;10689:5;10671:24;:::i;:::-;10664:5;10661:35;10651:63;;10710:1;10707;10700:12;10651:63;10598:122;:::o;10726:139::-;10772:5;10810:6;10797:20;10788:29;;10826:33;10853:5;10826:33;:::i;:::-;10726:139;;;;:::o;10871:1053::-;10973:6;10981;10989;10997;11005;11013;11062:3;11050:9;11041:7;11037:23;11033:33;11030:120;;;11069:79;;:::i;:::-;11030:120;11189:1;11214:53;11259:7;11250:6;11239:9;11235:22;11214:53;:::i;:::-;11204:63;;11160:117;11316:2;11342:53;11387:7;11378:6;11367:9;11363:22;11342:53;:::i;:::-;11332:63;;11287:118;11444:2;11470:53;11515:7;11506:6;11495:9;11491:22;11470:53;:::i;:::-;11460:63;;11415:118;11572:2;11598:51;11641:7;11632:6;11621:9;11617:22;11598:51;:::i;:::-;11588:61;;11543:116;11698:3;11725:53;11770:7;11761:6;11750:9;11746:22;11725:53;:::i;:::-;11715:63;;11669:119;11827:3;11854:53;11899:7;11890:6;11879:9;11875:22;11854:53;:::i;:::-;11844:63;;11798:119;10871:1053;;;;;;;;:::o;11930:1199::-;12041:6;12049;12057;12065;12073;12081;12089;12138:3;12126:9;12117:7;12113:23;12109:33;12106:120;;;12145:79;;:::i;:::-;12106:120;12265:1;12290:53;12335:7;12326:6;12315:9;12311:22;12290:53;:::i;:::-;12280:63;;12236:117;12392:2;12418:53;12463:7;12454:6;12443:9;12439:22;12418:53;:::i;:::-;12408:63;;12363:118;12520:2;12546:53;12591:7;12582:6;12571:9;12567:22;12546:53;:::i;:::-;12536:63;;12491:118;12648:2;12674:53;12719:7;12710:6;12699:9;12695:22;12674:53;:::i;:::-;12664:63;;12619:118;12776:3;12803:51;12846:7;12837:6;12826:9;12822:22;12803:51;:::i;:::-;12793:61;;12747:117;12903:3;12930:53;12975:7;12966:6;12955:9;12951:22;12930:53;:::i;:::-;12920:63;;12874:119;13032:3;13059:53;13104:7;13095:6;13084:9;13080:22;13059:53;:::i;:::-;13049:63;;13003:119;11930:1199;;;;;;;;;;:::o;13135:474::-;13203:6;13211;13260:2;13248:9;13239:7;13235:23;13231:32;13228:119;;;13266:79;;:::i;:::-;13228:119;13386:1;13411:53;13456:7;13447:6;13436:9;13432:22;13411:53;:::i;:::-;13401:63;;13357:117;13513:2;13539:53;13584:7;13575:6;13564:9;13560:22;13539:53;:::i;:::-;13529:63;;13484:118;13135:474;;;;;:::o;13615:120::-;13687:23;13704:5;13687:23;:::i;:::-;13680:5;13677:34;13667:62;;13725:1;13722;13715:12;13667:62;13615:120;:::o;13741:137::-;13786:5;13824:6;13811:20;13802:29;;13840:32;13866:5;13840:32;:::i;:::-;13741:137;;;;:::o;13884:472::-;13951:6;13959;14008:2;13996:9;13987:7;13983:23;13979:32;13976:119;;;14014:79;;:::i;:::-;13976:119;14134:1;14159:53;14204:7;14195:6;14184:9;14180:22;14159:53;:::i;:::-;14149:63;;14105:117;14261:2;14287:52;14331:7;14322:6;14311:9;14307:22;14287:52;:::i;:::-;14277:62;;14232:117;13884:472;;;;;:::o;14362:105::-;14437:23;14454:5;14437:23;:::i;:::-;14432:3;14425:36;14362:105;;:::o;14473:138::-;14510:7;14550:54;14543:5;14539:66;14528:77;;14473:138;;;:::o;14617:108::-;14694:24;14712:5;14694:24;:::i;:::-;14689:3;14682:37;14617:108;;:::o;14807:519::-;14966:4;14961:3;14957:14;15053:4;15046:5;15042:16;15036:23;15072:61;15127:4;15122:3;15118:14;15104:12;15072:61;:::i;:::-;14981:162;15227:4;15220:5;15216:16;15210:23;15246:63;15303:4;15298:3;15294:14;15280:12;15246:63;:::i;:::-;15153:166;14935:391;14807:519;;:::o;15332:346::-;15487:4;15525:2;15514:9;15510:18;15502:26;;15538:133;15668:1;15657:9;15653:17;15644:6;15538:133;:::i;:::-;15332:346;;;;:::o;15684:180::-;15732:77;15729:1;15722:88;15829:4;15826:1;15819:15;15853:4;15850:1;15843:15;15870:320;15914:6;15951:1;15945:4;15941:12;15931:22;;15998:1;15992:4;15988:12;16019:18;16009:81;;16075:4;16067:6;16063:17;16053:27;;16009:81;16137:2;16129:6;16126:14;16106:18;16103:38;16100:84;;16156:18;;:::i;:::-;16100:84;15921:269;15870:320;;;:::o;16196:328::-;16315:4;16353:2;16342:9;16338:18;16330:26;;16366:71;16434:1;16423:9;16419:17;16410:6;16366:71;:::i;:::-;16447:70;16513:2;16502:9;16498:18;16489:6;16447:70;:::i;:::-;16196:328;;;;;:::o;16530:180::-;16578:77;16575:1;16568:88;16675:4;16672:1;16665:15;16699:4;16696:1;16689:15;16716:553;16893:4;16931:3;16920:9;16916:19;16908:27;;16945:71;17013:1;17002:9;16998:17;16989:6;16945:71;:::i;:::-;17026:72;17094:2;17083:9;17079:18;17070:6;17026:72;:::i;:::-;17108;17176:2;17165:9;17161:18;17152:6;17108:72;:::i;:::-;17190;17258:2;17247:9;17243:18;17234:6;17190:72;:::i;:::-;16716:553;;;;;;;:::o;17275:775::-;17508:4;17546:3;17535:9;17531:19;17523:27;;17560:71;17628:1;17617:9;17613:17;17604:6;17560:71;:::i;:::-;17641:72;17709:2;17698:9;17694:18;17685:6;17641:72;:::i;:::-;17723;17791:2;17780:9;17776:18;17767:6;17723:72;:::i;:::-;17805;17873:2;17862:9;17858:18;17849:6;17805:72;:::i;:::-;17887:73;17955:3;17944:9;17940:19;17931:6;17887:73;:::i;:::-;17970;18038:3;18027:9;18023:19;18014:6;17970:73;:::i;:::-;17275:775;;;;;;;;;:::o;18056:332::-;18177:4;18215:2;18204:9;18200:18;18192:26;;18228:71;18296:1;18285:9;18281:17;18272:6;18228:71;:::i;:::-;18309:72;18377:2;18366:9;18362:18;18353:6;18309:72;:::i;:::-;18056:332;;;;;:::o;18394:180::-;18442:77;18439:1;18432:88;18539:4;18536:1;18529:15;18563:4;18560:1;18553:15;18580:244;18620:3;18639:20;18657:1;18639:20;:::i;:::-;18634:25;;18673:20;18691:1;18673:20;:::i;:::-;18668:25;;18716:1;18713;18709:9;18702:16;;18739:54;18734:3;18731:63;18728:89;;;18797:18;;:::i;:::-;18728:89;18580:244;;;;:::o;18830:247::-;18870:4;18890:20;18908:1;18890:20;:::i;:::-;18885:25;;18924:20;18942:1;18924:20;:::i;:::-;18919:25;;18968:1;18965;18961:9;18953:17;;18992:54;18986:4;18983:64;18980:90;;;19050:18;;:::i;:::-;18980:90;18830:247;;;;:::o;19083:442::-;19232:4;19270:2;19259:9;19255:18;19247:26;;19283:71;19351:1;19340:9;19336:17;19327:6;19283:71;:::i;:::-;19364:72;19432:2;19421:9;19417:18;19408:6;19364:72;:::i;:::-;19446;19514:2;19503:9;19499:18;19490:6;19446:72;:::i;:::-;19083:442;;;;;;:::o;19531:86::-;19577:7;19606:5;19595:16;;19531:86;;;:::o;19623:60::-;19651:3;19672:5;19665:12;;19623:60;;;:::o;19689:156::-;19746:9;19779:60;19795:43;19804:33;19831:5;19804:33;:::i;:::-;19795:43;:::i;:::-;19779:60;:::i;:::-;19766:73;;19689:156;;;:::o;19851:145::-;19945:44;19983:5;19945:44;:::i;:::-;19940:3;19933:57;19851:145;;:::o;20002:346::-;20130:4;20168:2;20157:9;20153:18;20145:26;;20181:78;20256:1;20245:9;20241:17;20232:6;20181:78;:::i;:::-;20269:72;20337:2;20326:9;20322:18;20313:6;20269:72;:::i;:::-;20002:346;;;;;:::o;20354:194::-;20394:4;20414:20;20432:1;20414:20;:::i;:::-;20409:25;;20448:20;20466:1;20448:20;:::i;:::-;20443:25;;20492:1;20489;20485:9;20477:17;;20516:1;20510:4;20507:11;20504:37;;;20521:18;;:::i;:::-;20504:37;20354:194;;;;:::o;20554:191::-;20594:3;20613:20;20631:1;20613:20;:::i;:::-;20608:25;;20647:20;20665:1;20647:20;:::i;:::-;20642:25;;20690:1;20687;20683:9;20676:16;;20711:3;20708:1;20705:10;20702:36;;;20718:18;;:::i;:::-;20702:36;20554:191;;;;:::o;20751:332::-;20872:4;20910:2;20899:9;20895:18;20887:26;;20923:71;20991:1;20980:9;20976:17;20967:6;20923:71;:::i;:::-;21004:72;21072:2;21061:9;21057:18;21048:6;21004:72;:::i;:::-;20751:332;;;;;:::o;21089:664::-;21294:4;21332:3;21321:9;21317:19;21309:27;;21346:71;21414:1;21403:9;21399:17;21390:6;21346:71;:::i;:::-;21427:72;21495:2;21484:9;21480:18;21471:6;21427:72;:::i;:::-;21509;21577:2;21566:9;21562:18;21553:6;21509:72;:::i;:::-;21591;21659:2;21648:9;21644:18;21635:6;21591:72;:::i;:::-;21673:73;21741:3;21730:9;21726:19;21717:6;21673:73;:::i;:::-;21089:664;;;;;;;;:::o;21759:180::-;21807:77;21804:1;21797:88;21904:4;21901:1;21894:15;21928:4;21925:1;21918:15;21945:332;22066:4;22104:2;22093:9;22089:18;22081:26;;22117:71;22185:1;22174:9;22170:17;22161:6;22117:71;:::i;:::-;22198:72;22266:2;22255:9;22251:18;22242:6;22198:72;:::i;:::-;21945:332;;;;;:::o;22283:86::-;22329:7;22358:5;22347:16;;22283:86;;;:::o;22375:156::-;22432:9;22465:60;22481:43;22490:33;22517:5;22490:33;:::i;:::-;22481:43;:::i;:::-;22465:60;:::i;:::-;22452:73;;22375:156;;;:::o;22537:145::-;22631:44;22669:5;22631:44;:::i;:::-;22626:3;22619:57;22537:145;;:::o;22688:346::-;22816:4;22854:2;22843:9;22839:18;22831:26;;22867:78;22942:1;22931:9;22927:17;22918:6;22867:78;:::i;:::-;22955:72;23023:2;23012:9;23008:18;22999:6;22955:72;:::i;:::-;22688:346;;;;;:::o;23040:545::-;23213:4;23251:3;23240:9;23236:19;23228:27;;23265:71;23333:1;23322:9;23318:17;23309:6;23265:71;:::i;:::-;23346:68;23410:2;23399:9;23395:18;23386:6;23346:68;:::i;:::-;23424:72;23492:2;23481:9;23477:18;23468:6;23424:72;:::i;:::-;23506;23574:2;23563:9;23559:18;23550:6;23506:72;:::i;:::-;23040:545;;;;;;;:::o;23591:180::-;23639:77;23636:1;23629:88;23736:4;23733:1;23726:15;23760:4;23757:1;23750:15;23777:180;23825:77;23822:1;23815:88;23922:4;23919:1;23912:15;23946:4;23943:1;23936:15;23963:185;24003:1;24020:20;24038:1;24020:20;:::i;:::-;24015:25;;24054:20;24072:1;24054:20;:::i;:::-;24049:25;;24093:1;24083:35;;24098:18;;:::i;:::-;24083:35;24140:1;24137;24133:9;24128:14;;23963:185;;;;:::o;24154:87::-;24201:7;24230:5;24219:16;;24154:87;;;:::o;24247:158::-;24305:9;24338:61;24354:44;24363:34;24391:5;24363:34;:::i;:::-;24354:44;:::i;:::-;24338:61;:::i;:::-;24325:74;;24247:158;;;:::o;24411:147::-;24506:45;24545:5;24506:45;:::i;:::-;24501:3;24494:58;24411:147;;:::o;24564:348::-;24693:4;24731:2;24720:9;24716:18;24708:26;;24744:79;24820:1;24809:9;24805:17;24796:6;24744:79;:::i;:::-;24833:72;24901:2;24890:9;24886:18;24877:6;24833:72;:::i;:::-;24564:348;;;;;:::o"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceToken.sol\":\"GoverenceToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xb8f69828d41b3594afd7a8c6393565901c205d8b5baf5bd2e42dbac637172979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c790253821191ac46b2050d87df820d4209871f90c616381e2c2c00ff3eaac34\",\"dweb:/ipfs/QmcPETTyuZBzDRL39JNXj3SBMdx3Y9o4fPQLSZ27py5Jim\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x2a650f6e593cfe5ff2e514a17ea7f593ee70cefa1888066bc983a6308acff4b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a3477b9665a4b6d19f86bf2cfbfa8c08ba41193f15e68c0d75c0cab7e1fc753\",\"dweb:/ipfs/QmbcurrTatN1PBmkCWdrED8zhAqx5ah9Qp6uR8YwkKWA8V\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]},\"contracts/GovernanceToken.sol\":{\"keccak256\":\"0xb056c97183d05c316c548a45824801f0c2479667817801d1c3c75b0514b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3d7cee388d4517de655ebe3c6561176fa8049eece463e3fe6ddefabbaad678e\",\"dweb:/ipfs/QmeUhWa6Xnr825t9bzgqiTB8NB2jtEurTzo9ftNoySaL8x\"]}},\"version\":1}"}}}}}